{"ast":null,"code":"import _objectSpread from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\nimport _objectWithoutProperties from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectWithoutProperties.js\";\nvar _excluded = [\"valueToCopy\"];\n\nvar _jsxFileName = \"D:\\\\fl-carla\\\\src\\\\components\\\\common\\\\inputs\\\\ClipboardInput\\\\ClipboardInput.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport { Button, Tooltip } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { CopyOutlined } from '@ant-design/icons';\nimport { SuffixInput } from '../SuffixInput/SuffixInput';\nimport { notificationController } from 'controllers/notificationController';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var ClipboardInput = function ClipboardInput(_ref) {\n  _s();\n\n  var valueToCopy = _ref.valueToCopy,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var handleCopy = useCallback(function () {\n    return valueToCopy && navigator.clipboard.writeText(valueToCopy).then(function () {\n      notificationController.info({\n        message: t('common.copied')\n      });\n    });\n  }, [valueToCopy, t]);\n  return /*#__PURE__*/_jsxDEV(SuffixInput, _objectSpread({\n    suffix: /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: t('common.copy'),\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        disabled: !valueToCopy,\n        type: \"text\",\n        icon: /*#__PURE__*/_jsxDEV(CopyOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 74\n        }, _this),\n        onClick: handleCopy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, _this)\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ClipboardInput, \"0blCueXeMHFYUySsBXJvgkxGqlI=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ClipboardInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClipboardInput\");","map":{"version":3,"sources":["D:/fl-carla/src/components/common/inputs/ClipboardInput/ClipboardInput.tsx"],"names":["React","useCallback","Button","Tooltip","useTranslation","CopyOutlined","SuffixInput","notificationController","ClipboardInput","valueToCopy","props","t","handleCopy","navigator","clipboard","writeText","then","info","message"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,MAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,SAASC,sBAAT,QAAuC,oCAAvC;;AAMA,OAAO,IAAMC,cAA6C,GAAG,SAAhDA,cAAgD,OAA+B;AAAA;;AAAA,MAA5BC,WAA4B,QAA5BA,WAA4B;AAAA,MAAZC,KAAY;;AAC1F,wBAAcN,cAAc,EAA5B;AAAA,MAAQO,CAAR,mBAAQA,CAAR;;AAEA,MAAMC,UAAU,GAAGX,WAAW,CAC5B;AAAA,WACEQ,WAAW,IACXI,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BN,WAA9B,EAA2CO,IAA3C,CAAgD,YAAM;AACpDT,MAAAA,sBAAsB,CAACU,IAAvB,CAA4B;AAAEC,QAAAA,OAAO,EAAEP,CAAC,CAAC,eAAD;AAAZ,OAA5B;AACD,KAFD,CAFF;AAAA,GAD4B,EAM5B,CAACF,WAAD,EAAcE,CAAd,CAN4B,CAA9B;AASA,sBACE,QAAC,WAAD;AACE,IAAA,MAAM,eACJ,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEA,CAAC,CAAC,aAAD,CAAjB;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,QAAQ,EAAE,CAACF,WAAhC;AAA6C,QAAA,IAAI,EAAC,MAAlD;AAAyD,QAAA,IAAI,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,iBAA/D;AAAiF,QAAA,OAAO,EAAEG;AAA1F;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFJ,KAMMF,KANN;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CAtBM;;GAAMF,c;UACGJ,c;;;KADHI,c","sourcesContent":["import React, { useCallback } from 'react';\r\nimport { Button, Tooltip } from 'antd';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport { SuffixInput } from '../SuffixInput/SuffixInput';\r\nimport { InputProps } from '../Input/Input';\r\nimport { notificationController } from 'controllers/notificationController';\r\n\r\ninterface ClipboardInputProps extends InputProps {\r\n  valueToCopy?: string;\r\n}\r\n\r\nexport const ClipboardInput: React.FC<ClipboardInputProps> = ({ valueToCopy, ...props }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const handleCopy = useCallback(\r\n    () =>\r\n      valueToCopy &&\r\n      navigator.clipboard.writeText(valueToCopy).then(() => {\r\n        notificationController.info({ message: t('common.copied') });\r\n      }),\r\n    [valueToCopy, t],\r\n  );\r\n\r\n  return (\r\n    <SuffixInput\r\n      suffix={\r\n        <Tooltip title={t('common.copy')}>\r\n          <Button size=\"small\" disabled={!valueToCopy} type=\"text\" icon={<CopyOutlined />} onClick={handleCopy} />\r\n        </Tooltip>\r\n      }\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}