{"ast":null,"code":"import _slicedToArray from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"D:\\\\fl-carla\\\\src\\\\components\\\\auth\\\\ForgotPasswordForm\\\\ForgotPasswordForm.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport * as S from './ForgotPasswordForm.styles';\nimport * as Auth from '@app/components/layouts/AuthLayout/AuthLayout.styles';\nimport { useAppDispatch } from '@app/hooks/reduxHooks';\nimport { doResetPassword } from '@app/store/slices/authSlice';\nimport { notificationController } from '@app/controllers/notificationController';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar initValues = {\n  email: 'christopher.johnson@altence.com'\n};\nexport var ForgotPasswordForm = function ForgotPasswordForm() {\n  _s();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var navigate = useNavigate();\n  var dispatch = useAppDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var handleSubmit = function handleSubmit(values) {\n    setLoading(true);\n    dispatch(doResetPassword(values)).unwrap().then(function () {\n      navigate('/auth/security-code');\n    }).catch(function (err) {\n      notificationController.error({\n        message: err.message\n      });\n      setLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Auth.FormWrapper, {\n    children: /*#__PURE__*/_jsxDEV(BaseForm, {\n      layout: \"vertical\",\n      onFinish: handleSubmit,\n      requiredMark: \"optional\",\n      initialValues: initValues,\n      children: [/*#__PURE__*/_jsxDEV(Auth.BackWrapper, {\n        onClick: function onClick() {\n          return navigate(-1);\n        },\n        children: [/*#__PURE__*/_jsxDEV(Auth.BackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, _this), t('common.back')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Auth.FormTitle, {\n        children: t('common.resetPassword')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(S.Description, {\n        children: t('forgotPassword.description')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Auth.FormItem, {\n        name: \"email\",\n        label: t('common.email'),\n        rules: [{\n          required: true,\n          message: t('common.emailError')\n        }],\n        children: /*#__PURE__*/_jsxDEV(Auth.FormInput, {\n          placeholder: t('common.email')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(BaseForm.Item, {\n        noStyle: true,\n        children: /*#__PURE__*/_jsxDEV(S.SubmitButton, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: isLoading,\n          children: t('forgotPassword.sendInstructions')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ForgotPasswordForm, \"azDs0u2xwfLQHfNwyECB+6lAD3U=\", false, function () {\n  return [useTranslation, useNavigate, useAppDispatch];\n});\n\n_c = ForgotPasswordForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPasswordForm\");","map":{"version":3,"sources":["D:/fl-carla/src/components/auth/ForgotPasswordForm/ForgotPasswordForm.tsx"],"names":["React","useState","useNavigate","useTranslation","BaseForm","S","Auth","useAppDispatch","doResetPassword","notificationController","initValues","email","ForgotPasswordForm","t","navigate","dispatch","isLoading","setLoading","handleSubmit","values","unwrap","then","catch","err","error","message","required"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,QAAT,QAAyB,gDAAzB;AACA,OAAO,KAAKC,CAAZ,MAAmB,6BAAnB;AACA,OAAO,KAAKC,IAAZ,MAAsB,sDAAtB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,SAASC,sBAAT,QAAuC,yCAAvC;;AAMA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAAnB;AAIA,OAAO,IAAMC,kBAA4B,GAAG,SAA/BA,kBAA+B,GAAM;AAAA;;AAChD,wBAAcT,cAAc,EAA5B;AAAA,MAAQU,CAAR,mBAAQA,CAAR;;AACA,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,MAAMa,QAAQ,GAAGR,cAAc,EAA/B;;AACA,kBAAgCN,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOe,SAAP;AAAA,MAAkBC,UAAlB;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAAoC;AACvDF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,IAAAA,QAAQ,CAACP,eAAe,CAACW,MAAD,CAAhB,CAAR,CACGC,MADH,GAEGC,IAFH,CAEQ,YAAM;AACVP,MAAAA,QAAQ,CAAC,qBAAD,CAAR;AACD,KAJH,EAKGQ,KALH,CAKS,UAACC,GAAD,EAAS;AACdd,MAAAA,sBAAsB,CAACe,KAAvB,CAA6B;AAAEC,QAAAA,OAAO,EAAEF,GAAG,CAACE;AAAf,OAA7B;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KARH;AASD,GAXD;;AAaA,sBACE,QAAC,IAAD,CAAM,WAAN;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,MAAM,EAAC,UAAjB;AAA4B,MAAA,QAAQ,EAAEC,YAAtC;AAAoD,MAAA,YAAY,EAAC,UAAjE;AAA4E,MAAA,aAAa,EAAER,UAA3F;AAAA,8BACE,QAAC,IAAD,CAAM,WAAN;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAMI,QAAQ,CAAC,CAAC,CAAF,CAAd;AAAA,SAA3B;AAAA,gCACE,QAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGD,CAAC,CAAC,aAAD,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAKE,QAAC,IAAD,CAAM,SAAN;AAAA,kBAAiBA,CAAC,CAAC,sBAAD;AAAlB;AAAA;AAAA;AAAA;AAAA,eALF,eAME,QAAC,CAAD,CAAG,WAAH;AAAA,kBAAgBA,CAAC,CAAC,4BAAD;AAAjB;AAAA;AAAA;AAAA;AAAA,eANF,eAOE,QAAC,IAAD,CAAM,QAAN;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,KAAK,EAAEA,CAAC,CAAC,cAAD,CAFV;AAGE,QAAA,KAAK,EAAE,CAAC;AAAEa,UAAAA,QAAQ,EAAE,IAAZ;AAAkBD,UAAAA,OAAO,EAAEZ,CAAC,CAAC,mBAAD;AAA5B,SAAD,CAHT;AAAA,+BAKE,QAAC,IAAD,CAAM,SAAN;AAAgB,UAAA,WAAW,EAAEA,CAAC,CAAC,cAAD;AAA9B;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,eAPF,eAcE,QAAC,QAAD,CAAU,IAAV;AAAe,QAAA,OAAO,MAAtB;AAAA,+BACE,QAAC,CAAD,CAAG,YAAH;AAAgB,UAAA,IAAI,EAAC,SAArB;AAA+B,UAAA,QAAQ,EAAC,QAAxC;AAAiD,UAAA,OAAO,EAAEG,SAA1D;AAAA,oBACGH,CAAC,CAAC,iCAAD;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAwBD,CA3CM;;GAAMD,kB;UACGT,c,EACGD,W,EACAK,c;;;KAHNK,kB","sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\r\nimport * as S from './ForgotPasswordForm.styles';\r\nimport * as Auth from '@app/components/layouts/AuthLayout/AuthLayout.styles';\r\nimport { useAppDispatch } from '@app/hooks/reduxHooks';\r\nimport { doResetPassword } from '@app/store/slices/authSlice';\r\nimport { notificationController } from '@app/controllers/notificationController';\r\n\r\ninterface ForgotPasswordFormData {\r\n  email: string;\r\n}\r\n\r\nconst initValues = {\r\n  email: 'christopher.johnson@altence.com',\r\n};\r\n\r\nexport const ForgotPasswordForm: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const navigate = useNavigate();\r\n  const dispatch = useAppDispatch();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = (values: ForgotPasswordFormData) => {\r\n    setLoading(true);\r\n    dispatch(doResetPassword(values))\r\n      .unwrap()\r\n      .then(() => {\r\n        navigate('/auth/security-code');\r\n      })\r\n      .catch((err) => {\r\n        notificationController.error({ message: err.message });\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Auth.FormWrapper>\r\n      <BaseForm layout=\"vertical\" onFinish={handleSubmit} requiredMark=\"optional\" initialValues={initValues}>\r\n        <Auth.BackWrapper onClick={() => navigate(-1)}>\r\n          <Auth.BackIcon />\r\n          {t('common.back')}\r\n        </Auth.BackWrapper>\r\n        <Auth.FormTitle>{t('common.resetPassword')}</Auth.FormTitle>\r\n        <S.Description>{t('forgotPassword.description')}</S.Description>\r\n        <Auth.FormItem\r\n          name=\"email\"\r\n          label={t('common.email')}\r\n          rules={[{ required: true, message: t('common.emailError') }]}\r\n        >\r\n          <Auth.FormInput placeholder={t('common.email')} />\r\n        </Auth.FormItem>\r\n        <BaseForm.Item noStyle>\r\n          <S.SubmitButton type=\"primary\" htmlType=\"submit\" loading={isLoading}>\r\n            {t('forgotPassword.sendInstructions')}\r\n          </S.SubmitButton>\r\n        </BaseForm.Item>\r\n      </BaseForm>\r\n    </Auth.FormWrapper>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}