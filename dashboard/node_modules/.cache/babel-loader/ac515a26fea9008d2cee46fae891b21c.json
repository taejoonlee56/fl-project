{"ast":null,"code":"import _defineProperty from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\defineProperty.js\";\nimport _objectSpread from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\nimport _objectWithoutProperties from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectWithoutProperties.js\";\nimport _classCallCheck from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _inherits from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _createSuper from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createSuper.js\";\nvar _excluded = [\"placeholderChar\", \"formatCharacters\"];\nimport React, { Component } from 'react';\nimport { Input } from 'antd';\nimport InputMask from './inputmask-core';\nimport { isRedo, isUndo, getSelection, setSelection } from './helpers';\n\nvar MaskedInput = /*#__PURE__*/function (_Component) {\n  _inherits(MaskedInput, _Component);\n\n  var _super = _createSuper(MaskedInput);\n\n  function MaskedInput(props) {\n    var _this;\n\n    _classCallCheck(this, MaskedInput);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      input: null,\n      _lastValue: null,\n      _Input: null,\n      mask: null,\n      prevMask: null,\n      prevValue: null\n    };\n\n    _this._onChange = function (e) {\n      // console.log('onChange', JSON.stringify(getSelection(this.state.input)), e.target.value)\n      var maskValue = _this.state.mask.getValue();\n\n      var incomingValue = e.target.value;\n\n      if (incomingValue !== maskValue) {\n        // only modify mask if form contents actually changed\n        _this._updateMaskSelection();\n\n        _this.state.mask.setValue(incomingValue); // write the whole updated value into the mask\n\n\n        _this.setInputValue(_this._getDisplayValue()); // update the form with pattern applied to the value\n\n\n        _this._updateInputSelection();\n      }\n\n      if (_this.props.onChange) {\n        _this.props.onChange(e);\n      }\n    };\n\n    _this._onKeyDown = function (e) {\n      setTimeout(function () {\n        _this.state.input.classList[_this.state.input.value ? 'add' : 'remove']('has-value');\n      }, 100);\n\n      if (isUndo(e)) {\n        e.preventDefault();\n\n        if (_this.state.mask.undo()) {\n          _this.setInputValue(_this._getDisplayValue());\n\n          _this._updateInputSelection();\n\n          if (_this.props.onChange) {\n            _this.props.onChange(e);\n          }\n        }\n\n        return;\n      } else if (isRedo(e)) {\n        e.preventDefault();\n\n        if (_this.state.mask.redo()) {\n          _this.setInputValue(_this._getDisplayValue());\n\n          _this._updateInputSelection();\n\n          if (_this.props.onChange) {\n            _this.props.onChange(e);\n          }\n        }\n\n        return;\n      }\n\n      if (e.key === 'Backspace') {\n        e.preventDefault();\n\n        _this._updateMaskSelection();\n\n        if (_this.state.mask.backspace()) {\n          var value = _this._getDisplayValue();\n\n          _this.setInputValue(value);\n\n          if (value) {\n            _this._updateInputSelection();\n          }\n\n          if (_this.props.onChange) {\n            _this.props.onChange(e);\n          }\n        }\n      }\n    };\n\n    _this._onKeyPress = function (e) {\n      // console.log('onKeyPress', JSON.stringify(getSelection(this.state.input)), e.key, e.target.value)\n      // Ignore modified key presses\n      // Ignore enter key to allow form submission\n      if (e.metaKey || e.altKey || e.ctrlKey || e.key === 'Enter') {\n        return;\n      }\n\n      e.preventDefault();\n\n      _this._updateMaskSelection();\n\n      if (_this.state.mask.input(e.key || e.data)) {\n        _this.setInputValue(_this.state.mask.getValue());\n\n        _this._updateInputSelection();\n\n        if (_this.props.onChange) {\n          _this.props.onChange(e);\n        }\n      }\n    };\n\n    _this._onPaste = function (e) {\n      e.preventDefault();\n\n      _this._updateMaskSelection(); // getData value needed for IE also works in FF & Chrome\n\n\n      if (_this.state.mask.paste(e.clipboardData.getData('Text'))) {\n        // @ts-ignore\n        _this.setInputValue(_this.state.mask.getValue()); // Timeout needed for IE\n\n\n        setTimeout(function () {\n          return _this._updateInputSelection();\n        }, 0);\n\n        if (_this.props.onChange) {\n          // @ts-ignore\n          _this.props.onChange(e);\n        }\n      }\n    };\n\n    _this.getInputProps = function () {\n      var maxLength = _this.state.mask.pattern.length;\n\n      var eventHandlers = _this._getEventHandlers();\n\n      var _this$props$placehold = _this.props.placeholder,\n          placeholder = _this$props$placehold === void 0 ? _this.state.mask.emptyValue : _this$props$placehold;\n\n      var _this$props = _this.props,\n          placeholderChar = _this$props.placeholderChar,\n          formatCharacters = _this$props.formatCharacters,\n          cleanedProps = _objectWithoutProperties(_this$props, _excluded);\n\n      var props = _objectSpread(_objectSpread(_objectSpread({}, cleanedProps), eventHandlers), {}, {\n        maxLength: maxLength,\n        placeholder: placeholder\n      });\n\n      delete props.value;\n      return props;\n    };\n\n    _this.setInputValue = function (value) {\n      if (!_this.state._Input || !_this.state._Input.input) return;\n      if (value === _this.state._lastValue) return;\n      _this.state._lastValue = value;\n\n      _this.state._Input.setState({\n        value: value\n      });\n\n      _this.state._Input.input.value = value;\n    };\n\n    _this.handleInputRef = function (ref) {\n      if (!ref) return;\n      _this.state._Input = ref;\n      _this.state.input = ref.input;\n\n      if (_this.state._lastValue === null && typeof _this.props.defaultValue === 'string') {\n        _this.state.mask.setValue(_this.props.defaultValue); // write the whole updated value into the mask\n\n\n        _this.setInputValue(_this._getDisplayValue()); // update the form with pattern applied to the value\n\n      }\n    };\n\n    var options = {\n      pattern: _this.props.mask,\n      value: _this.props.value,\n      formatCharacters: _this.props.formatCharacters\n    };\n\n    if (_this.props.placeholderChar) {\n      options.placeholderChar = _this.props.placeholderChar;\n    }\n\n    _this.state.mask = new InputMask(options);\n    return _this;\n  }\n\n  _createClass(MaskedInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setInputValue(this._getDisplayValue());\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (!this.props.mask) return null;\n\n      if (prevProps.mask !== this.props.mask && this.state.mask.selection.start) {\n        this._updateInputSelection();\n      }\n\n      return;\n    }\n  }, {\n    key: \"_updateMaskSelection\",\n    value: function _updateMaskSelection() {\n      this.state.mask.selection = getSelection(this.state.input);\n    }\n  }, {\n    key: \"_updateInputSelection\",\n    value: function _updateInputSelection() {\n      setSelection(this.state.input, this.state.mask.selection);\n    }\n  }, {\n    key: \"_getDisplayValue\",\n    value: function _getDisplayValue() {\n      var value = this.state.mask.getValue();\n      return value === this.state.mask.emptyValue ? '' : value;\n    }\n  }, {\n    key: \"_keyPressPropName\",\n    value: function _keyPressPropName() {\n      if (typeof navigator !== 'undefined') {\n        return navigator.userAgent.match(/Android/i) ? 'onBeforeInput' : 'onKeyPress';\n      }\n\n      return 'onKeyPress';\n    }\n  }, {\n    key: \"_getEventHandlers\",\n    value: function _getEventHandlers() {\n      return _defineProperty({\n        onChange: this._onChange,\n        onKeyDown: this._onKeyDown,\n        onPaste: this._onPaste\n      }, this._keyPressPropName(), this._onKeyPress);\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.state.input.focus();\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.state.input.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Input, Object.assign({}, this.getInputProps(), {\n        ref: this.handleInputRef\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var currMask = state.prevMask;\n      var currValue = state.prevValue;\n      var nextMask = props.mask;\n      var nextValue = props.value;\n\n      if (nextMask !== currMask && nextValue !== currValue) {\n        // if we get a new value and a new mask at the same time\n        // check if the mask.value is still the initial value\n        // - if so use the next's value\n        // - otherwise the `this.mask` has a value for us (most likely from paste action)\n        if (state.mask.getValue() === state.mask.emptyValue) {\n          state.mask.setPattern(nextMask, {\n            value: nextValue,\n            selection: state.input && getSelection(state.input)\n          });\n        } else {\n          state.mask.setPattern(nextMask, {\n            value: state.mask.getRawValue(),\n            selection: state.input && getSelection(state.input)\n          });\n        }\n      } else if (currMask !== nextMask) {\n        state.mask.setPattern(nextMask, {\n          value: state.mask.getRawValue(),\n          selection: state.input && getSelection(state.input)\n        });\n      }\n\n      if (currValue !== nextValue) {\n        state.mask.setValue(nextValue);\n        var value = state.mask.getValue();\n        value = value === state.mask.emptyValue ? '' : value;\n\n        if (state._Input && state._Input.input && value !== state._lastValue) {\n          state._lastValue = value;\n\n          state._Input.setState({\n            value: value\n          });\n\n          state._Input.input.value = value;\n        }\n      }\n\n      if (nextMask !== currMask || nextValue !== currValue) {\n        var newState = {};\n\n        if (nextMask !== currMask) {\n          newState.prevMask = nextMask;\n        }\n\n        if (nextValue !== currValue) {\n          newState.prevValue = nextValue;\n        }\n\n        return newState;\n      }\n\n      return null;\n    }\n  }]);\n\n  return MaskedInput;\n}(Component);\n\nexport { MaskedInput as default };","map":{"version":3,"sources":["../../../src/lib/MaskedInput.tsx"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,KAAP,IAA6B,SAA7B,QAA8D,OAA9D;AACA,SAAS,KAAT,QAAsB,MAAtB;AACA,OAAO,SAAP,MAAsB,kBAAtB;AACA,SAAS,MAAT,EAAiB,MAAjB,EAAyB,YAAzB,EAAuC,YAAvC,QAA2D,WAA3D;;IAuBqB,W;;;;;AAWnB,uBAAY,KAAZ,EAAmC;AAAA;;AAAA;;AACjC,8BAAM,KAAN;AAVF,UAAA,KAAA,GAA0B;AACxB,MAAA,KAAK,EAAE,IADiB;AAExB,MAAA,UAAU,EAAE,IAFY;AAGxB,MAAA,MAAM,EAAE,IAHgB;AAIxB,MAAA,IAAI,EAAE,IAJkB;AAKxB,MAAA,QAAQ,EAAE,IALc;AAMxB,MAAA,SAAS,EAAE;AANa,KAA1B;;AA6GA,UAAA,SAAA,GAAY,UAAC,CAAD,EAAoB;AAC9B;AAEA,UAAI,SAAS,GAAG,MAAK,KAAL,CAAW,IAAX,CAAgB,QAAhB,EAAhB;;AACA,UAAI,aAAa,GAAG,CAAC,CAAC,MAAF,CAAS,KAA7B;;AACA,UAAI,aAAa,KAAK,SAAtB,EAAiC;AAC/B;AACA,cAAK,oBAAL;;AACA,cAAK,KAAL,CAAW,IAAX,CAAgB,QAAhB,CAAyB,aAAzB,EAH+B,CAGU;;;AACzC,cAAK,aAAL,CAAmB,MAAK,gBAAL,EAAnB,EAJ+B,CAIc;;;AAC7C,cAAK,qBAAL;AACD;;AAED,UAAI,MAAK,KAAL,CAAW,QAAf,EAAyB;AACvB,cAAK,KAAL,CAAW,QAAX,CAAoB,CAApB;AACD;AACF,KAhBD;;AAkBA,UAAA,UAAA,GAAa,UAAC,CAAD,EAAsB;AACjC,MAAA,UAAU,CAAC,YAAK;AACd,cAAK,KAAL,CAAW,KAAX,CAAiB,SAAjB,CAA2B,MAAK,KAAL,CAAW,KAAX,CAAiB,KAAjB,GAAyB,KAAzB,GAAiC,QAA5D,EAAsE,WAAtE;AACD,OAFS,EAEP,GAFO,CAAV;;AAIA,UAAI,MAAM,CAAC,CAAD,CAAV,EAAe;AACb,QAAA,CAAC,CAAC,cAAF;;AACA,YAAI,MAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB,EAAJ,EAA4B;AAC1B,gBAAK,aAAL,CAAmB,MAAK,gBAAL,EAAnB;;AACA,gBAAK,qBAAL;;AACA,cAAI,MAAK,KAAL,CAAW,QAAf,EAAyB;AACvB,kBAAK,KAAL,CAAW,QAAX,CAAoB,CAApB;AACD;AACF;;AACD;AACD,OAVD,MAUO,IAAI,MAAM,CAAC,CAAD,CAAV,EAAe;AACpB,QAAA,CAAC,CAAC,cAAF;;AACA,YAAI,MAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB,EAAJ,EAA4B;AAC1B,gBAAK,aAAL,CAAmB,MAAK,gBAAL,EAAnB;;AACA,gBAAK,qBAAL;;AACA,cAAI,MAAK,KAAL,CAAW,QAAf,EAAyB;AACvB,kBAAK,KAAL,CAAW,QAAX,CAAoB,CAApB;AACD;AACF;;AACD;AACD;;AAED,UAAI,CAAC,CAAC,GAAF,KAAU,WAAd,EAA2B;AACzB,QAAA,CAAC,CAAC,cAAF;;AACA,cAAK,oBAAL;;AACA,YAAI,MAAK,KAAL,CAAW,IAAX,CAAgB,SAAhB,EAAJ,EAAiC;AAC/B,cAAI,KAAK,GAAG,MAAK,gBAAL,EAAZ;;AACA,gBAAK,aAAL,CAAmB,KAAnB;;AACA,cAAI,KAAJ,EAAW;AACT,kBAAK,qBAAL;AACD;;AACD,cAAI,MAAK,KAAL,CAAW,QAAf,EAAyB;AACvB,kBAAK,KAAL,CAAW,QAAX,CAAoB,CAApB;AACD;AACF;AACF;AACF,KAzCD;;AA2CA,UAAA,WAAA,GAAc,UAAC,CAAD,EAAsB;AAClC;AAEA;AACA;AACA,UAAI,CAAC,CAAC,OAAF,IAAa,CAAC,CAAC,MAAf,IAAyB,CAAC,CAAC,OAA3B,IAAsC,CAAC,CAAC,GAAF,KAAU,OAApD,EAA6D;AAC3D;AACD;;AAED,MAAA,CAAC,CAAC,cAAF;;AACA,YAAK,oBAAL;;AACA,UAAI,MAAK,KAAL,CAAW,IAAX,CAAgB,KAAhB,CAAsB,CAAC,CAAC,GAAF,IAAS,CAAC,CAAC,IAAjC,CAAJ,EAA4C;AAC1C,cAAK,aAAL,CAAmB,MAAK,KAAL,CAAW,IAAX,CAAgB,QAAhB,EAAnB;;AACA,cAAK,qBAAL;;AACA,YAAI,MAAK,KAAL,CAAW,QAAf,EAAyB;AACvB,gBAAK,KAAL,CAAW,QAAX,CAAoB,CAApB;AACD;AACF;AACF,KAlBD;;AAoBA,UAAA,QAAA,GAAW,UAAC,CAAD,EAAuB;AAChC,MAAA,CAAC,CAAC,cAAF;;AACA,YAAK,oBAAL,GAFgC,CAGhC;;;AACA,UAAI,MAAK,KAAL,CAAW,IAAX,CAAgB,KAAhB,CAAsB,CAAC,CAAC,aAAF,CAAgB,OAAhB,CAAwB,MAAxB,CAAtB,CAAJ,EAA4D;AAC1D;AACA,cAAK,aAAL,CAAmB,MAAK,KAAL,CAAW,IAAX,CAAgB,QAAhB,EAAnB,EAF0D,CAG1D;;;AACA,QAAA,UAAU,CAAC;AAAA,iBAAM,MAAK,qBAAL,EAAN;AAAA,SAAD,EAAqC,CAArC,CAAV;;AACA,YAAI,MAAK,KAAL,CAAW,QAAf,EAAyB;AACvB;AACA,gBAAK,KAAL,CAAW,QAAX,CAAoB,CAApB;AACD;AACF;AACF,KAdD;;AAqDA,UAAA,aAAA,GAAgB,YAAK;AACnB,UAAI,SAAS,GAAG,MAAK,KAAL,CAAW,IAAX,CAAgB,OAAhB,CAAwB,MAAxC;;AACA,UAAI,aAAa,GAAG,MAAK,iBAAL,EAApB;;AACA,kCAAmD,MAAK,KAAxD,CAAM,WAAN;AAAA,UAAM,WAAN,sCAAoB,MAAK,KAAL,CAAW,IAAX,CAAgB,UAApC;;AAEA,wBAA6D,MAAK,KAAlE;AAAA,UAAM,eAAN,eAAM,eAAN;AAAA,UAAuB,gBAAvB,eAAuB,gBAAvB;AAAA,UAA4C,YAA5C;;AACA,UAAM,KAAK,iDAAQ,YAAR,GAAyB,aAAzB;AAAwC,QAAA,SAAS,EAAT,SAAxC;AAAmD,QAAA,WAAW,EAAX;AAAnD,QAAX;;AACA,aAAO,KAAK,CAAC,KAAb;AACA,aAAO,KAAP;AACD,KATD;;AAWA,UAAA,aAAA,GAAgB,UAAC,KAAD,EAAkB;AAChC,UAAI,CAAC,MAAK,KAAL,CAAW,MAAZ,IAAsB,CAAC,MAAK,KAAL,CAAW,MAAX,CAAkB,KAA7C,EAAoD;AACpD,UAAI,KAAK,KAAK,MAAK,KAAL,CAAW,UAAzB,EAAqC;AAErC,YAAK,KAAL,CAAW,UAAX,GAAwB,KAAxB;;AACA,YAAK,KAAL,CAAW,MAAX,CAAkB,QAAlB,CAA2B;AAAE,QAAA,KAAK,EAAL;AAAF,OAA3B;;AACA,YAAK,KAAL,CAAW,MAAX,CAAkB,KAAlB,CAAwB,KAAxB,GAAgC,KAAhC;AACD,KAPD;;AASA,UAAA,cAAA,GAAiB,UAAC,GAAD,EAAe;AAC9B,UAAI,CAAC,GAAL,EAAU;AACV,YAAK,KAAL,CAAW,MAAX,GAAoB,GAApB;AACA,YAAK,KAAL,CAAW,KAAX,GAAmB,GAAG,CAAC,KAAvB;;AAEA,UACE,MAAK,KAAL,CAAW,UAAX,KAA0B,IAA1B,IACA,OAAO,MAAK,KAAL,CAAW,YAAlB,KAAmC,QAFrC,EAGE;AACA,cAAK,KAAL,CAAW,IAAX,CAAgB,QAAhB,CAAyB,MAAK,KAAL,CAAW,YAApC,EADA,CACmD;;;AACnD,cAAK,aAAL,CAAmB,MAAK,gBAAL,EAAnB,EAFA,CAE6C;;AAC9C;AACF,KAZD;;AA3PE,QAAI,OAAO,GAAQ;AACjB,MAAA,OAAO,EAAE,MAAK,KAAL,CAAW,IADH;AAEjB,MAAA,KAAK,EAAE,MAAK,KAAL,CAAW,KAFD;AAGjB,MAAA,gBAAgB,EAAE,MAAK,KAAL,CAAW;AAHZ,KAAnB;;AAMA,QAAI,MAAK,KAAL,CAAW,eAAf,EAAgC;AAC9B,MAAA,OAAO,CAAC,eAAR,GAA0B,MAAK,KAAL,CAAW,eAArC;AACD;;AAED,UAAK,KAAL,CAAW,IAAX,GAAkB,IAAI,SAAJ,CAAc,OAAd,CAAlB;AAbiC;AAclC;;;;WAED,6BAAiB;AACf,WAAK,aAAL,CAAmB,KAAK,gBAAL,EAAnB;AACD;;;WAkED,4BAAmB,SAAnB,EAA8C;AAC5C,UAAI,CAAC,KAAK,KAAL,CAAW,IAAhB,EAAsB,OAAO,IAAP;;AACtB,UAAI,SAAS,CAAC,IAAV,KAAmB,KAAK,KAAL,CAAW,IAA9B,IAAsC,KAAK,KAAL,CAAW,IAAX,CAAgB,SAAhB,CAA0B,KAApE,EAA2E;AACzE,aAAK,qBAAL;AACD;;AACD;AACD;;;WAED,gCAAoB;AAClB,WAAK,KAAL,CAAW,IAAX,CAAgB,SAAhB,GAA4B,YAAY,CAAC,KAAK,KAAL,CAAW,KAAZ,CAAxC;AACD;;;WAED,iCAAqB;AACnB,MAAA,YAAY,CAAC,KAAK,KAAL,CAAW,KAAZ,EAAmB,KAAK,KAAL,CAAW,IAAX,CAAgB,SAAnC,CAAZ;AACD;;;WAmGD,4BAAgB;AACd,UAAI,KAAK,GAAG,KAAK,KAAL,CAAW,IAAX,CAAgB,QAAhB,EAAZ;AACA,aAAO,KAAK,KAAK,KAAK,KAAL,CAAW,IAAX,CAAgB,UAA1B,GAAuC,EAAvC,GAA4C,KAAnD;AACD;;;WAED,6BAAiB;AACf,UAAI,OAAO,SAAP,KAAqB,WAAzB,EAAsC;AACpC,eAAO,SAAS,CAAC,SAAV,CAAoB,KAApB,CAA0B,UAA1B,IACH,eADG,GAEH,YAFJ;AAGD;;AACD,aAAO,YAAP;AACD;;;WAED,6BAAiB;AAOf;AACE,QAAA,QAAQ,EAAE,KAAK,SADjB;AAEE,QAAA,SAAS,EAAE,KAAK,UAFlB;AAGE,QAAA,OAAO,EAAE,KAAK;AAHhB,SAIG,KAAK,iBAAL,EAJH,EAI8B,KAAK,WAJnC;AAMD;;;WAED,iBAAK;AACH,WAAK,KAAL,CAAW,KAAX,CAAiB,KAAjB;AACD;;;WAED,gBAAI;AACF,WAAK,KAAL,CAAW,KAAX,CAAiB,IAAjB;AACD;;;WAoCD,kBAAM;AACJ,aAAO,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAK,aAAL,EAAL,EAAyB;AAAE,QAAA,GAAG,EAAE,KAAK;AAAZ,OAAzB,CAAN,CAAP;AACD;;;WA1PD,kCAAgC,KAAhC,EAAyD,KAAzD,EAAgF;AAE9E,UAAM,QAAQ,GAAG,KAAK,CAAC,QAAvB;AACA,UAAM,SAAS,GAAG,KAAK,CAAC,SAAxB;AACA,UAAM,QAAQ,GAAG,KAAK,CAAC,IAAvB;AACA,UAAM,SAAS,GAAG,KAAK,CAAC,KAAxB;;AAGA,UACE,QAAQ,KAAK,QAAb,IACA,SAAS,KAAK,SAFhB,EAGE;AACA;AACA;AACA;AACA;AACA,YAAI,KAAK,CAAC,IAAN,CAAW,QAAX,OAA0B,KAAK,CAAC,IAAN,CAAW,UAAzC,EAAqD;AACnD,UAAA,KAAK,CAAC,IAAN,CAAW,UAAX,CAAsB,QAAtB,EAAgC;AAC9B,YAAA,KAAK,EAAE,SADuB;AAE9B,YAAA,SAAS,EAAE,KAAK,CAAC,KAAN,IAAe,YAAY,CAAC,KAAK,CAAC,KAAP;AAFR,WAAhC;AAID,SALD,MAKO;AACL,UAAA,KAAK,CAAC,IAAN,CAAW,UAAX,CAAsB,QAAtB,EAAgC;AAC9B,YAAA,KAAK,EAAE,KAAK,CAAC,IAAN,CAAW,WAAX,EADuB;AAE9B,YAAA,SAAS,EAAE,KAAK,CAAC,KAAN,IAAe,YAAY,CAAC,KAAK,CAAC,KAAP;AAFR,WAAhC;AAID;AACF,OAnBD,MAmBO,IAAI,QAAQ,KAAK,QAAjB,EAA2B;AAChC,QAAA,KAAK,CAAC,IAAN,CAAW,UAAX,CAAsB,QAAtB,EAAgC;AAC9B,UAAA,KAAK,EAAE,KAAK,CAAC,IAAN,CAAW,WAAX,EADuB;AAE9B,UAAA,SAAS,EAAE,KAAK,CAAC,KAAN,IAAe,YAAY,CAAC,KAAK,CAAC,KAAP;AAFR,SAAhC;AAID;;AAED,UAAI,SAAS,KAAK,SAAlB,EAA6B;AAC3B,QAAA,KAAK,CAAC,IAAN,CAAW,QAAX,CAAoB,SAApB;AAEA,YAAI,KAAK,GAAG,KAAK,CAAC,IAAN,CAAW,QAAX,EAAZ;AACA,QAAA,KAAK,GAAG,KAAK,KAAK,KAAK,CAAC,IAAN,CAAW,UAArB,GAAkC,EAAlC,GAAuC,KAA/C;;AAEA,YAAI,KAAK,CAAC,MAAN,IAAgB,KAAK,CAAC,MAAN,CAAa,KAA7B,IAAsC,KAAK,KAAK,KAAK,CAAC,UAA1D,EAAsE;AACpE,UAAA,KAAK,CAAC,UAAN,GAAmB,KAAnB;;AACA,UAAA,KAAK,CAAC,MAAN,CAAa,QAAb,CAAsB;AAAE,YAAA,KAAK,EAAL;AAAF,WAAtB;;AACA,UAAA,KAAK,CAAC,MAAN,CAAa,KAAb,CAAmB,KAAnB,GAA2B,KAA3B;AACD;AACF;;AAED,UAAI,QAAQ,KAAK,QAAb,IAAyB,SAAS,KAAK,SAA3C,EAAsD;AACpD,YAAM,QAAQ,GAA8C,EAA5D;;AAEA,YAAI,QAAQ,KAAK,QAAjB,EAA2B;AACzB,UAAA,QAAQ,CAAC,QAAT,GAAoB,QAApB;AACD;;AACD,YAAI,SAAS,KAAK,SAAlB,EAA6B;AAC3B,UAAA,QAAQ,CAAC,SAAT,GAAqB,SAArB;AACD;;AAED,eAAO,QAAP;AACD;;AAED,aAAO,IAAP;AACD;;;;EA5FsC,S;;SAApB,W","sourceRoot":"","sourcesContent":["import React, { Component } from 'react';\r\nimport { Input } from 'antd';\r\nimport InputMask from './inputmask-core';\r\nimport { isRedo, isUndo, getSelection, setSelection } from './helpers';\r\nexport default class MaskedInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            input: null,\r\n            _lastValue: null,\r\n            _Input: null,\r\n            mask: null,\r\n            prevMask: null,\r\n            prevValue: null,\r\n        };\r\n        this._onChange = (e) => {\r\n            // console.log('onChange', JSON.stringify(getSelection(this.state.input)), e.target.value)\r\n            let maskValue = this.state.mask.getValue();\r\n            let incomingValue = e.target.value;\r\n            if (incomingValue !== maskValue) {\r\n                // only modify mask if form contents actually changed\r\n                this._updateMaskSelection();\r\n                this.state.mask.setValue(incomingValue); // write the whole updated value into the mask\r\n                this.setInputValue(this._getDisplayValue()); // update the form with pattern applied to the value\r\n                this._updateInputSelection();\r\n            }\r\n            if (this.props.onChange) {\r\n                this.props.onChange(e);\r\n            }\r\n        };\r\n        this._onKeyDown = (e) => {\r\n            setTimeout(() => {\r\n                this.state.input.classList[this.state.input.value ? 'add' : 'remove']('has-value');\r\n            }, 100);\r\n            if (isUndo(e)) {\r\n                e.preventDefault();\r\n                if (this.state.mask.undo()) {\r\n                    this.setInputValue(this._getDisplayValue());\r\n                    this._updateInputSelection();\r\n                    if (this.props.onChange) {\r\n                        this.props.onChange(e);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            else if (isRedo(e)) {\r\n                e.preventDefault();\r\n                if (this.state.mask.redo()) {\r\n                    this.setInputValue(this._getDisplayValue());\r\n                    this._updateInputSelection();\r\n                    if (this.props.onChange) {\r\n                        this.props.onChange(e);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            if (e.key === 'Backspace') {\r\n                e.preventDefault();\r\n                this._updateMaskSelection();\r\n                if (this.state.mask.backspace()) {\r\n                    let value = this._getDisplayValue();\r\n                    this.setInputValue(value);\r\n                    if (value) {\r\n                        this._updateInputSelection();\r\n                    }\r\n                    if (this.props.onChange) {\r\n                        this.props.onChange(e);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        this._onKeyPress = (e) => {\r\n            // console.log('onKeyPress', JSON.stringify(getSelection(this.state.input)), e.key, e.target.value)\r\n            // Ignore modified key presses\r\n            // Ignore enter key to allow form submission\r\n            if (e.metaKey || e.altKey || e.ctrlKey || e.key === 'Enter') {\r\n                return;\r\n            }\r\n            e.preventDefault();\r\n            this._updateMaskSelection();\r\n            if (this.state.mask.input(e.key || e.data)) {\r\n                this.setInputValue(this.state.mask.getValue());\r\n                this._updateInputSelection();\r\n                if (this.props.onChange) {\r\n                    this.props.onChange(e);\r\n                }\r\n            }\r\n        };\r\n        this._onPaste = (e) => {\r\n            e.preventDefault();\r\n            this._updateMaskSelection();\r\n            // getData value needed for IE also works in FF & Chrome\r\n            if (this.state.mask.paste(e.clipboardData.getData('Text'))) {\r\n                // @ts-ignore\r\n                this.setInputValue(this.state.mask.getValue());\r\n                // Timeout needed for IE\r\n                setTimeout(() => this._updateInputSelection(), 0);\r\n                if (this.props.onChange) {\r\n                    // @ts-ignore\r\n                    this.props.onChange(e);\r\n                }\r\n            }\r\n        };\r\n        this.getInputProps = () => {\r\n            let maxLength = this.state.mask.pattern.length;\r\n            let eventHandlers = this._getEventHandlers();\r\n            let { placeholder = this.state.mask.emptyValue } = this.props;\r\n            let { placeholderChar, formatCharacters, ...cleanedProps } = this.props;\r\n            const props = { ...cleanedProps, ...eventHandlers, maxLength, placeholder };\r\n            delete props.value;\r\n            return props;\r\n        };\r\n        this.setInputValue = (value) => {\r\n            if (!this.state._Input || !this.state._Input.input)\r\n                return;\r\n            if (value === this.state._lastValue)\r\n                return;\r\n            this.state._lastValue = value;\r\n            this.state._Input.setState({ value });\r\n            this.state._Input.input.value = value;\r\n        };\r\n        this.handleInputRef = (ref) => {\r\n            if (!ref)\r\n                return;\r\n            this.state._Input = ref;\r\n            this.state.input = ref.input;\r\n            if (this.state._lastValue === null &&\r\n                typeof this.props.defaultValue === 'string') {\r\n                this.state.mask.setValue(this.props.defaultValue); // write the whole updated value into the mask\r\n                this.setInputValue(this._getDisplayValue()); // update the form with pattern applied to the value\r\n            }\r\n        };\r\n        let options = {\r\n            pattern: this.props.mask,\r\n            value: this.props.value,\r\n            formatCharacters: this.props.formatCharacters\r\n        };\r\n        if (this.props.placeholderChar) {\r\n            options.placeholderChar = this.props.placeholderChar;\r\n        }\r\n        this.state.mask = new InputMask(options);\r\n    }\r\n    componentDidMount() {\r\n        this.setInputValue(this._getDisplayValue());\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n        const currMask = state.prevMask;\r\n        const currValue = state.prevValue;\r\n        const nextMask = props.mask;\r\n        const nextValue = props.value;\r\n        if (nextMask !== currMask &&\r\n            nextValue !== currValue) {\r\n            // if we get a new value and a new mask at the same time\r\n            // check if the mask.value is still the initial value\r\n            // - if so use the next's value\r\n            // - otherwise the `this.mask` has a value for us (most likely from paste action)\r\n            if (state.mask.getValue() === state.mask.emptyValue) {\r\n                state.mask.setPattern(nextMask, {\r\n                    value: nextValue,\r\n                    selection: state.input && getSelection(state.input)\r\n                });\r\n            }\r\n            else {\r\n                state.mask.setPattern(nextMask, {\r\n                    value: state.mask.getRawValue(),\r\n                    selection: state.input && getSelection(state.input)\r\n                });\r\n            }\r\n        }\r\n        else if (currMask !== nextMask) {\r\n            state.mask.setPattern(nextMask, {\r\n                value: state.mask.getRawValue(),\r\n                selection: state.input && getSelection(state.input)\r\n            });\r\n        }\r\n        if (currValue !== nextValue) {\r\n            state.mask.setValue(nextValue);\r\n            let value = state.mask.getValue();\r\n            value = value === state.mask.emptyValue ? '' : value;\r\n            if (state._Input && state._Input.input && value !== state._lastValue) {\r\n                state._lastValue = value;\r\n                state._Input.setState({ value });\r\n                state._Input.input.value = value;\r\n            }\r\n        }\r\n        if (nextMask !== currMask || nextValue !== currValue) {\r\n            const newState = {};\r\n            if (nextMask !== currMask) {\r\n                newState.prevMask = nextMask;\r\n            }\r\n            if (nextValue !== currValue) {\r\n                newState.prevValue = nextValue;\r\n            }\r\n            return newState;\r\n        }\r\n        return null;\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (!this.props.mask)\r\n            return null;\r\n        if (prevProps.mask !== this.props.mask && this.state.mask.selection.start) {\r\n            this._updateInputSelection();\r\n        }\r\n        return;\r\n    }\r\n    _updateMaskSelection() {\r\n        this.state.mask.selection = getSelection(this.state.input);\r\n    }\r\n    _updateInputSelection() {\r\n        setSelection(this.state.input, this.state.mask.selection);\r\n    }\r\n    _getDisplayValue() {\r\n        let value = this.state.mask.getValue();\r\n        return value === this.state.mask.emptyValue ? '' : value;\r\n    }\r\n    _keyPressPropName() {\r\n        if (typeof navigator !== 'undefined') {\r\n            return navigator.userAgent.match(/Android/i)\r\n                ? 'onBeforeInput'\r\n                : 'onKeyPress';\r\n        }\r\n        return 'onKeyPress';\r\n    }\r\n    _getEventHandlers() {\r\n        return {\r\n            onChange: this._onChange,\r\n            onKeyDown: this._onKeyDown,\r\n            onPaste: this._onPaste,\r\n            [this._keyPressPropName()]: this._onKeyPress\r\n        };\r\n    }\r\n    focus() {\r\n        this.state.input.focus();\r\n    }\r\n    blur() {\r\n        this.state.input.blur();\r\n    }\r\n    render() {\r\n        return React.createElement(Input, Object.assign({}, this.getInputProps(), { ref: this.handleInputRef }));\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,"]},"metadata":{},"sourceType":"module"}