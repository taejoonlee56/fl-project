{"ast":null,"code":"import _objectSpread from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\nimport { httpApi } from '@app/api/http.api';\nimport './mocks/auth.api.mock';\nexport var login = function login(loginPayload) {\n  return httpApi.post('login', _objectSpread({}, loginPayload)).then(function (_ref) {\n    var data = _ref.data;\n    return data;\n  });\n};\nexport var signUp = function signUp(signUpData) {\n  return httpApi.post('signUp', _objectSpread({}, signUpData)).then(function (_ref2) {\n    var data = _ref2.data;\n    return data;\n  });\n};\nexport var resetPassword = function resetPassword(resetPasswordPayload) {\n  return httpApi.post('forgotPassword', _objectSpread({}, resetPasswordPayload)).then(function (_ref3) {\n    var data = _ref3.data;\n    return data;\n  });\n};\nexport var verifySecurityCode = function verifySecurityCode(securityCodePayload) {\n  return httpApi.post('verifySecurityCode', _objectSpread({}, securityCodePayload)).then(function (_ref4) {\n    var data = _ref4.data;\n    return data;\n  });\n};\nexport var setNewPassword = function setNewPassword(newPasswordData) {\n  return httpApi.post('setNewPassword', _objectSpread({}, newPasswordData)).then(function (_ref5) {\n    var data = _ref5.data;\n    return data;\n  });\n};","map":{"version":3,"sources":["D:/fl-carla/src/api/auth.api.ts"],"names":["httpApi","login","loginPayload","post","then","data","signUp","signUpData","resetPassword","resetPasswordPayload","verifySecurityCode","securityCodePayload","setNewPassword","newPasswordData"],"mappings":";AAAA,SAASA,OAAT,QAAwB,mBAAxB;AACA,OAAO,uBAAP;AAqCA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,YAAD;AAAA,SACnBF,OAAO,CAACG,IAAR,CAA4B,OAA5B,oBAA0CD,YAA1C,GAA0DE,IAA1D,CAA+D;AAAA,QAAGC,IAAH,QAAGA,IAAH;AAAA,WAAcA,IAAd;AAAA,GAA/D,CADmB;AAAA,CAAd;AAGP,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,UAAD;AAAA,SACpBP,OAAO,CAACG,IAAR,CAAwB,QAAxB,oBAAuCI,UAAvC,GAAqDH,IAArD,CAA0D;AAAA,QAAGC,IAAH,SAAGA,IAAH;AAAA,WAAcA,IAAd;AAAA,GAA1D,CADoB;AAAA,CAAf;AAGP,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACC,oBAAD;AAAA,SAC3BT,OAAO,CAACG,IAAR,CAAwB,gBAAxB,oBAA+CM,oBAA/C,GAAuEL,IAAvE,CAA4E;AAAA,QAAGC,IAAH,SAAGA,IAAH;AAAA,WAAcA,IAAd;AAAA,GAA5E,CAD2B;AAAA,CAAtB;AAGP,OAAO,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,mBAAD;AAAA,SAChCX,OAAO,CAACG,IAAR,CAAwB,oBAAxB,oBAAmDQ,mBAAnD,GAA0EP,IAA1E,CAA+E;AAAA,QAAGC,IAAH,SAAGA,IAAH;AAAA,WAAcA,IAAd;AAAA,GAA/E,CADgC;AAAA,CAA3B;AAGP,OAAO,IAAMO,cAAc,GAAG,SAAjBA,cAAiB,CAACC,eAAD;AAAA,SAC5Bb,OAAO,CAACG,IAAR,CAAwB,gBAAxB,oBAA+CU,eAA/C,GAAkET,IAAlE,CAAuE;AAAA,QAAGC,IAAH,SAAGA,IAAH;AAAA,WAAcA,IAAd;AAAA,GAAvE,CAD4B;AAAA,CAAvB","sourcesContent":["import { httpApi } from '@app/api/http.api';\r\nimport './mocks/auth.api.mock';\r\nimport { UserModel } from '@app/domain/UserModel';\r\n\r\nexport interface AuthData {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport interface SignUpRequest {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport interface ResetPasswordRequest {\r\n  email: string;\r\n}\r\n\r\nexport interface SecurityCodePayload {\r\n  code: string;\r\n}\r\n\r\nexport interface NewPasswordData {\r\n  newPassword: string;\r\n}\r\n\r\nexport interface LoginRequest {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport interface LoginResponse {\r\n  token: string;\r\n  user: UserModel;\r\n}\r\n\r\nexport const login = (loginPayload: LoginRequest): Promise<LoginResponse> =>\r\n  httpApi.post<LoginResponse>('login', { ...loginPayload }).then(({ data }) => data);\r\n\r\nexport const signUp = (signUpData: SignUpRequest): Promise<undefined> =>\r\n  httpApi.post<undefined>('signUp', { ...signUpData }).then(({ data }) => data);\r\n\r\nexport const resetPassword = (resetPasswordPayload: ResetPasswordRequest): Promise<undefined> =>\r\n  httpApi.post<undefined>('forgotPassword', { ...resetPasswordPayload }).then(({ data }) => data);\r\n\r\nexport const verifySecurityCode = (securityCodePayload: SecurityCodePayload): Promise<undefined> =>\r\n  httpApi.post<undefined>('verifySecurityCode', { ...securityCodePayload }).then(({ data }) => data);\r\n\r\nexport const setNewPassword = (newPasswordData: NewPasswordData): Promise<undefined> =>\r\n  httpApi.post<undefined>('setNewPassword', { ...newPasswordData }).then(({ data }) => data);\r\n"]},"metadata":{},"sourceType":"module"}