{"ast":null,"code":"import _objectSpread from \"/home/tj/fl-carla/dashboard/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/home/tj/fl-carla/dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/home/tj/fl-carla/dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/tj/fl-carla/dashboard/src/components/tj/PowerConsumptionChart/PowerConsumptionChart.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"/home/tj/fl-carla/dashboard/node_modules/@babel/runtime/regenerator/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar PowerConsumptionChart = function PowerConsumptionChart() {\n  _s();\n\n  var _useState = useState({\n    series: [],\n    options: {\n      chart: {\n        height: 350,\n        type: 'bar'\n      },\n      plotOptions: {\n        bar: {\n          borderRadius: 5,\n          dataLabels: {\n            position: 'top'\n          }\n        }\n      },\n      dataLabels: {\n        enabled: true,\n        formatter: function formatter(val) {\n          return val + \"kW\";\n        },\n        offsetY: -20,\n        style: {\n          fontSize: '12px',\n          colors: [\"#304758\"]\n        }\n      },\n      xaxis: {\n        categories: [],\n        position: 'bottom',\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        crosshairs: {\n          fill: {\n            type: 'gradient',\n            gradient: {\n              colorFrom: '#D8E3F0',\n              colorTo: '#BED1E6',\n              stops: [0, 100],\n              opacityFrom: 0.4,\n              opacityTo: 0.5\n            }\n          }\n        },\n        tooltip: {\n          enabled: false\n        }\n      },\n      yaxis: {\n        axisBorder: {\n          show: true\n        },\n        axisTicks: {\n          show: false\n        },\n        labels: {\n          show: false,\n          formatter: function formatter(val) {\n            return val + \"kW\";\n          }\n        }\n      },\n      title: {\n        text: '',\n        floating: false,\n        offsetY: 330,\n        align: 'center',\n        style: {\n          color: '#444'\n        }\n      }\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get('data.json');\n\n              case 2:\n                result = _context.sent;\n                // adjust this to the actual path of your JSON file\n                setState(_objectSpread(_objectSpread({}, state), {}, {\n                  series: result.data.series,\n                  options: _objectSpread(_objectSpread({}, state.options), {}, {\n                    xaxis: _objectSpread(_objectSpread({}, state.options.xaxis), {}, {\n                      categories: result.data.categories\n                    })\n                  })\n                }));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ReactApexChart, {\n    options: state.options,\n    series: state.series,\n    type: \"bar\",\n    height: 330\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PowerConsumptionChart, \"RTHxEi/Ro0bB54vW8QczdT0hlRI=\");\n\n_c = PowerConsumptionChart;\nexport default PowerConsumptionChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"PowerConsumptionChart\");","map":{"version":3,"sources":["/home/tj/fl-carla/dashboard/src/components/tj/PowerConsumptionChart/PowerConsumptionChart.tsx"],"names":["React","useEffect","useState","ReactApexChart","axios","PowerConsumptionChart","series","options","chart","height","type","plotOptions","bar","borderRadius","dataLabels","position","enabled","formatter","val","offsetY","style","fontSize","colors","xaxis","categories","axisBorder","show","axisTicks","crosshairs","fill","gradient","colorFrom","colorTo","stops","opacityFrom","opacityTo","tooltip","yaxis","labels","title","text","floating","align","color","state","setState","fetchData","get","result","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport axios from 'axios';\n\nconst PowerConsumptionChart: React.FC = () => {\n  const [state, setState] = useState({\n    series: [],\n    options: {\n      chart: {\n        height: 350,\n        type: 'bar' as const,\n      },\n      plotOptions: {\n        bar: {\n          borderRadius: 5,\n          dataLabels: {\n            position: 'top',\n          },\n        },\n      },\n      dataLabels: {\n        enabled: true,\n        formatter: function (val : any) {\n          return val + \"kW\";\n        },\n        offsetY: -20,\n        style: {\n          fontSize: '12px',\n          colors: [\"#304758\"],\n        },\n      },\n      xaxis: {\n        categories: [],\n        position: 'bottom',\n        axisBorder: {\n          show: false,\n        },\n        axisTicks: {\n          show: false,\n        },\n        crosshairs: {\n          fill: {\n            type: 'gradient',\n            gradient: {\n              colorFrom: '#D8E3F0',\n              colorTo: '#BED1E6',\n              stops: [0, 100],\n              opacityFrom: 0.4,\n              opacityTo: 0.5,\n            },\n          },\n        },\n        tooltip: {\n          enabled: false,\n        },\n      },\n      yaxis: {\n        axisBorder: {\n          show: true,\n        },\n        axisTicks: {\n          show: false,\n        },\n        labels: {\n          show: false,\n          formatter: function (val:any) {\n            return val + \"kW\";\n          },\n        },\n      },\n      title: {\n        text: '',\n        floating: false,\n        offsetY: 330,\n        align: 'center' as any,\n        style: {\n          color: '#444',\n        },\n      },\n    },\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios.get('data.json'); // adjust this to the actual path of your JSON file\n      setState({\n        ...state,\n        series: result.data.series,\n        options: { ...state.options, xaxis: { ...state.options.xaxis, categories: result.data.categories } },\n      });\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <ReactApexChart options={state.options} series={state.series} type=\"bar\" height={330} />\n  );\n};\n\nexport default PowerConsumptionChart;\n"]},"metadata":{},"sourceType":"module"}