{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useMediaQuery } from 'react-responsive';\nimport { useTheme } from 'styled-components';\nexport var useResponsive = function useResponsive() {\n  _s();\n\n  var theme = useTheme();\n  var isMobile = useMediaQuery({\n    query: theme.media.xs\n  });\n  var isTablet = useMediaQuery({\n    query: theme.media.md\n  });\n  var isDesktop = useMediaQuery({\n    query: theme.media.xl\n  });\n  var isBigScreen = useMediaQuery({\n    query: theme.media.xxl\n  });\n  var mobileOnly = useMediaQuery({\n    query: \"(max-width: \".concat(theme.breakpoints.md - 0.02, \"px)\")\n  });\n  var tabletOnly = useMediaQuery({\n    query: \"(min-width: \".concat(theme.breakpoints.md, \"px) and (max-width: \").concat(theme.breakpoints.xl - 0.02, \"px)\")\n  });\n  var desktopOnly = useMediaQuery({\n    query: \"(min-width: \".concat(theme.breakpoints.xl, \"px) and (max-width: \").concat(theme.breakpoints.xxl - 0.02, \"px)\")\n  });\n  return {\n    isMobile: isMobile,\n    isTablet: isTablet,\n    isDesktop: isDesktop,\n    isBigScreen: isBigScreen,\n    mobileOnly: mobileOnly,\n    tabletOnly: tabletOnly,\n    desktopOnly: desktopOnly,\n    useMediaQuery: useMediaQuery\n  };\n};\n\n_s(useResponsive, \"HZUhjKIbWDV2qZxmKCAZ541xPxg=\", false, function () {\n  return [useTheme, useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery];\n});","map":{"version":3,"sources":["D:/fl-carla/src/hooks/useResponsive.ts"],"names":["useMediaQuery","useTheme","useResponsive","theme","isMobile","query","media","xs","isTablet","md","isDesktop","xl","isBigScreen","xxl","mobileOnly","breakpoints","tabletOnly","desktopOnly"],"mappings":";;AAAA,SAAqDA,aAArD,QAA0E,kBAA1E;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAiBA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAA8B;AAAA;;AACzD,MAAMC,KAAK,GAAGF,QAAQ,EAAtB;AAEA,MAAMG,QAAQ,GAAGJ,aAAa,CAAC;AAAEK,IAAAA,KAAK,EAAEF,KAAK,CAACG,KAAN,CAAYC;AAArB,GAAD,CAA9B;AACA,MAAMC,QAAQ,GAAGR,aAAa,CAAC;AAAEK,IAAAA,KAAK,EAAEF,KAAK,CAACG,KAAN,CAAYG;AAArB,GAAD,CAA9B;AACA,MAAMC,SAAS,GAAGV,aAAa,CAAC;AAAEK,IAAAA,KAAK,EAAEF,KAAK,CAACG,KAAN,CAAYK;AAArB,GAAD,CAA/B;AACA,MAAMC,WAAW,GAAGZ,aAAa,CAAC;AAAEK,IAAAA,KAAK,EAAEF,KAAK,CAACG,KAAN,CAAYO;AAArB,GAAD,CAAjC;AAEA,MAAMC,UAAU,GAAGd,aAAa,CAAC;AAC/BK,IAAAA,KAAK,wBAAiBF,KAAK,CAACY,WAAN,CAAkBN,EAAlB,GAAuB,IAAxC;AAD0B,GAAD,CAAhC;AAIA,MAAMO,UAAU,GAAGhB,aAAa,CAAC;AAC/BK,IAAAA,KAAK,wBAAiBF,KAAK,CAACY,WAAN,CAAkBN,EAAnC,iCAA4DN,KAAK,CAACY,WAAN,CAAkBJ,EAAlB,GAAuB,IAAnF;AAD0B,GAAD,CAAhC;AAIA,MAAMM,WAAW,GAAGjB,aAAa,CAAC;AAChCK,IAAAA,KAAK,wBAAiBF,KAAK,CAACY,WAAN,CAAkBJ,EAAnC,iCAA4DR,KAAK,CAACY,WAAN,CAAkBF,GAAlB,GAAwB,IAApF;AAD2B,GAAD,CAAjC;AAIA,SAAO;AACLT,IAAAA,QAAQ,EAARA,QADK;AAELI,IAAAA,QAAQ,EAARA,QAFK;AAGLE,IAAAA,SAAS,EAATA,SAHK;AAILE,IAAAA,WAAW,EAAXA,WAJK;AAKLE,IAAAA,UAAU,EAAVA,UALK;AAMLE,IAAAA,UAAU,EAAVA,UANK;AAOLC,IAAAA,WAAW,EAAXA,WAPK;AAQLjB,IAAAA,aAAa,EAAbA;AARK,GAAP;AAUD,CA9BM;;GAAME,a;UACGD,Q,EAEGD,a,EACAA,a,EACCA,a,EACEA,a,EAEDA,a,EAIAA,a,EAICA,a","sourcesContent":["import { MediaQueryAllQueryable, MediaQueryMatchers, useMediaQuery } from 'react-responsive';\r\nimport { useTheme } from 'styled-components';\r\n\r\ninterface ResponsiveReturnValues {\r\n  isMobile: boolean;\r\n  isTablet: boolean;\r\n  isDesktop: boolean;\r\n  isBigScreen: boolean;\r\n  mobileOnly: boolean;\r\n  tabletOnly: boolean;\r\n  desktopOnly: boolean;\r\n  useMediaQuery: (\r\n    settings: Partial<MediaQueryAllQueryable & { query?: string | undefined }>,\r\n    device?: MediaQueryMatchers,\r\n    callback?: (matches: boolean) => void,\r\n  ) => boolean;\r\n}\r\n\r\nexport const useResponsive = (): ResponsiveReturnValues => {\r\n  const theme = useTheme();\r\n\r\n  const isMobile = useMediaQuery({ query: theme.media.xs });\r\n  const isTablet = useMediaQuery({ query: theme.media.md });\r\n  const isDesktop = useMediaQuery({ query: theme.media.xl });\r\n  const isBigScreen = useMediaQuery({ query: theme.media.xxl });\r\n\r\n  const mobileOnly = useMediaQuery({\r\n    query: `(max-width: ${theme.breakpoints.md - 0.02}px)`,\r\n  });\r\n\r\n  const tabletOnly = useMediaQuery({\r\n    query: `(min-width: ${theme.breakpoints.md}px) and (max-width: ${theme.breakpoints.xl - 0.02}px)`,\r\n  });\r\n\r\n  const desktopOnly = useMediaQuery({\r\n    query: `(min-width: ${theme.breakpoints.xl}px) and (max-width: ${theme.breakpoints.xxl - 0.02}px)`,\r\n  });\r\n\r\n  return {\r\n    isMobile,\r\n    isTablet,\r\n    isDesktop,\r\n    isBigScreen,\r\n    mobileOnly,\r\n    tabletOnly,\r\n    desktopOnly,\r\n    useMediaQuery,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}