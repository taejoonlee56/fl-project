{"ast":null,"code":"import _objectSpread from \"/home/tj/fl-carla/dashboard/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/tj/fl-carla/dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/tj/fl-carla/dashboard/src/components/forms/DynamicForm/DynamicForm.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { Input } from '@app/components/common/inputs/Input/Input';\nimport { Select, Option } from '@app/components/common/selects/Select/Select';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { notificationController } from '@app/controllers/notificationController';\nimport * as S from './DynamicForm.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var DynamicForm = function DynamicForm() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFieldsChanged = _useState2[0],\n      setFieldsChanged = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _BaseButtonsForm$useF = BaseButtonsForm.useForm(),\n      _BaseButtonsForm$useF2 = _slicedToArray(_BaseButtonsForm$useF, 1),\n      form = _BaseButtonsForm$useF2[0];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var areas = [{\n    label: t('forms.dynamicFormLabels.beijing'),\n    value: 'Beijing'\n  }, {\n    label: t('forms.dynamicFormLabels.shanghai'),\n    value: 'Shanghai'\n  }];\n  var sights = {\n    Beijing: [t('forms.dynamicFormLabels.tiananmen'), t('forms.dynamicFormLabels.greatWall')],\n    Shanghai: [t('forms.dynamicFormLabels.orientalPearl'), t('forms.dynamicFormLabels.theBund')]\n  };\n\n  var onFinish = function onFinish() {\n    var values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    setLoading(true);\n    setTimeout(function () {\n      setLoading(false);\n      setFieldsChanged(false);\n      notificationController.success({\n        message: t('common.success')\n      });\n      console.log(values);\n    }, 1000);\n  };\n\n  var handleChange = function handleChange() {\n    form.setFieldsValue({\n      sights: []\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(BaseButtonsForm, {\n    form: form,\n    name: \"dynamicForm\",\n    isFieldsChanged: isFieldsChanged,\n    loading: isLoading,\n    onFinish: onFinish,\n    autoComplete: \"off\",\n    onFieldsChange: function onFieldsChange() {\n      return setFieldsChanged(true);\n    },\n    children: [/*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n      name: \"area\",\n      label: t('forms.dynamicFormLabels.area'),\n      rules: [{\n        required: true,\n        message: t('forms.dynamicFormLabels.areaError')\n      }],\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        options: areas,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(BaseButtonsForm.List, {\n      name: \"sights\",\n      children: function children(fields, _ref) {\n        var add = _ref.add,\n            remove = _ref.remove;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [fields.map(function (field) {\n            return /*#__PURE__*/_jsxDEV(Row, {\n              wrap: false,\n              gutter: [10, 10],\n              align: \"middle\",\n              justify: \"space-between\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n                  noStyle: true // eslint-disable-next-line\n                  ,\n                  shouldUpdate: function shouldUpdate(prevValues, curValues) {\n                    return prevValues.area !== curValues.area || prevValues.sights !== curValues.sights;\n                  },\n                  children: function children() {\n                    return /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, _objectSpread(_objectSpread({}, field), {}, {\n                      label: t('forms.dynamicFormLabels.sight'),\n                      name: [field.name, 'sight'],\n                      fieldKey: [field.key, 'sight'],\n                      rules: [{\n                        required: true,\n                        message: t('forms.dynamicFormLabels.sightError')\n                      }],\n                      children: /*#__PURE__*/_jsxDEV(Select, {\n                        disabled: !form.getFieldValue('area'),\n                        children: (sights[form.getFieldValue('area')] || []).map(function (item) {\n                          return /*#__PURE__*/_jsxDEV(Option, {\n                            value: item,\n                            children: item\n                          }, item, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 86,\n                            columnNumber: 29\n                          }, _this);\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 84,\n                        columnNumber: 25\n                      }, _this)\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 77,\n                      columnNumber: 23\n                    }, _this);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, _objectSpread(_objectSpread({}, field), {}, {\n                  label: t('forms.dynamicFormLabels.price'),\n                  name: [field.name, 'price'],\n                  fieldKey: [field.key, 'price'],\n                  rules: [{\n                    required: true,\n                    message: t('forms.dynamicFormLabels.priceError')\n                  }],\n                  children: /*#__PURE__*/_jsxDEV(S.Wrapper, {\n                    children: [/*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(S.RemoveBtn, {\n                      onClick: function onClick() {\n                        return remove(field.name);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 21\n                  }, _this)\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, _this)]\n            }, field.key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, _this);\n          }), /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"dashed\",\n              onClick: function onClick() {\n                return add();\n              },\n              block: true,\n              icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 71\n              }, _this),\n              children: t('forms.dynamicFormLabels.addSights')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DynamicForm, \"lA5tQOe3gayJLaN2otkLjCN3ISE=\", false, function () {\n  return [BaseButtonsForm.useForm, useTranslation];\n});\n\n_c = DynamicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DynamicForm\");","map":{"version":3,"sources":["/home/tj/fl-carla/dashboard/src/components/forms/DynamicForm/DynamicForm.tsx"],"names":["React","useState","Col","Row","useTranslation","PlusOutlined","BaseButtonsForm","Input","Select","Option","Button","notificationController","S","DynamicForm","isFieldsChanged","setFieldsChanged","isLoading","setLoading","useForm","form","t","areas","label","value","sights","Beijing","Shanghai","onFinish","values","setTimeout","success","message","console","log","handleChange","setFieldsValue","required","fields","add","remove","map","field","prevValues","curValues","area","name","key","getFieldValue","item"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { Input } from '@app/components/common/inputs/Input/Input';\nimport { Select, Option } from '@app/components/common/selects/Select/Select';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { notificationController } from '@app/controllers/notificationController';\nimport * as S from './DynamicForm.styles';\n\ninterface Sight {\n  [key: string]: string[];\n}\n\nexport const DynamicForm: React.FC = () => {\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [form] = BaseButtonsForm.useForm();\n  const { t } = useTranslation();\n\n  const areas = [\n    { label: t('forms.dynamicFormLabels.beijing'), value: 'Beijing' },\n    { label: t('forms.dynamicFormLabels.shanghai'), value: 'Shanghai' },\n  ];\n\n  const sights: Sight = {\n    Beijing: [t('forms.dynamicFormLabels.tiananmen'), t('forms.dynamicFormLabels.greatWall')],\n    Shanghai: [t('forms.dynamicFormLabels.orientalPearl'), t('forms.dynamicFormLabels.theBund')],\n  };\n\n  const onFinish = (values = {}) => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setFieldsChanged(false);\n      notificationController.success({ message: t('common.success') });\n      console.log(values);\n    }, 1000);\n  };\n\n  const handleChange = () => {\n    form.setFieldsValue({ sights: [] });\n  };\n\n  return (\n    <BaseButtonsForm\n      form={form}\n      name=\"dynamicForm\"\n      isFieldsChanged={isFieldsChanged}\n      loading={isLoading}\n      onFinish={onFinish}\n      autoComplete=\"off\"\n      onFieldsChange={() => setFieldsChanged(true)}\n    >\n      <BaseButtonsForm.Item\n        name=\"area\"\n        label={t('forms.dynamicFormLabels.area')}\n        rules={[{ required: true, message: t('forms.dynamicFormLabels.areaError') }]}\n      >\n        <Select options={areas} onChange={handleChange} />\n      </BaseButtonsForm.Item>\n      <BaseButtonsForm.List name=\"sights\">\n        {(fields, { add, remove }) => (\n          <>\n            {fields.map((field) => (\n              <Row key={field.key} wrap={false} gutter={[10, 10]} align=\"middle\" justify=\"space-between\">\n                <Col span={12}>\n                  <BaseButtonsForm.Item\n                    noStyle\n                    // eslint-disable-next-line\n                    shouldUpdate={(prevValues: any, curValues: any) =>\n                      prevValues.area !== curValues.area || prevValues.sights !== curValues.sights\n                    }\n                  >\n                    {() => (\n                      <BaseButtonsForm.Item\n                        {...field}\n                        label={t('forms.dynamicFormLabels.sight')}\n                        name={[field.name, 'sight']}\n                        fieldKey={[field.key, 'sight']}\n                        rules={[{ required: true, message: t('forms.dynamicFormLabels.sightError') }]}\n                      >\n                        <Select disabled={!form.getFieldValue('area')}>\n                          {(sights[form.getFieldValue('area')] || []).map((item) => (\n                            <Option key={item} value={item}>\n                              {item}\n                            </Option>\n                          ))}\n                        </Select>\n                      </BaseButtonsForm.Item>\n                    )}\n                  </BaseButtonsForm.Item>\n                </Col>\n                <Col span={12}>\n                  <BaseButtonsForm.Item\n                    {...field}\n                    label={t('forms.dynamicFormLabels.price')}\n                    name={[field.name, 'price']}\n                    fieldKey={[field.key, 'price']}\n                    rules={[{ required: true, message: t('forms.dynamicFormLabels.priceError') }]}\n                  >\n                    <S.Wrapper>\n                      <Input />\n                      <S.RemoveBtn onClick={() => remove(field.name)} />\n                    </S.Wrapper>\n                  </BaseButtonsForm.Item>\n                </Col>\n              </Row>\n            ))}\n\n            <BaseButtonsForm.Item>\n              <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                {t('forms.dynamicFormLabels.addSights')}\n              </Button>\n            </BaseButtonsForm.Item>\n          </>\n        )}\n      </BaseButtonsForm.List>\n    </BaseButtonsForm>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}