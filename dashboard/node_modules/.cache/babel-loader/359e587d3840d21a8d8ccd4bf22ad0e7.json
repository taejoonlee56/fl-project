{"ast":null,"code":"import _objectSpread from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\nimport _slicedToArray from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"D:\\\\fl-carla\\\\src\\\\components\\\\tables\\\\BasicTable\\\\BasicTable.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { Col, Row, Space } from 'antd';\nimport { getBasicTableData } from 'api/table.api';\nimport { Table } from 'components/common/Table/Table';\nimport { Button } from 'components/common/buttons/Button/Button';\nimport { useTranslation } from 'react-i18next';\nimport { defineColorByPriority } from '@app/utils/utils';\nimport { notificationController } from 'controllers/notificationController';\nimport { Status } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/Status/Status';\nimport { useMounted } from '@app/hooks/useMounted';\nimport { useTheme } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar initialPagination = {\n  current: 1,\n  pageSize: 5\n};\nexport var BasicTable = function BasicTable() {\n  _s();\n\n  var _useState = useState({\n    data: [],\n    pagination: initialPagination,\n    loading: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      tableData = _useState2[0],\n      setTableData = _useState2[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useMounted = useMounted(),\n      isMounted = _useMounted.isMounted;\n\n  var theme = useTheme();\n  var fetch = useCallback(function (pagination) {\n    setTableData(function (tableData) {\n      return _objectSpread(_objectSpread({}, tableData), {}, {\n        loading: true\n      });\n    });\n    getBasicTableData(pagination).then(function (res) {\n      if (isMounted.current) {\n        setTableData({\n          data: res.data,\n          pagination: res.pagination,\n          loading: false\n        });\n      }\n    });\n  }, [isMounted]);\n  useEffect(function () {\n    fetch(initialPagination);\n  }, [fetch]);\n\n  var handleTableChange = function handleTableChange(pagination) {\n    fetch(pagination);\n  };\n\n  var handleDeleteRow = function handleDeleteRow(rowId) {\n    setTableData(_objectSpread(_objectSpread({}, tableData), {}, {\n      data: tableData.data.filter(function (item) {\n        return item.key !== rowId;\n      }),\n      pagination: _objectSpread(_objectSpread({}, tableData.pagination), {}, {\n        total: tableData.pagination.total ? tableData.pagination.total - 1 : tableData.pagination.total\n      })\n    }));\n  };\n\n  var columns = [{\n    title: t('common.name'),\n    dataIndex: 'name',\n    render: function render(text) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }, _this);\n    },\n    filterMode: 'tree',\n    filterSearch: true,\n    filters: [{\n      text: t('common.firstName'),\n      value: 'firstName',\n      children: [{\n        text: 'Joe',\n        value: 'Joe'\n      }, {\n        text: 'Pavel',\n        value: 'Pavel'\n      }, {\n        text: 'Jim',\n        value: 'Jim'\n      }, {\n        text: 'Josh',\n        value: 'Josh'\n      }]\n    }, {\n      text: t('common.lastName'),\n      value: 'lastName',\n      children: [{\n        text: 'Green',\n        value: 'Green'\n      }, {\n        text: 'Black',\n        value: 'Black'\n      }, {\n        text: 'Brown',\n        value: 'Brown'\n      }]\n    }],\n    onFilter: function onFilter(value, record) {\n      return record.name.includes(value.toString());\n    }\n  }, {\n    title: t('common.age'),\n    dataIndex: 'age',\n    sorter: function sorter(a, b) {\n      return a.age - b.age;\n    },\n    showSorterTooltip: false\n  }, {\n    title: t('common.address'),\n    dataIndex: 'address'\n  }, {\n    title: t('common.tags'),\n    key: 'tags',\n    dataIndex: 'tags',\n    render: function render(tags) {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        gutter: [10, 10],\n        children: tags.map(function (tag) {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Status, {\n              color: defineColorByPriority(tag.priority, theme),\n              text: tag.value.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, _this)\n          }, tag.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, _this);\n    }\n  }, {\n    title: t('tables.actions'),\n    dataIndex: 'actions',\n    width: '15%',\n    render: function render(text, record) {\n      return /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"ghost\",\n          onClick: function onClick() {\n            notificationController.info({\n              message: t('tables.inviteMessage', {\n                name: record.name\n              })\n            });\n          },\n          children: t('tables.invite')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"default\",\n          danger: true,\n          onClick: function onClick() {\n            return handleDeleteRow(record.key);\n          },\n          children: t('tables.delete')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, _this);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(Table, {\n    columns: columns,\n    dataSource: tableData.data,\n    pagination: tableData.pagination,\n    loading: tableData.loading,\n    onChange: handleTableChange,\n    scroll: {\n      x: 800\n    },\n    bordered: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(BasicTable, \"6x1ACGYtIiu1a4ITLQbqo0YFUbI=\", false, function () {\n  return [useTranslation, useMounted, useTheme];\n});\n\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["D:/fl-carla/src/components/tables/BasicTable/BasicTable.tsx"],"names":["React","useEffect","useState","useCallback","Col","Row","Space","getBasicTableData","Table","Button","useTranslation","defineColorByPriority","notificationController","Status","useMounted","useTheme","initialPagination","current","pageSize","BasicTable","data","pagination","loading","tableData","setTableData","t","isMounted","theme","fetch","then","res","handleTableChange","handleDeleteRow","rowId","filter","item","key","total","columns","title","dataIndex","render","text","filterMode","filterSearch","filters","value","children","onFilter","record","name","includes","toString","sorter","a","b","age","showSorterTooltip","tags","map","tag","priority","toUpperCase","width","info","message","x"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { Col, Row, Space, TablePaginationConfig } from 'antd';\r\nimport { BasicTableRow, getBasicTableData, Pagination, Tag } from 'api/table.api';\r\nimport { Table } from 'components/common/Table/Table';\r\nimport { ColumnsType } from 'antd/es/table';\r\nimport { Button } from 'components/common/buttons/Button/Button';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { defineColorByPriority } from '@app/utils/utils';\r\nimport { notificationController } from 'controllers/notificationController';\r\nimport { Status } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/Status/Status';\r\nimport { useMounted } from '@app/hooks/useMounted';\r\nimport { useTheme } from 'styled-components';\r\n\r\nconst initialPagination: Pagination = {\r\n  current: 1,\r\n  pageSize: 5,\r\n};\r\n\r\nexport const BasicTable: React.FC = () => {\r\n  const [tableData, setTableData] = useState<{ data: BasicTableRow[]; pagination: Pagination; loading: boolean }>({\r\n    data: [],\r\n    pagination: initialPagination,\r\n    loading: false,\r\n  });\r\n  const { t } = useTranslation();\r\n  const { isMounted } = useMounted();\r\n\r\n  const theme = useTheme();\r\n\r\n  const fetch = useCallback(\r\n    (pagination: Pagination) => {\r\n      setTableData((tableData) => ({ ...tableData, loading: true }));\r\n      getBasicTableData(pagination).then((res) => {\r\n        if (isMounted.current) {\r\n          setTableData({ data: res.data, pagination: res.pagination, loading: false });\r\n        }\r\n      });\r\n    },\r\n    [isMounted],\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetch(initialPagination);\r\n  }, [fetch]);\r\n\r\n  const handleTableChange = (pagination: TablePaginationConfig) => {\r\n    fetch(pagination);\r\n  };\r\n\r\n  const handleDeleteRow = (rowId: number) => {\r\n    setTableData({\r\n      ...tableData,\r\n      data: tableData.data.filter((item) => item.key !== rowId),\r\n      pagination: {\r\n        ...tableData.pagination,\r\n        total: tableData.pagination.total ? tableData.pagination.total - 1 : tableData.pagination.total,\r\n      },\r\n    });\r\n  };\r\n\r\n  const columns: ColumnsType<BasicTableRow> = [\r\n    {\r\n      title: t('common.name'),\r\n      dataIndex: 'name',\r\n      render: (text: string) => <span>{text}</span>,\r\n      filterMode: 'tree',\r\n      filterSearch: true,\r\n      filters: [\r\n        {\r\n          text: t('common.firstName'),\r\n          value: 'firstName',\r\n          children: [\r\n            {\r\n              text: 'Joe',\r\n              value: 'Joe',\r\n            },\r\n            {\r\n              text: 'Pavel',\r\n              value: 'Pavel',\r\n            },\r\n            {\r\n              text: 'Jim',\r\n              value: 'Jim',\r\n            },\r\n            {\r\n              text: 'Josh',\r\n              value: 'Josh',\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          text: t('common.lastName'),\r\n          value: 'lastName',\r\n          children: [\r\n            {\r\n              text: 'Green',\r\n              value: 'Green',\r\n            },\r\n            {\r\n              text: 'Black',\r\n              value: 'Black',\r\n            },\r\n            {\r\n              text: 'Brown',\r\n              value: 'Brown',\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n      onFilter: (value: string | number | boolean, record: BasicTableRow) => record.name.includes(value.toString()),\r\n    },\r\n    {\r\n      title: t('common.age'),\r\n      dataIndex: 'age',\r\n      sorter: (a: BasicTableRow, b: BasicTableRow) => a.age - b.age,\r\n      showSorterTooltip: false,\r\n    },\r\n    {\r\n      title: t('common.address'),\r\n      dataIndex: 'address',\r\n    },\r\n    {\r\n      title: t('common.tags'),\r\n      key: 'tags',\r\n      dataIndex: 'tags',\r\n      render: (tags: Tag[]) => (\r\n        <Row gutter={[10, 10]}>\r\n          {tags.map((tag: Tag) => {\r\n            return (\r\n              <Col key={tag.value}>\r\n                <Status color={defineColorByPriority(tag.priority, theme)} text={tag.value.toUpperCase()} />\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      ),\r\n    },\r\n    {\r\n      title: t('tables.actions'),\r\n      dataIndex: 'actions',\r\n      width: '15%',\r\n      render: (text: string, record: { name: string; key: number }) => {\r\n        return (\r\n          <Space>\r\n            <Button\r\n              type=\"ghost\"\r\n              onClick={() => {\r\n                notificationController.info({ message: t('tables.inviteMessage', { name: record.name }) });\r\n              }}\r\n            >\r\n              {t('tables.invite')}\r\n            </Button>\r\n            <Button type=\"default\" danger onClick={() => handleDeleteRow(record.key)}>\r\n              {t('tables.delete')}\r\n            </Button>\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Table\r\n      columns={columns}\r\n      dataSource={tableData.data}\r\n      pagination={tableData.pagination}\r\n      loading={tableData.loading}\r\n      onChange={handleTableChange}\r\n      scroll={{ x: 800 }}\r\n      bordered\r\n    />\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}