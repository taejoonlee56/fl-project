{"ast":null,"code":"function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nimport { isSupportedCountry } from 'libphonenumber-js/core';\nexport { getCountries } from 'libphonenumber-js/core';\n/**\r\n * Sorts country `<select/>` options.\r\n * Can move some country `<select/>` options\r\n * to the top of the list, for example.\r\n * @param  {object[]} countryOptions — Country `<select/>` options.\r\n * @param  {string[]} [countryOptionsOrder] — Country `<select/>` options order. Example: `[\"US\", \"CA\", \"AU\", \"|\", \"...\"]`.\r\n * @return {object[]}\r\n */\n\nexport function sortCountryOptions(options, order) {\n  if (!order) {\n    return options;\n  }\n  var optionsOnTop = [];\n  var optionsOnBottom = [];\n  var appendTo = optionsOnTop;\n  for (var _iterator = _createForOfIteratorHelperLoose(order), _step; !(_step = _iterator()).done;) {\n    var element = _step.value;\n    if (element === '|') {\n      appendTo.push({\n        divider: true\n      });\n    } else if (element === '...' || element === '…') {\n      appendTo = optionsOnBottom;\n    } else {\n      (function () {\n        var countryCode = void 0;\n        if (element === '🌐') {\n          countryCode = undefined;\n        } else {\n          countryCode = element;\n        } // Find the position of the option.\n\n        var index = options.indexOf(options.filter(function (option) {\n          return option.value === countryCode;\n        })[0]); // Get the option.\n\n        var option = options[index]; // Remove the option from its default position.\n\n        options.splice(index, 1); // Add the option on top.\n\n        appendTo.push(option);\n      })();\n    }\n  }\n  return optionsOnTop.concat(options).concat(optionsOnBottom);\n}\nexport function getSupportedCountryOptions(countryOptions, metadata) {\n  if (countryOptions) {\n    countryOptions = countryOptions.filter(function (option) {\n      switch (option) {\n        case '🌐':\n        case '|':\n        case '...':\n        case '…':\n          return true;\n        default:\n          return isCountrySupportedWithError(option, metadata);\n      }\n    });\n    if (countryOptions.length > 0) {\n      return countryOptions;\n    }\n  }\n}\nexport function isCountrySupportedWithError(country, metadata) {\n  if (isSupportedCountry(country, metadata)) {\n    return true;\n  } else {\n    console.error(\"Country not found: \".concat(country));\n    return false;\n  }\n}\nexport function getSupportedCountries(countries, metadata) {\n  if (countries) {\n    countries = countries.filter(function (country) {\n      return isCountrySupportedWithError(country, metadata);\n    });\n    if (countries.length === 0) {\n      countries = undefined;\n    }\n  }\n  return countries;\n}","map":{"version":3,"sources":["../../source/helpers/countries.js"],"names":["isSupportedCountry","getCountries","sortCountryOptions","options","order","optionsOnTop","optionsOnBottom","appendTo","element","push","divider","countryCode","undefined","index","indexOf","filter","option","value","splice","concat","getSupportedCountryOptions","countryOptions","metadata","isCountrySupportedWithError","length","country","console","error","getSupportedCountries","countries"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,kBAAT,QAAmC,wBAAnC;AACA,SAASC,YAAT,QAA6B,wBAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,kBAAT,CAA4BC,OAA5B,EAAqCC,KAArC,EAA4C;EAClD,IAAI,CAACA,KAAL,EAAY;IACX,OAAOD,OAAP;EACA;EACD,IAAME,YAAY,GAAG,EAArB;EACA,IAAMC,eAAe,GAAG,EAAxB;EACA,IAAIC,QAAQ,GAAGF,YAAf;EACA,KAAA,IAAA,SAAA,GAAA,+BAAA,CAAsBD,KAAtB,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,KAAA,GAAA,SAAA,CAAA,CAAA,EAAA,IAAA,GAA6B;IAAA,IAAlBI,OAAkB,GAAA,KAAA,CAAA,KAAA;IAC5B,IAAIA,OAAO,KAAK,GAAhB,EAAqB;MACpBD,QAAQ,CAACE,IAATF,CAAc;QAAEG,OAAO,EAAE;MAAX,CAAdH,CAAAA;IACA,CAFD,MAEO,IAAIC,OAAO,KAAK,KAAZA,IAAqBA,OAAO,KAAK,GAArC,EAA0C;MAChDD,QAAQ,GAAGD,eAAXC;IACA,CAFM,MAEA;MAAA,CAAA,YAAA;QACN,IAAII,WAAW,GAAA,KAAA,CAAf;QACA,IAAIH,OAAO,KAAK,IAAhB,EAAsB;UACrBG,WAAW,GAAGC,SAAdD;QACA,CAFD,MAEO;UACNA,WAAW,GAAGH,OAAdG;QACA,CANK,CAON;;QACA,IAAME,KAAK,GAAG,OAAO,CAACC,OAAR,CAAgB,OAAO,CAACC,MAAR,CAAe,UAAA,MAAM,EAAA;UAAA,OAAIC,MAAM,CAACC,KAAPD,KAAiBL,WAArB;QAAA,CAArB,CAAA,CAAuD,CAAvD,CAAhB,CAAd,CARM,CASN;;QACA,IAAMK,MAAM,GAAGb,OAAO,CAACU,KAAD,CAAtB,CAVM,CAWN;;QACAV,OAAO,CAACe,MAARf,CAAeU,KAAfV,EAAsB,CAAtBA,CAAAA,CAZM,CAaN;;QACAI,QAAQ,CAACE,IAATF,CAAcS,MAAdT,CAAAA;MAdM,CAAA,EAAA,CAAA;IAeN;EACD;EACD,OAAOF,YAAY,CAACc,MAAbd,CAAoBF,OAApBE,CAAAA,CAA6Bc,MAA7Bd,CAAoCC,eAApCD,CAAP;AACA;AAED,OAAO,SAASe,0BAAT,CAAoCC,cAApC,EAAoDC,QAApD,EAA8D;EACpE,IAAID,cAAJ,EAAoB;IACnBA,cAAc,GAAG,cAAc,CAACN,MAAf,CAAsB,UAACC,MAAD,EAAY;MAClD,QAAQA,MAAR;QACC,KAAK,IAAL;QACA,KAAK,GAAL;QACA,KAAK,KAAL;QACA,KAAK,GAAL;UACC,OAAO,IAAP;QACD;UACC,OAAOO,2BAA2B,CAACP,MAAD,EAASM,QAAT,CAAlC;MAPF;IASA,CAVgB,CAAjBD;IAWA,IAAIA,cAAc,CAACG,MAAfH,GAAwB,CAA5B,EAA+B;MAC9B,OAAOA,cAAP;IACA;EACD;AACD;AAED,OAAO,SAASE,2BAAT,CAAqCE,OAArC,EAA8CH,QAA9C,EAAwD;EAC9D,IAAItB,kBAAkB,CAACyB,OAAD,EAAUH,QAAV,CAAtB,EAA2C;IAC1C,OAAO,IAAP;EACA,CAFD,MAEO;IACNI,OAAO,CAACC,KAARD,CAAAA,qBAAAA,CAAAA,MAAAA,CAAoCD,OAApCC,CAAAA,CAAAA;IACA,OAAO,KAAP;EACA;AACD;AAED,OAAO,SAASE,qBAAT,CAA+BC,SAA/B,EAA0CP,QAA1C,EAAoD;EAC1D,IAAIO,SAAJ,EAAe;IACdA,SAAS,GAAG,SAAS,CAACd,MAAV,CAAiB,UAAA,OAAO,EAAA;MAAA,OAAIQ,2BAA2B,CAACE,OAAD,EAAUH,QAAV,CAA/B;IAAA,CAAxB,CAAZO;IACA,IAAIA,SAAS,CAACL,MAAVK,KAAqB,CAAzB,EAA4B;MAC3BA,SAAS,GAAGjB,SAAZiB;IACA;EACD;EACD,OAAOA,SAAP;AACA","sourcesContent":["import { isSupportedCountry } from 'libphonenumber-js/core'\r\nexport { getCountries } from 'libphonenumber-js/core'\r\n\r\n/**\r\n * Sorts country `<select/>` options.\r\n * Can move some country `<select/>` options\r\n * to the top of the list, for example.\r\n * @param  {object[]} countryOptions — Country `<select/>` options.\r\n * @param  {string[]} [countryOptionsOrder] — Country `<select/>` options order. Example: `[\"US\", \"CA\", \"AU\", \"|\", \"...\"]`.\r\n * @return {object[]}\r\n */\r\nexport function sortCountryOptions(options, order) {\r\n\tif (!order) {\r\n\t\treturn options\r\n\t}\r\n\tconst optionsOnTop = []\r\n\tconst optionsOnBottom = []\r\n\tlet appendTo = optionsOnTop\r\n\tfor (const element of order) {\r\n\t\tif (element === '|') {\r\n\t\t\tappendTo.push({ divider: true })\r\n\t\t} else if (element === '...' || element === '…') {\r\n\t\t\tappendTo = optionsOnBottom\r\n\t\t} else {\r\n\t\t\tlet countryCode\r\n\t\t\tif (element === '🌐') {\r\n\t\t\t\tcountryCode = undefined\r\n\t\t\t} else {\r\n\t\t\t\tcountryCode = element\r\n\t\t\t}\r\n\t\t\t// Find the position of the option.\r\n\t\t\tconst index = options.indexOf(options.filter(option => option.value === countryCode)[0])\r\n\t\t\t// Get the option.\r\n\t\t\tconst option = options[index]\r\n\t\t\t// Remove the option from its default position.\r\n\t\t\toptions.splice(index, 1)\r\n\t\t\t// Add the option on top.\r\n\t\t\tappendTo.push(option)\r\n\t\t}\r\n\t}\r\n\treturn optionsOnTop.concat(options).concat(optionsOnBottom)\r\n}\r\n\r\nexport function getSupportedCountryOptions(countryOptions, metadata) {\r\n\tif (countryOptions) {\r\n\t\tcountryOptions = countryOptions.filter((option) => {\r\n\t\t\tswitch (option) {\r\n\t\t\t\tcase '🌐':\r\n\t\t\t\tcase '|':\r\n\t\t\t\tcase '...':\r\n\t\t\t\tcase '…':\r\n\t\t\t\t\treturn true\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn isCountrySupportedWithError(option, metadata)\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (countryOptions.length > 0) {\r\n\t\t\treturn countryOptions\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function isCountrySupportedWithError(country, metadata) {\r\n\tif (isSupportedCountry(country, metadata)) {\r\n\t\treturn true\r\n\t} else {\r\n\t\tconsole.error(`Country not found: ${country}`)\r\n\t\treturn false\r\n\t}\r\n}\r\n\r\nexport function getSupportedCountries(countries, metadata) {\r\n\tif (countries) {\r\n\t\tcountries = countries.filter(country => isCountrySupportedWithError(country, metadata))\r\n\t\tif (countries.length === 0) {\r\n\t\t\tcountries = undefined\r\n\t\t}\r\n\t}\r\n\treturn countries\r\n}"]},"metadata":{},"sourceType":"module"}