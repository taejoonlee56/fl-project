{"ast":null,"code":"import _slicedToArray from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"D:\\\\fl-carla\\\\src\\\\components\\\\forms\\\\StepForm\\\\StepForm.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Steps } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { Step1 } from './Steps/Step1';\nimport { Step2 } from './Steps/Step2';\nimport { Step3 } from './Steps/Step3';\nimport { Step4 } from './Steps/Step4';\nimport { notificationController } from '@app/controllers/notificationController';\nimport { Dates } from '@app/constants/Dates';\nimport { mergeBy } from '@app/utils/utils';\nimport * as S from './StepForm.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var StepForm = function StepForm() {\n  _s();\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      current = _useState2[0],\n      setCurrent = _useState2[1];\n\n  var _BaseForm$useForm = BaseForm.useForm(),\n      _BaseForm$useForm2 = _slicedToArray(_BaseForm$useForm, 1),\n      form = _BaseForm$useForm2[0];\n\n  var _useState3 = useState([{\n    name: 'login',\n    value: 'Jerri'\n  }, {\n    name: 'password',\n    value: '123456'\n  }, {\n    name: 'confirmPassword',\n    value: '123456'\n  }, {\n    name: 'salutation',\n    value: 'mr'\n  }, {\n    name: 'gender',\n    value: 'male'\n  }, {\n    name: 'firstName',\n    value: 'John'\n  }, {\n    name: 'lastName',\n    value: 'Black'\n  }, {\n    name: 'birthday',\n    value: Dates.getDate(1576789200000)\n  }, {\n    name: 'phone',\n    value: '298573124'\n  }, {\n    name: 'email',\n    value: ''\n  }, {\n    name: 'address1',\n    value: 'Slobodskay street'\n  }, {\n    name: 'address2',\n    value: 'Nevski street'\n  }, {\n    name: 'zipCode',\n    value: '435123'\n  }, {\n    name: 'city',\n    value: 'Minsk'\n  }, {\n    name: 'country',\n    value: 'Belarus'\n  }, {\n    name: 'prefix',\n    value: '+7'\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fields = _useState4[0],\n      setFields = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setIsLoading = _useState6[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var formLabels = {\n    login: t('forms.stepFormLabels.login'),\n    password: t('common.password'),\n    confirmPassword: t('common.confirmPassword'),\n    salutation: t('forms.stepFormLabels.salutation'),\n    gender: t('forms.stepFormLabels.gender'),\n    firstName: t('common.firstName'),\n    lastName: t('common.lastName'),\n    birthday: t('forms.stepFormLabels.birthday'),\n    phone: t('common.phone'),\n    email: t('common.email'),\n    address1: \"\".concat(t('common.address'), \" 1\"),\n    address2: \"\".concat(t('common.address'), \" 2\"),\n    zipCode: t('common.zipcode'),\n    city: t('common.city'),\n    country: t('common.country')\n  };\n  var formValues = fields.filter(function (item) {\n    return item.name !== 'prefix';\n  }).map(function (item) {\n    return {\n      name: formLabels[item.name],\n      value: String(item.name === 'birthday' && item.value ? item.value.format('YYYY-MM-DD') : item.value)\n    };\n  });\n\n  var next = function next() {\n    form.validateFields().then(function () {\n      setCurrent(current + 1);\n    });\n  };\n\n  var prev = function prev() {\n    setCurrent(current - 1);\n  };\n\n  var onFinish = function onFinish() {\n    setIsLoading(true);\n    setTimeout(function () {\n      notificationController.success({\n        message: t('common.success')\n      });\n      setIsLoading(false);\n      setCurrent(0);\n    }, 1500);\n  };\n\n  var steps = [{\n    title: t('common.country')\n  }, {\n    title: t('forms.stepFormLabels.info')\n  }, {\n    title: t('forms.stepFormLabels.location')\n  }, {\n    title: t('forms.stepFormLabels.confirm')\n  }];\n  var formFieldsUi = [/*#__PURE__*/_jsxDEV(Step1, {}, \"1\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, _this), /*#__PURE__*/_jsxDEV(Step2, {}, \"2\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, _this), /*#__PURE__*/_jsxDEV(Step3, {}, \"3\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, _this), /*#__PURE__*/_jsxDEV(Step4, {\n    formValues: formValues\n  }, \"4\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, _this)];\n  return /*#__PURE__*/_jsxDEV(BaseForm, {\n    name: \"stepForm\",\n    form: form,\n    fields: fields,\n    onFieldsChange: function onFieldsChange(_, allFields) {\n      var currentFields = allFields.map(function (item) {\n        return {\n          name: Array.isArray(item.name) ? item.name[0] : '',\n          value: item.value\n        };\n      });\n      var uniqueData = mergeBy(fields, currentFields, 'name');\n      setFields(uniqueData);\n    },\n    children: [/*#__PURE__*/_jsxDEV(Steps, {\n      labelPlacement: \"vertical\",\n      size: \"small\",\n      current: current,\n      children: steps.map(function (item) {\n        return /*#__PURE__*/_jsxDEV(Steps.Step, {\n          title: item.title,\n          description: \"\"\n        }, item.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formFieldsUi[current]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [current < steps.length - 1 && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: function onClick() {\n          return next();\n        },\n        children: t('forms.stepFormLabels.next')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, _this), current === steps.length - 1 && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: onFinish,\n        loading: isLoading,\n        children: t('forms.stepFormLabels.done')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, _this), current > 0 && /*#__PURE__*/_jsxDEV(S.PrevButton, {\n        type: \"default\",\n        onClick: function onClick() {\n          return prev();\n        },\n        children: t('forms.stepFormLabels.previous')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(StepForm, \"Gavlw24f68QGQdmr7ntpIC3S6os=\", false, function () {\n  return [BaseForm.useForm, useTranslation];\n});\n\n_c = StepForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StepForm\");","map":{"version":3,"sources":["D:/fl-carla/src/components/forms/StepForm/StepForm.tsx"],"names":["React","useState","Steps","useTranslation","BaseForm","Button","Step1","Step2","Step3","Step4","notificationController","Dates","mergeBy","S","StepForm","current","setCurrent","useForm","form","name","value","getDate","fields","setFields","isLoading","setIsLoading","t","formLabels","login","password","confirmPassword","salutation","gender","firstName","lastName","birthday","phone","email","address1","address2","zipCode","city","country","formValues","filter","item","map","String","format","next","validateFields","then","prev","onFinish","setTimeout","success","message","steps","title","formFieldsUi","_","allFields","currentFields","Array","isArray","uniqueData","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Steps } from 'antd';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\r\nimport { Button } from '@app/components/common/buttons/Button/Button';\r\nimport { Step1 } from './Steps/Step1';\r\nimport { Step2 } from './Steps/Step2';\r\nimport { Step3 } from './Steps/Step3';\r\nimport { Step4 } from './Steps/Step4';\r\nimport { notificationController } from '@app/controllers/notificationController';\r\nimport { Dates } from '@app/constants/Dates';\r\nimport { mergeBy } from '@app/utils/utils';\r\nimport * as S from './StepForm.styles';\r\ninterface FormValues {\r\n  [key: string]: string | undefined;\r\n}\r\n\r\ninterface FieldData {\r\n  name: string | number;\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  value?: any;\r\n}\r\n\r\nexport const StepForm: React.FC = () => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [form] = BaseForm.useForm();\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: 'login', value: 'Jerri' },\r\n    { name: 'password', value: '123456' },\r\n    { name: 'confirmPassword', value: '123456' },\r\n    { name: 'salutation', value: 'mr' },\r\n    { name: 'gender', value: 'male' },\r\n    { name: 'firstName', value: 'John' },\r\n    { name: 'lastName', value: 'Black' },\r\n    { name: 'birthday', value: Dates.getDate(1576789200000) },\r\n    { name: 'phone', value: '298573124' },\r\n    { name: 'email', value: '' },\r\n    { name: 'address1', value: 'Slobodskay street' },\r\n    { name: 'address2', value: 'Nevski street' },\r\n    { name: 'zipCode', value: '435123' },\r\n    { name: 'city', value: 'Minsk' },\r\n    { name: 'country', value: 'Belarus' },\r\n    { name: 'prefix', value: '+7' },\r\n  ]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { t } = useTranslation();\r\n\r\n  const formLabels: FormValues = {\r\n    login: t('forms.stepFormLabels.login'),\r\n    password: t('common.password'),\r\n    confirmPassword: t('common.confirmPassword'),\r\n    salutation: t('forms.stepFormLabels.salutation'),\r\n    gender: t('forms.stepFormLabels.gender'),\r\n    firstName: t('common.firstName'),\r\n    lastName: t('common.lastName'),\r\n    birthday: t('forms.stepFormLabels.birthday'),\r\n    phone: t('common.phone'),\r\n    email: t('common.email'),\r\n    address1: `${t('common.address')} 1`,\r\n    address2: `${t('common.address')} 2`,\r\n    zipCode: t('common.zipcode'),\r\n    city: t('common.city'),\r\n    country: t('common.country'),\r\n  };\r\n\r\n  const formValues = fields\r\n    .filter((item) => item.name !== 'prefix')\r\n    .map((item) => ({\r\n      name: formLabels[item.name],\r\n      value: String(item.name === 'birthday' && item.value ? item.value.format('YYYY-MM-DD') : item.value),\r\n    }));\r\n\r\n  const next = () => {\r\n    form.validateFields().then(() => {\r\n      setCurrent(current + 1);\r\n    });\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const onFinish = () => {\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      notificationController.success({ message: t('common.success') });\r\n      setIsLoading(false);\r\n      setCurrent(0);\r\n    }, 1500);\r\n  };\r\n\r\n  const steps = [\r\n    {\r\n      title: t('common.country'),\r\n    },\r\n    {\r\n      title: t('forms.stepFormLabels.info'),\r\n    },\r\n    {\r\n      title: t('forms.stepFormLabels.location'),\r\n    },\r\n    {\r\n      title: t('forms.stepFormLabels.confirm'),\r\n    },\r\n  ];\r\n\r\n  const formFieldsUi = [\r\n    <Step1 key=\"1\" />,\r\n    <Step2 key=\"2\" />,\r\n    <Step3 key=\"3\" />,\r\n    <Step4 key=\"4\" formValues={formValues} />,\r\n  ];\r\n\r\n  return (\r\n    <BaseForm\r\n      name=\"stepForm\"\r\n      form={form}\r\n      fields={fields}\r\n      onFieldsChange={(_, allFields) => {\r\n        const currentFields = allFields.map((item) => ({\r\n          name: Array.isArray(item.name) ? item.name[0] : '',\r\n          value: item.value,\r\n        }));\r\n        const uniqueData = mergeBy(fields, currentFields, 'name');\r\n        setFields(uniqueData);\r\n      }}\r\n    >\r\n      <Steps labelPlacement=\"vertical\" size=\"small\" current={current}>\r\n        {steps.map((item) => (\r\n          <Steps.Step key={item.title} title={item.title} description=\"\" />\r\n        ))}\r\n      </Steps>\r\n      <div>{formFieldsUi[current]}</div>\r\n      <div>\r\n        {current < steps.length - 1 && (\r\n          <Button type=\"primary\" onClick={() => next()}>\r\n            {t('forms.stepFormLabels.next')}\r\n          </Button>\r\n        )}\r\n        {current === steps.length - 1 && (\r\n          <Button type=\"primary\" onClick={onFinish} loading={isLoading}>\r\n            {t('forms.stepFormLabels.done')}\r\n          </Button>\r\n        )}\r\n        {current > 0 && (\r\n          <S.PrevButton type=\"default\" onClick={() => prev()}>\r\n            {t('forms.stepFormLabels.previous')}\r\n          </S.PrevButton>\r\n        )}\r\n      </div>\r\n    </BaseForm>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}