{"ast":null,"code":"import _toConsumableArray from \"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n\nvar _jsxFileName = \"/home/tj/fl-carla/src/components/apps/kanban/newCardForm/ParticipantsDropdown/ParticipantsDropdown.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Dropdown } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { kanbanPeople } from 'constants/kanbanPeople';\nimport StubAvatar from '../../../../../assets/images/stub-avatar.png';\nimport * as S from './ParticipantsDropdown.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var ParticipantsDropdown = function ParticipantsDropdown(_ref) {\n  _s();\n\n  var selectedParticipants = _ref.selectedParticipants,\n      setSelectedParticipants = _ref.setSelectedParticipants;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var kanbanPeopleData = Object.values(kanbanPeople);\n  var selectedParticipantsIds = selectedParticipants.map(function (item) {\n    return item.id;\n  });\n\n  var onPeopleClick = function onPeopleClick(tag) {\n    var isExist = selectedParticipantsIds.includes(tag.id);\n\n    if (isExist) {\n      setSelectedParticipants(selectedParticipants.filter(function (item) {\n        return item.id !== tag.id;\n      }));\n    } else {\n      setSelectedParticipants([].concat(_toConsumableArray(selectedParticipants), [tag]));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    placement: \"bottomCenter\",\n    trigger: ['click'],\n    overlay: /*#__PURE__*/_jsxDEV(S.EditParticipantPopover, {\n      children: [kanbanPeopleData.map(function (participant) {\n        return /*#__PURE__*/_jsxDEV(S.ParticipantRow, {\n          onClick: function onClick(e) {\n            onPeopleClick(participant);\n            e.stopPropagation();\n          },\n          children: [/*#__PURE__*/_jsxDEV(S.PopoverCheckbox, {\n            checked: selectedParticipantsIds.includes(participant.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(S.ParticipantAvatar, {\n            src: participant.avatar ? participant.avatar : StubAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(S.ParticipantName, {\n            children: participant.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, _this)]\n        }, participant.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(S.RemoveParticipantWrapper, {\n        children: /*#__PURE__*/_jsxDEV(S.ClosePopover, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, _this),\n    children: selectedParticipants && selectedParticipants.length > 0 ? /*#__PURE__*/_jsxDEV(S.ParticipantsWrapper, {\n      children: selectedParticipants.map(function (participant) {\n        return /*#__PURE__*/_jsxDEV(S.ParticipantRow, {\n          children: [/*#__PURE__*/_jsxDEV(S.ParticipantAvatar, {\n            src: participant.avatar ? participant.avatar : StubAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(S.ParticipantName, {\n            children: participant.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(S.RemoveParticipant, {\n            onClick: function onClick(e) {\n              e.stopPropagation();\n              onPeopleClick(participant);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, _this)]\n        }, participant.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, _this) : /*#__PURE__*/_jsxDEV(S.ParticipantsWrapper, {\n      children: /*#__PURE__*/_jsxDEV(S.AddParticipant, {\n        children: t('kanban.addParticipant')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ParticipantsDropdown, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ParticipantsDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParticipantsDropdown\");","map":{"version":3,"sources":["/home/tj/fl-carla/src/components/apps/kanban/newCardForm/ParticipantsDropdown/ParticipantsDropdown.tsx"],"names":["React","Dropdown","useTranslation","kanbanPeople","StubAvatar","S","ParticipantsDropdown","selectedParticipants","setSelectedParticipants","t","kanbanPeopleData","Object","values","selectedParticipantsIds","map","item","id","onPeopleClick","tag","isExist","includes","filter","participant","e","stopPropagation","avatar","name","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Dropdown } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { Participant as IParticipant } from '../../interfaces';\nimport { kanbanPeople } from 'constants/kanbanPeople';\nimport StubAvatar from '../../../../../assets/images/stub-avatar.png';\nimport * as S from './ParticipantsDropdown.styles';\n\ninterface ParticipantsDropdownProps {\n  selectedParticipants: IParticipant[];\n  setSelectedParticipants: (state: IParticipant[]) => void;\n}\n\nexport const ParticipantsDropdown: React.FC<ParticipantsDropdownProps> = ({\n  selectedParticipants,\n  setSelectedParticipants,\n}) => {\n  const { t } = useTranslation();\n  const kanbanPeopleData = Object.values(kanbanPeople);\n  const selectedParticipantsIds = selectedParticipants.map((item) => item.id);\n\n  const onPeopleClick = (tag: IParticipant) => {\n    const isExist = selectedParticipantsIds.includes(tag.id);\n\n    if (isExist) {\n      setSelectedParticipants(selectedParticipants.filter((item) => item.id !== tag.id));\n    } else {\n      setSelectedParticipants([...selectedParticipants, tag]);\n    }\n  };\n\n  return (\n    <Dropdown\n      placement=\"bottomCenter\"\n      trigger={['click']}\n      overlay={\n        <S.EditParticipantPopover>\n          {kanbanPeopleData.map((participant: IParticipant) => (\n            <S.ParticipantRow\n              key={participant.id}\n              onClick={(e) => {\n                onPeopleClick(participant);\n                e.stopPropagation();\n              }}\n            >\n              <S.PopoverCheckbox checked={selectedParticipantsIds.includes(participant.id)} />\n              <S.ParticipantAvatar src={participant.avatar ? participant.avatar : StubAvatar} />\n              <S.ParticipantName>{participant.name}</S.ParticipantName>\n            </S.ParticipantRow>\n          ))}\n          <S.RemoveParticipantWrapper>\n            <S.ClosePopover />\n          </S.RemoveParticipantWrapper>\n        </S.EditParticipantPopover>\n      }\n    >\n      {selectedParticipants && selectedParticipants.length > 0 ? (\n        <S.ParticipantsWrapper>\n          {selectedParticipants.map((participant) => (\n            <S.ParticipantRow key={participant.id}>\n              <S.ParticipantAvatar src={participant.avatar ? participant.avatar : StubAvatar} />\n              <S.ParticipantName>{participant.name}</S.ParticipantName>\n              <S.RemoveParticipant\n                onClick={(e) => {\n                  e.stopPropagation();\n                  onPeopleClick(participant);\n                }}\n              />\n            </S.ParticipantRow>\n          ))}\n        </S.ParticipantsWrapper>\n      ) : (\n        <S.ParticipantsWrapper>\n          <S.AddParticipant>{t('kanban.addParticipant')}</S.AddParticipant>\n        </S.ParticipantsWrapper>\n      )}\n    </Dropdown>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}