{"ast":null,"code":"var _jsxFileName = \"D:\\\\fl-carla\\\\src\\\\components\\\\tj\\\\BatteryStackedChart\\\\BatteryStackedChart.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTheme } from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport * as echarts from 'echarts';\nimport { BaseChart } from '@app/components/common/charts/BaseChart';\nimport { Card } from '@app/components/common/Card/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var BatteryStackedChart = function BatteryStackedChart() {\n  _s();\n\n  var theme = useTheme();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var chartColors = theme.colors.charts;\n  var option = {\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        type: 'cross',\n        label: {\n          backgroundColor: chartColors.tooltipLabel\n        }\n      }\n    },\n    legend: {\n      data: [\"coal\", \"hydro\", \"nuclear\", \"gas\", \"oil\"].map(function (item) {\n        return t(\"charts.\".concat(item));\n      }),\n      top: 0,\n      left: 10,\n      textStyle: {\n        color: theme.colors.text.main\n      }\n    },\n    grid: {\n      top: 80,\n      left: 20,\n      right: 20,\n      bottom: 0,\n      containLabel: true\n    },\n    xAxis: [{\n      type: 'category',\n      boundaryGap: false,\n      data: ['Canada', 'China', 'Russia', 'Australia', 'Germany', 'France'],\n      axisLabel: {\n        fontSize: theme.commonFontSizes.xxs,\n        fontWeight: theme.commonFontWeight.light,\n        color: theme.colors.main.primary\n      }\n    }],\n    yAxis: [{\n      type: 'value',\n      name: 'kWh',\n      axisLabel: {\n        fontSize: theme.commonFontSizes.xxs,\n        fontWeight: theme.commonFontWeight.light,\n        color: theme.colors.text.main\n      }\n    }],\n    series: [{\n      name: t('charts.coal'),\n      type: 'line',\n      stack: 'Total',\n      smooth: true,\n      lineStyle: {\n        width: 0\n      },\n      showSymbol: false,\n      areaStyle: {\n        opacity: 0.8,\n        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n          offset: 0,\n          color: chartColors.color1\n        }, {\n          offset: 1,\n          color: chartColors.color1Tint\n        }])\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      // 클라이언트1의 누적량\n      data: [50.00052778, 50.49245086, 51.0643287, 51.67602314, 52.28877314, 52.8573402, 53.42820491, 54.0033748, 54.57265887, 55.13958263]\n    }, {\n      name: t('charts.hydro'),\n      type: 'line',\n      stack: 'Total',\n      smooth: true,\n      lineStyle: {\n        width: 0\n      },\n      showSymbol: false,\n      areaStyle: {\n        opacity: 0.8,\n        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n          offset: 0,\n          color: chartColors.color2\n        }, {\n          offset: 0.82,\n          color: chartColors.color2Tint\n        }])\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      data: [120, 282, 111, 234, 220, 340, 310]\n    }, {\n      name: t('charts.nuclear'),\n      type: 'line',\n      stack: 'Total',\n      smooth: true,\n      lineStyle: {\n        width: 0\n      },\n      showSymbol: false,\n      areaStyle: {\n        opacity: 0.8,\n        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n          offset: 0,\n          color: chartColors.color3\n        }, {\n          offset: 0.65,\n          color: chartColors.color3Tint\n        }])\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      data: [320, 132, 201, 334, 190, 130, 220]\n    }, {\n      name: t('charts.gas'),\n      type: 'line',\n      stack: 'Total',\n      smooth: true,\n      lineStyle: {\n        width: 0\n      },\n      showSymbol: false,\n      areaStyle: {\n        opacity: 0.8,\n        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n          offset: 0,\n          color: chartColors.color4\n        }, {\n          offset: 1,\n          color: chartColors.color4Tint\n        }])\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      data: [220, 402, 231, 134, 190, 230, 120]\n    }, {\n      name: t('charts.oil'),\n      type: 'line',\n      stack: 'Total',\n      smooth: true,\n      lineStyle: {\n        width: 0\n      },\n      showSymbol: false,\n      label: {\n        show: true,\n        position: 'top'\n      },\n      areaStyle: {\n        opacity: 0.8,\n        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n          offset: 0.4,\n          color: chartColors.color5\n        }, {\n          offset: 1,\n          color: chartColors.color5Tint\n        }])\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      data: [220, 302, 181, 234, 210, 290, 150]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    padding: \"0 0 1.875rem\",\n    title: t('charts.gradientLabel'),\n    children: /*#__PURE__*/_jsxDEV(BaseChart, {\n      option: option\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(BatteryStackedChart, \"S668wIP7rZWcI05jnAmri73KTwI=\", false, function () {\n  return [useTheme, useTranslation];\n});\n\n_c = BatteryStackedChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BatteryStackedChart\");","map":{"version":3,"sources":["D:/fl-carla/src/components/tj/BatteryStackedChart/BatteryStackedChart.tsx"],"names":["React","useTheme","useTranslation","echarts","BaseChart","Card","BatteryStackedChart","theme","t","chartColors","colors","charts","option","tooltip","trigger","axisPointer","type","label","backgroundColor","tooltipLabel","legend","data","map","item","top","left","textStyle","color","text","main","grid","right","bottom","containLabel","xAxis","boundaryGap","axisLabel","fontSize","commonFontSizes","xxs","fontWeight","commonFontWeight","light","primary","yAxis","name","series","stack","smooth","lineStyle","width","showSymbol","areaStyle","opacity","graphic","LinearGradient","offset","color1","color1Tint","emphasis","focus","color2","color2Tint","color3","color3Tint","color4","color4Tint","show","position","color5","color5Tint"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useTheme } from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\nimport * as echarts from 'echarts';\r\nimport { BaseChart } from '@app/components/common/charts/BaseChart';\r\nimport { Card } from '@app/components/common/Card/Card';\r\n\r\nexport const BatteryStackedChart: React.FC = () => {\r\n  const theme = useTheme();\r\n  const { t } = useTranslation();\r\n\r\n  const chartColors = theme.colors.charts;\r\n\r\n  const option = {\r\n    tooltip: {\r\n      trigger: 'axis',\r\n      axisPointer: {\r\n        type: 'cross',\r\n        label: {\r\n          backgroundColor: chartColors.tooltipLabel,\r\n        },\r\n      },\r\n    },\r\n    legend: {\r\n      data: [`coal`, `hydro`, `nuclear`, `gas`, `oil`].map((item) => t(`charts.${item}`)),\r\n      top: 0,\r\n      left: 10,\r\n      textStyle: {\r\n        color: theme.colors.text.main,\r\n      },\r\n    },\r\n    grid: {\r\n      top: 80,\r\n      left: 20,\r\n      right: 20,\r\n      bottom: 0,\r\n      containLabel: true,\r\n    },\r\n    xAxis: [\r\n      {\r\n        type: 'category',\r\n        boundaryGap: false,\r\n        data: ['Canada', 'China', 'Russia', 'Australia', 'Germany', 'France'],\r\n        axisLabel: {\r\n          fontSize: theme.commonFontSizes.xxs,\r\n          fontWeight: theme.commonFontWeight.light,\r\n          color: theme.colors.main.primary,\r\n        },\r\n      },\r\n    ],\r\n    yAxis: [\r\n      {\r\n        type: 'value',\r\n        name: 'kWh',\r\n        axisLabel: {\r\n          fontSize: theme.commonFontSizes.xxs,\r\n          fontWeight: theme.commonFontWeight.light,\r\n          color: theme.colors.text.main,\r\n        },\r\n      },\r\n    ],\r\n    series: [\r\n      {\r\n        name: t('charts.coal'),\r\n        type: 'line',\r\n        stack: 'Total',\r\n        smooth: true,\r\n        lineStyle: {\r\n          width: 0,\r\n        },\r\n        showSymbol: false,\r\n        areaStyle: {\r\n          opacity: 0.8,\r\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n            {\r\n              offset: 0,\r\n              color: chartColors.color1,\r\n            },\r\n            {\r\n              offset: 1,\r\n              color: chartColors.color1Tint,\r\n            },\r\n          ]),\r\n        },\r\n        emphasis: {\r\n          focus: 'series',\r\n        },\r\n        // 클라이언트1의 누적량\r\n        data: [50.00052778,50.49245086,51.0643287,51.67602314,52.28877314,52.8573402,53.42820491,54.0033748,54.57265887,55.13958263],\r\n      },\r\n      {\r\n        name: t('charts.hydro'),\r\n        type: 'line',\r\n        stack: 'Total',\r\n        smooth: true,\r\n        lineStyle: {\r\n          width: 0,\r\n        },\r\n        showSymbol: false,\r\n        areaStyle: {\r\n          opacity: 0.8,\r\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n            {\r\n              offset: 0,\r\n              color: chartColors.color2,\r\n            },\r\n            {\r\n              offset: 0.82,\r\n              color: chartColors.color2Tint,\r\n            },\r\n          ]),\r\n        },\r\n        emphasis: {\r\n          focus: 'series',\r\n        },\r\n        data: [120, 282, 111, 234, 220, 340, 310],\r\n      },\r\n      {\r\n        name: t('charts.nuclear'),\r\n        type: 'line',\r\n        stack: 'Total',\r\n        smooth: true,\r\n        lineStyle: {\r\n          width: 0,\r\n        },\r\n        showSymbol: false,\r\n        areaStyle: {\r\n          opacity: 0.8,\r\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n            {\r\n              offset: 0,\r\n              color: chartColors.color3,\r\n            },\r\n            {\r\n              offset: 0.65,\r\n              color: chartColors.color3Tint,\r\n            },\r\n          ]),\r\n        },\r\n        emphasis: {\r\n          focus: 'series',\r\n        },\r\n        data: [320, 132, 201, 334, 190, 130, 220],\r\n      },\r\n      {\r\n        name: t('charts.gas'),\r\n        type: 'line',\r\n        stack: 'Total',\r\n        smooth: true,\r\n        lineStyle: {\r\n          width: 0,\r\n        },\r\n        showSymbol: false,\r\n        areaStyle: {\r\n          opacity: 0.8,\r\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n            {\r\n              offset: 0,\r\n              color: chartColors.color4,\r\n            },\r\n            {\r\n              offset: 1,\r\n              color: chartColors.color4Tint,\r\n            },\r\n          ]),\r\n        },\r\n        emphasis: {\r\n          focus: 'series',\r\n        },\r\n        data: [220, 402, 231, 134, 190, 230, 120],\r\n      },\r\n      {\r\n        name: t('charts.oil'),\r\n        type: 'line',\r\n        stack: 'Total',\r\n        smooth: true,\r\n        lineStyle: {\r\n          width: 0,\r\n        },\r\n        showSymbol: false,\r\n        label: {\r\n          show: true,\r\n          position: 'top',\r\n        },\r\n        areaStyle: {\r\n          opacity: 0.8,\r\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n            {\r\n              offset: 0.4,\r\n              color: chartColors.color5,\r\n            },\r\n            {\r\n              offset: 1,\r\n              color: chartColors.color5Tint,\r\n            },\r\n          ]),\r\n        },\r\n        emphasis: {\r\n          focus: 'series',\r\n        },\r\n        data: [220, 302, 181, 234, 210, 290, 150],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Card padding=\"0 0 1.875rem\" title={t('charts.gradientLabel')}>\r\n      <BaseChart option={option} />\r\n    </Card>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}