{"ast":null,"code":"import _objectSpread from \"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/tj/fl-carla/src/components/tj/MapControlForm/MapControlForm.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"/home/tj/fl-carla/node_modules/@babel/runtime/regenerator/index.js\";\nimport { useTranslation } from 'react-i18next';\nimport { useState } from 'react';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { RadioButton, RadioGroup } from '@app/components/common/Radio/Radio';\nimport { notificationController } from '@app/controllers/notificationController';\nimport socketio from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar formItemLayout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\nexport var MapControlForm = function MapControlForm() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFieldsChanged = _useState2[0],\n      setFieldsChanged = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var socket = socketio('0.0.0.0:8080');\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var values,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              values = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              setLoading(true);\n              setTimeout(function () {\n                setLoading(false);\n                setFieldsChanged(false);\n                notificationController.success({\n                  message: t('common.success')\n                });\n                console.log(values);\n                socket.emit('message', {\n                  values: values\n                });\n              }, 1000);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onFinish() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(BaseButtonsForm, _objectSpread(_objectSpread({}, formItemLayout), {}, {\n    isFieldsChanged: isFieldsChanged,\n    onFieldsChange: function onFieldsChange() {\n      return setFieldsChanged(true);\n    },\n    name: \"validateForm\",\n    initialValues: {\n      'input-number': 10,\n      'checkbox-group': ['A', 'B'],\n      rate: 3.5\n    },\n    footer: /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: isLoading,\n        children: t('common.submit')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, _this),\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n      name: \"map-button\" // label={t('forms.validationFormLabels.radioButton')}\n      ,\n      label: t('Map'),\n      rules: [{\n        required: true,\n        message: t('Choose Map')\n      }],\n      children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n        children: [/*#__PURE__*/_jsxDEV(RadioButton, {\n          value: \"city-normal\",\n          children: t('Big City')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RadioButton, {\n          value: \"city-small\",\n          children: t('Small City')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RadioButton, {\n          value: \"town-big\",\n          children: t('Big Town')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RadioButton, {\n          value: \"town-small\",\n          children: t('Small Town')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n      name: \"weather-button\" // label={t('forms.validationFormLabels.radioButton')}\n      ,\n      label: t('Weather'),\n      rules: [{\n        required: true,\n        message: t('Choose Weather')\n      }],\n      children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n        children: [/*#__PURE__*/_jsxDEV(RadioButton, {\n          value: \"sunny\",\n          children: t('Sunny')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RadioButton, {\n          value: \"cloudy\",\n          children: t('Cloudy')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RadioButton, {\n          value: \"rainy\",\n          children: t('Rainy')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RadioButton, {\n          value: \"snowy\",\n          children: t('Snowy')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MapControlForm, \"+2qt9+VyOzDr/RwsnFeHV8e7uTw=\", false, function () {\n  return [useTranslation];\n});\n\n_c = MapControlForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapControlForm\");","map":{"version":3,"sources":["/home/tj/fl-carla/src/components/tj/MapControlForm/MapControlForm.tsx"],"names":["useTranslation","useState","BaseButtonsForm","Button","RadioButton","RadioGroup","notificationController","socketio","formItemLayout","labelCol","span","wrapperCol","MapControlForm","isFieldsChanged","setFieldsChanged","isLoading","setLoading","t","socket","onFinish","values","setTimeout","success","message","console","log","emit","rate","required"],"mappings":";;;;;;;;;AAAA,SAASA,cAAT,QAA+B,eAA/B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,eAAT,QAAgC,8DAAhC;AACA,SAASC,MAAT,QAAuB,8CAAvB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,oCAAxC;AACA,SAASC,sBAAT,QAAuC,yCAAvC;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AAEA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAR,GADW;AAErBC,EAAAA,UAAU,EAAE;AAAED,IAAAA,IAAI,EAAE;AAAR;AAFS,CAAvB;AAKA,OAAO,IAAME,cAAwB,GAAG,SAA3BA,cAA2B,GAAM;AAAA;;AAC5C,kBAA4CX,QAAQ,CAAC,KAAD,CAApD;AAAA;AAAA,MAAOY,eAAP;AAAA,MAAwBC,gBAAxB;;AACA,mBAAgCb,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOc,SAAP;AAAA,MAAkBC,UAAlB;;AACA,wBAAchB,cAAc,EAA5B;AAAA,MAAQiB,CAAR,mBAAQA,CAAR;;AACA,MAAMC,MAAM,GAAGX,QAAQ,CAAC,cAAD,CAAvB;;AAEA,MAAMY,QAAQ;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOC,cAAAA,MAAP,2DAAgB,EAAhB;AACfJ,cAAAA,UAAU,CAAC,IAAD,CAAV;AACAK,cAAAA,UAAU,CAAC,YAAM;AACfL,gBAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,gBAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAR,gBAAAA,sBAAsB,CAACgB,OAAvB,CAA+B;AAAEC,kBAAAA,OAAO,EAAEN,CAAC,CAAC,gBAAD;AAAZ,iBAA/B;AACAO,gBAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACAF,gBAAAA,MAAM,CAACQ,IAAP,CAAY,SAAZ,EAAuB;AAACN,kBAAAA,MAAM,EAANA;AAAD,iBAAvB;AACD,eANS,EAMP,IANO,CAAV;;AAFe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARD,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAWA,sBACE,QAAC,eAAD,kCACMX,cADN;AAEE,IAAA,eAAe,EAAEK,eAFnB;AAGE,IAAA,cAAc,EAAE;AAAA,aAAMC,gBAAgB,CAAC,IAAD,CAAtB;AAAA,KAHlB;AAIE,IAAA,IAAI,EAAC,cAJP;AAKE,IAAA,aAAa,EAAE;AACb,sBAAgB,EADH;AAEb,wBAAkB,CAAC,GAAD,EAAM,GAAN,CAFL;AAGba,MAAAA,IAAI,EAAE;AAHO,KALjB;AAUE,IAAA,MAAM,eACJ,QAAC,eAAD,CAAiB,IAAjB;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAyC,QAAA,OAAO,EAAEZ,SAAlD;AAAA,kBACGE,CAAC,CAAC,eAAD;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAXJ;AAiBE,IAAA,QAAQ,EAAEE,QAjBZ;AAAA,4BAmBE,QAAC,eAAD,CAAiB,IAAjB;AACE,MAAA,IAAI,EAAC,YADP,CAEE;AAFF;AAGE,MAAA,KAAK,EAAEF,CAAC,CAAC,KAAD,CAHV;AAIE,MAAA,KAAK,EAAE,CAAC;AAAEW,QAAAA,QAAQ,EAAE,IAAZ;AAAkBL,QAAAA,OAAO,EAAEN,CAAC,CAAC,YAAD;AAA5B,OAAD,CAJT;AAAA,6BAME,QAAC,UAAD;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,KAAK,EAAC,aAAnB;AAAA,oBAAkCA,CAAC,CAAC,UAAD;AAAnC;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,QAAC,WAAD;AAAa,UAAA,KAAK,EAAC,YAAnB;AAAA,oBAAiCA,CAAC,CAAC,YAAD;AAAlC;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE,QAAC,WAAD;AAAa,UAAA,KAAK,EAAC,UAAnB;AAAA,oBAA+BA,CAAC,CAAC,UAAD;AAAhC;AAAA;AAAA;AAAA;AAAA,iBAHF,eAIE,QAAC,WAAD;AAAa,UAAA,KAAK,EAAC,YAAnB;AAAA,oBAAiCA,CAAC,CAAC,YAAD;AAAlC;AAAA;AAAA;AAAA;AAAA,iBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,aAnBF,eAiCE,QAAC,eAAD,CAAiB,IAAjB;AACE,MAAA,IAAI,EAAC,gBADP,CAEE;AAFF;AAGE,MAAA,KAAK,EAAEA,CAAC,CAAC,SAAD,CAHV;AAIE,MAAA,KAAK,EAAE,CAAC;AAAEW,QAAAA,QAAQ,EAAE,IAAZ;AAAkBL,QAAAA,OAAO,EAAEN,CAAC,CAAC,gBAAD;AAA5B,OAAD,CAJT;AAAA,6BAME,QAAC,UAAD;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,KAAK,EAAC,OAAnB;AAAA,oBAA4BA,CAAC,CAAC,OAAD;AAA7B;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,QAAC,WAAD;AAAa,UAAA,KAAK,EAAC,QAAnB;AAAA,oBAA6BA,CAAC,CAAC,QAAD;AAA9B;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE,QAAC,WAAD;AAAa,UAAA,KAAK,EAAC,OAAnB;AAAA,oBAA4BA,CAAC,CAAC,OAAD;AAA7B;AAAA;AAAA;AAAA;AAAA,iBAHF,eAIE,QAAC,WAAD;AAAa,UAAA,KAAK,EAAC,OAAnB;AAAA,oBAA4BA,CAAC,CAAC,OAAD;AAA7B;AAAA;AAAA;AAAA;AAAA,iBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,aAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAiDD,CAlEM;;GAAML,c;UAGGZ,c;;;KAHHY,c","sourcesContent":["import { useTranslation } from 'react-i18next';\nimport { useState } from 'react';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { RadioButton, RadioGroup } from '@app/components/common/Radio/Radio';\nimport { notificationController } from '@app/controllers/notificationController';\nimport socketio from 'socket.io-client';\n\nconst formItemLayout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 },\n};\n\nexport const MapControlForm: React.FC = () => {\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const { t } = useTranslation();\n  const socket = socketio('0.0.0.0:8080');\n  \n  const onFinish = async (values = {}) => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setFieldsChanged(false);\n      notificationController.success({ message: t('common.success') });\n      console.log(values);\n      socket.emit('message', {values});\n    }, 1000);\n  };\n\n  return (\n    <BaseButtonsForm\n      {...formItemLayout}\n      isFieldsChanged={isFieldsChanged}\n      onFieldsChange={() => setFieldsChanged(true)}\n      name=\"validateForm\"\n      initialValues={{\n        'input-number': 10,\n        'checkbox-group': ['A', 'B'],\n        rate: 3.5,\n      }}\n      footer={\n        <BaseButtonsForm.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n            {t('common.submit')}\n          </Button>\n        </BaseButtonsForm.Item>\n      }\n      onFinish={onFinish}\n    >\n      <BaseButtonsForm.Item\n        name=\"map-button\"\n        // label={t('forms.validationFormLabels.radioButton')}\n        label={t('Map')}\n        rules={[{ required: true, message: t('Choose Map') }]}\n      >\n        <RadioGroup>\n          <RadioButton value=\"city-normal\">{t('Big City')}</RadioButton>\n          <RadioButton value=\"city-small\">{t('Small City')}</RadioButton>\n          <RadioButton value=\"town-big\">{t('Big Town')}</RadioButton>\n          <RadioButton value=\"town-small\">{t('Small Town')}</RadioButton>\n        </RadioGroup>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item\n        name=\"weather-button\"\n        // label={t('forms.validationFormLabels.radioButton')}\n        label={t('Weather')}\n        rules={[{ required: true, message: t('Choose Weather') }]}\n      >\n        <RadioGroup>\n          <RadioButton value=\"sunny\">{t('Sunny')}</RadioButton>\n          <RadioButton value=\"cloudy\">{t('Cloudy')}</RadioButton>\n          <RadioButton value=\"rainy\">{t('Rainy')}</RadioButton>\n          <RadioButton value=\"snowy\">{t('Snowy')}</RadioButton>\n        </RadioGroup>\n      </BaseButtonsForm.Item>\n    </BaseButtonsForm>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}