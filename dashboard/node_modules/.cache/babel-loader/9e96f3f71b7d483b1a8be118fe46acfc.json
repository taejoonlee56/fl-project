{"ast":null,"code":"import _objectSpread from \"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/tj/fl-carla/src/components/apps/kanban/newCardForm/NewCardForm/NewCardForm.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from 'react';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { Input } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { TagDropdown } from '../TagDropdown/TagDropdown';\nimport * as S from './NewCardForm.styles';\nimport { ParticipantsDropdown } from '../ParticipantsDropdown/ParticipantsDropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar formInputs = [{\n  title: 'kanban.title',\n  name: 'title'\n}, {\n  title: 'kanban.description',\n  name: 'description'\n}];\nexport var NewCardForm = function NewCardForm(_ref) {\n  _s();\n\n  var onAdd = _ref.onAdd,\n      onCancel = _ref.onCancel;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedTags = _useState2[0],\n      setSelectedTags = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedParticipants = _useState4[0],\n      setSelectedParticipants = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var onFinish = function onFinish(values) {\n    setLoading(true);\n    setTimeout(function () {\n      onAdd(_objectSpread(_objectSpread({}, values), {}, {\n        tags: selectedTags,\n        participants: selectedParticipants\n      }));\n      setLoading(false);\n    }, 1000);\n  };\n\n  var formItems = useMemo(function () {\n    return formInputs.map(function (item, index) {\n      return /*#__PURE__*/_jsxDEV(S.FormInput, {\n        name: item.name,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: t(item.title),\n          bordered: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, _this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, _this);\n    });\n  }, [t]);\n  return /*#__PURE__*/_jsxDEV(S.CardWrapper, {\n    children: /*#__PURE__*/_jsxDEV(BaseButtonsForm, {\n      name: \"addCard\",\n      isFieldsChanged: true,\n      footer: /*#__PURE__*/_jsxDEV(S.FooterButtons, {\n        loading: isLoading,\n        size: \"small\",\n        onCancel: onCancel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, _this),\n      onFinish: onFinish,\n      children: [formItems, /*#__PURE__*/_jsxDEV(TagDropdown, {\n        selectedTags: selectedTags,\n        setSelectedTags: setSelectedTags\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(ParticipantsDropdown, {\n        selectedParticipants: selectedParticipants,\n        setSelectedParticipants: setSelectedParticipants\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(NewCardForm, \"9r/G3DKnHPxryv5yH1u61DawwYY=\", false, function () {\n  return [useTranslation];\n});\n\n_c = NewCardForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewCardForm\");","map":{"version":3,"sources":["/home/tj/fl-carla/src/components/apps/kanban/newCardForm/NewCardForm/NewCardForm.tsx"],"names":["React","useMemo","useState","BaseButtonsForm","Input","useTranslation","TagDropdown","S","ParticipantsDropdown","formInputs","title","name","NewCardForm","onAdd","onCancel","selectedTags","setSelectedTags","selectedParticipants","setSelectedParticipants","isLoading","setLoading","t","onFinish","values","setTimeout","tags","participants","formItems","map","item","index"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { Input } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { CardState, Tag, Participant } from '../../interfaces';\nimport { TagDropdown } from '../TagDropdown/TagDropdown';\nimport * as S from './NewCardForm.styles';\nimport { ParticipantsDropdown } from '../ParticipantsDropdown/ParticipantsDropdown';\n\nconst formInputs = [\n  {\n    title: 'kanban.title',\n    name: 'title',\n  },\n  {\n    title: 'kanban.description',\n    name: 'description',\n  },\n];\n\ninterface NewCardFormProps {\n  onAdd: (state: CardState) => void;\n  onCancel: () => void;\n}\n\nexport const NewCardForm: React.FC<NewCardFormProps> = ({ onAdd, onCancel }) => {\n  const [selectedTags, setSelectedTags] = useState<Tag[]>([]);\n  const [selectedParticipants, setSelectedParticipants] = useState<Participant[]>([]);\n  const [isLoading, setLoading] = useState(false);\n\n  const { t } = useTranslation();\n\n  const onFinish = (values: []) => {\n    setLoading(true);\n    setTimeout(() => {\n      onAdd({ ...values, tags: selectedTags, participants: selectedParticipants });\n      setLoading(false);\n    }, 1000);\n  };\n\n  const formItems = useMemo(\n    () =>\n      formInputs.map((item, index) => (\n        <S.FormInput key={index} name={item.name}>\n          <Input placeholder={t(item.title)} bordered={false} />\n        </S.FormInput>\n      )),\n    [t],\n  );\n\n  return (\n    <S.CardWrapper>\n      <BaseButtonsForm\n        name=\"addCard\"\n        isFieldsChanged\n        footer={<S.FooterButtons loading={isLoading} size=\"small\" onCancel={onCancel} />}\n        onFinish={onFinish}\n      >\n        {formItems}\n        <TagDropdown selectedTags={selectedTags} setSelectedTags={setSelectedTags} />\n        <ParticipantsDropdown\n          selectedParticipants={selectedParticipants}\n          setSelectedParticipants={setSelectedParticipants}\n        />\n      </BaseButtonsForm>\n    </S.CardWrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}