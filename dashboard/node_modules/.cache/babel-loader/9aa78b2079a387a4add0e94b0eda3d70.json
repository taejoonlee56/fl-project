{"ast":null,"code":"var _jsxFileName = \"D:\\\\fl-carla\\\\src\\\\components\\\\profile\\\\profileCard\\\\profileFormNav\\\\nav\\\\PersonalInfo\\\\SocialLinksItem\\\\SocialLinksItem.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row } from 'antd';\nimport { TwitterOutlined } from '@ant-design/icons';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { ClipboardInput } from 'components/common/inputs/ClipboardInput/ClipboardInput';\nimport { OpenURLInput } from '@app/components/common/inputs/OpenURLInput/OpenURLInput';\nimport { LinkedinIcon } from '@app/components/common/icons/LinkedinIcon';\nimport { FacebookIcon } from '@app/components/common/icons/FacebookIcon';\nimport { websitePattern } from '@app/constants/patterns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var SocialLinksItem = function SocialLinksItem() {\n  _s();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  return /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n    label: t('profile.nav.personalInfo.socialLinks'),\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [20, 0],\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n          shouldUpdate: true,\n          children: function children(_ref) {\n            var getFieldValue = _ref.getFieldValue;\n            var twitter = getFieldValue('twitter');\n            return /*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n                name: \"twitter\",\n                children: /*#__PURE__*/_jsxDEV(ClipboardInput, {\n                  valueToCopy: twitter,\n                  addonBefore: /*#__PURE__*/_jsxDEV(TwitterOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 26,\n                    columnNumber: 72\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 26,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 17\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n          shouldUpdate: true,\n          children: function children(_ref2) {\n            var getFieldValue = _ref2.getFieldValue;\n            var linkedin = getFieldValue('linkedin');\n            return /*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n                name: \"linkedin\",\n                rules: [{\n                  pattern: new RegExp(websitePattern),\n                  message: t('profile.nav.personalInfo.notValidWebsite')\n                }],\n                children: /*#__PURE__*/_jsxDEV(OpenURLInput, {\n                  href: linkedin,\n                  target: \"_blank\",\n                  addonBefore: /*#__PURE__*/_jsxDEV(LinkedinIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 80\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n          shouldUpdate: true,\n          children: function children(_ref3) {\n            var getFieldValue = _ref3.getFieldValue;\n            var facebook = getFieldValue('facebook');\n            return /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [' ', /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n                name: \"facebook\",\n                rules: [{\n                  pattern: new RegExp(websitePattern),\n                  message: t('profile.nav.personalInfo.notValidWebsite')\n                }],\n                children: /*#__PURE__*/_jsxDEV(OpenURLInput, {\n                  href: facebook,\n                  target: \"_blank\",\n                  addonBefore: /*#__PURE__*/_jsxDEV(FacebookIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 80\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(SocialLinksItem, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = SocialLinksItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"SocialLinksItem\");","map":{"version":3,"sources":["D:/fl-carla/src/components/profile/profileCard/profileFormNav/nav/PersonalInfo/SocialLinksItem/SocialLinksItem.tsx"],"names":["React","useTranslation","Col","Row","TwitterOutlined","BaseButtonsForm","ClipboardInput","OpenURLInput","LinkedinIcon","FacebookIcon","websitePattern","SocialLinksItem","t","getFieldValue","twitter","linkedin","pattern","RegExp","message","facebook"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Col, Row } from 'antd';\r\nimport { TwitterOutlined } from '@ant-design/icons';\r\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\r\nimport { ClipboardInput } from 'components/common/inputs/ClipboardInput/ClipboardInput';\r\nimport { OpenURLInput } from '@app/components/common/inputs/OpenURLInput/OpenURLInput';\r\nimport { LinkedinIcon } from '@app/components/common/icons/LinkedinIcon';\r\nimport { FacebookIcon } from '@app/components/common/icons/FacebookIcon';\r\nimport { websitePattern } from '@app/constants/patterns';\r\n\r\nexport const SocialLinksItem: React.FC = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <BaseButtonsForm.Item label={t('profile.nav.personalInfo.socialLinks')}>\r\n      <Row gutter={[20, 0]}>\r\n        <Col xs={24} md={12}>\r\n          <BaseButtonsForm.Item shouldUpdate>\r\n            {({ getFieldValue }) => {\r\n              const twitter = getFieldValue('twitter');\r\n\r\n              return (\r\n                <label>\r\n                  <BaseButtonsForm.Item name=\"twitter\">\r\n                    <ClipboardInput valueToCopy={twitter} addonBefore={<TwitterOutlined />} />\r\n                  </BaseButtonsForm.Item>\r\n                </label>\r\n              );\r\n            }}\r\n          </BaseButtonsForm.Item>\r\n        </Col>\r\n        <Col xs={24} md={12}>\r\n          <BaseButtonsForm.Item shouldUpdate>\r\n            {({ getFieldValue }) => {\r\n              const linkedin = getFieldValue('linkedin');\r\n\r\n              return (\r\n                <label>\r\n                  <BaseButtonsForm.Item\r\n                    name=\"linkedin\"\r\n                    rules={[\r\n                      {\r\n                        pattern: new RegExp(websitePattern),\r\n                        message: t('profile.nav.personalInfo.notValidWebsite'),\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <OpenURLInput href={linkedin} target=\"_blank\" addonBefore={<LinkedinIcon />} />\r\n                  </BaseButtonsForm.Item>\r\n                </label>\r\n              );\r\n            }}\r\n          </BaseButtonsForm.Item>\r\n        </Col>\r\n        <Col xs={24} md={12}>\r\n          <BaseButtonsForm.Item shouldUpdate>\r\n            {({ getFieldValue }) => {\r\n              const facebook = getFieldValue('facebook');\r\n\r\n              return (\r\n                <label>\r\n                  {' '}\r\n                  <BaseButtonsForm.Item\r\n                    name=\"facebook\"\r\n                    rules={[\r\n                      {\r\n                        pattern: new RegExp(websitePattern),\r\n                        message: t('profile.nav.personalInfo.notValidWebsite'),\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <OpenURLInput href={facebook} target=\"_blank\" addonBefore={<FacebookIcon />} />\r\n                  </BaseButtonsForm.Item>\r\n                </label>\r\n              );\r\n            }}\r\n          </BaseButtonsForm.Item>\r\n        </Col>\r\n      </Row>\r\n    </BaseButtonsForm.Item>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}