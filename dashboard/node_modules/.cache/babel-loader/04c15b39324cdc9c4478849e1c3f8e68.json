{"ast":null,"code":"import _objectSpread from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\n\nvar _jsxFileName = \"D:\\\\fl-carla\\\\src\\\\components\\\\header\\\\dropdowns\\\\notificationsDropdown\\\\NotificationsOverlay\\\\NotificationsOverlay.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { Trans } from 'react-i18next';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row, Space } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { Notification } from 'components/common/Notification/Notification';\nimport { capitalize } from 'utils/utils';\nimport { notificationsSeverities } from 'constants/notificationsSeverities';\nimport * as S from './NotificationsOverlay.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var NotificationsOverlay = function NotificationsOverlay(_ref) {\n  _s();\n\n  var notifications = _ref.notifications,\n      setNotifications = _ref.setNotifications;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var noticesList = useMemo(function () {\n    return notifications.map(function (notification, index) {\n      var _notificationsSeverit;\n\n      var type = (_notificationsSeverit = notificationsSeverities.find(function (dbSeverity) {\n        return dbSeverity.id === notification.id;\n      })) === null || _notificationsSeverit === void 0 ? void 0 : _notificationsSeverit.name;\n      return /*#__PURE__*/_jsxDEV(Notification, _objectSpread({\n        type: type || 'warning',\n        title: capitalize(type || 'warning'),\n        description: t(notification.description)\n      }, type === 'mention' && {\n        mentionIconSrc: notification.userIcon,\n        title: notification.userName,\n        description: /*#__PURE__*/_jsxDEV(Trans, {\n          i18nKey: notification.description,\n          children: /*#__PURE__*/_jsxDEV(S.LinkBtn, {\n            type: \"link\",\n            href: notification.href,\n            children: {\n              place: t(notification.place)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, _this)\n      }), index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, _this);\n    });\n  }, [notifications, t]);\n  return /*#__PURE__*/_jsxDEV(S.NoticesOverlayMenu, {\n    mode: \"inline\",\n    children: /*#__PURE__*/_jsxDEV(S.MenuRow, {\n      gutter: [20, 20],\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        children: notifications.length > 0 ? /*#__PURE__*/_jsxDEV(Space, {\n          direction: \"vertical\",\n          size: 10,\n          split: /*#__PURE__*/_jsxDEV(S.SplitDivider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 58\n          }, _this),\n          children: noticesList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, _this) : /*#__PURE__*/_jsxDEV(S.Text, {\n          children: t('header.notifications.noNotifications')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          gutter: [10, 10],\n          children: [notifications.length > 0 && /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(S.Btn, {\n              type: \"ghost\",\n              onClick: function onClick() {\n                return setNotifications([]);\n              },\n              children: t('header.notifications.readAll')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(S.Btn, {\n              type: \"link\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/\",\n                children: t('header.notifications.viewAll')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(NotificationsOverlay, \"j2Fsx99XZuII746J/44YDv5jNd8=\", false, function () {\n  return [useTranslation];\n});\n\n_c = NotificationsOverlay;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationsOverlay\");","map":{"version":3,"sources":["D:/fl-carla/src/components/header/dropdowns/notificationsDropdown/NotificationsOverlay/NotificationsOverlay.tsx"],"names":["React","useMemo","Trans","useTranslation","Col","Row","Space","Link","Notification","capitalize","notificationsSeverities","S","NotificationsOverlay","notifications","setNotifications","t","noticesList","map","notification","index","type","find","dbSeverity","id","name","description","mentionIconSrc","userIcon","title","userName","href","place","length"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\r\nimport { Trans } from 'react-i18next';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Col, Row, Space } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { Notification } from 'components/common/Notification/Notification';\r\nimport { capitalize } from 'utils/utils';\r\nimport { Mention, Notification as NotificationType } from 'api/notifications.api';\r\nimport { notificationsSeverities } from 'constants/notificationsSeverities';\r\nimport * as S from './NotificationsOverlay.styles';\r\n\r\ninterface NotificationsOverlayProps {\r\n  notifications: NotificationType[];\r\n  setNotifications: (state: NotificationType[]) => void;\r\n}\r\n\r\nexport const NotificationsOverlay: React.FC<NotificationsOverlayProps> = ({ notifications, setNotifications }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const noticesList = useMemo(\r\n    () =>\r\n      notifications.map((notification, index) => {\r\n        const type = notificationsSeverities.find((dbSeverity) => dbSeverity.id === notification.id)?.name;\r\n\r\n        return (\r\n          <Notification\r\n            key={index}\r\n            type={type || 'warning'}\r\n            title={capitalize(type || 'warning')}\r\n            description={t(notification.description)}\r\n            {...(type === 'mention' && {\r\n              mentionIconSrc: (notification as Mention).userIcon,\r\n              title: (notification as Mention).userName,\r\n              description: (\r\n                <Trans i18nKey={(notification as Mention).description}>\r\n                  <S.LinkBtn type=\"link\" href={(notification as Mention).href}>\r\n                    {{ place: t((notification as Mention).place) }}\r\n                  </S.LinkBtn>\r\n                </Trans>\r\n              ),\r\n            })}\r\n          />\r\n        );\r\n      }),\r\n    [notifications, t],\r\n  );\r\n\r\n  return (\r\n    <S.NoticesOverlayMenu mode=\"inline\">\r\n      <S.MenuRow gutter={[20, 20]}>\r\n        <Col span={24}>\r\n          {notifications.length > 0 ? (\r\n            <Space direction=\"vertical\" size={10} split={<S.SplitDivider />}>\r\n              {noticesList}\r\n            </Space>\r\n          ) : (\r\n            <S.Text>{t('header.notifications.noNotifications')}</S.Text>\r\n          )}\r\n        </Col>\r\n        <Col span={24}>\r\n          <Row gutter={[10, 10]}>\r\n            {notifications.length > 0 && (\r\n              <Col span={24}>\r\n                <S.Btn type=\"ghost\" onClick={() => setNotifications([])}>\r\n                  {t('header.notifications.readAll')}\r\n                </S.Btn>\r\n              </Col>\r\n            )}\r\n            <Col span={24}>\r\n              <S.Btn type=\"link\">\r\n                <Link to=\"/\">{t('header.notifications.viewAll')}</Link>\r\n              </S.Btn>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </S.MenuRow>\r\n    </S.NoticesOverlayMenu>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}