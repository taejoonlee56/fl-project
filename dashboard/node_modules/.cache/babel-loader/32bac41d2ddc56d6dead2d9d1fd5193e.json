{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { errorLoggingMiddleware } from '@app/store/middlewares/errorLogging.middleware';\nimport rootReducer from '@app/store/slices';\nexport var store = configureStore({\n  reducer: rootReducer,\n  middleware: function middleware(getDefaultMiddleware) {\n    return getDefaultMiddleware().concat(errorLoggingMiddleware);\n  }\n});","map":{"version":3,"sources":["D:/fl-carla/src/store/store.ts"],"names":["configureStore","errorLoggingMiddleware","rootReducer","store","reducer","middleware","getDefaultMiddleware","concat"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,sBAAT,QAAuC,gDAAvC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA,OAAO,IAAMC,KAAK,GAAGH,cAAc,CAAC;AAClCI,EAAAA,OAAO,EAAEF,WADyB;AAElCG,EAAAA,UAAU,EAAE,oBAACC,oBAAD;AAAA,WAA0BA,oBAAoB,GAAGC,MAAvB,CAA8BN,sBAA9B,CAA1B;AAAA;AAFsB,CAAD,CAA5B","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport { errorLoggingMiddleware } from '@app/store/middlewares/errorLogging.middleware';\r\nimport rootReducer from '@app/store/slices';\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(errorLoggingMiddleware),\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n"]},"metadata":{},"sourceType":"module"}