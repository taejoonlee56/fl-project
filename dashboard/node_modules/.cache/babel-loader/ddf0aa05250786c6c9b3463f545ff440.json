{"ast":null,"code":"import _objectSpread from \"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"option\", \"width\", \"height\", \"onEvents\", \"style\"];\n\nvar _jsxFileName = \"/home/tj/fl-carla/src/components/common/charts/BaseChart.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ReactECharts from 'echarts-for-react';\nimport { Loading } from '../Loading';\nimport { useTheme } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var getChartColors = function getChartColors(theme) {\n  return [theme.colors.charts.color1, theme.colors.charts.color2, theme.colors.charts.color3, theme.colors.charts.color4, theme.colors.charts.color5];\n};\nexport var getDefaultTooltipStyles = function getDefaultTooltipStyles(theme) {\n  return {\n    borderColor: theme.colors.charts.color1,\n    borderWidth: 2,\n    borderRadius: Number.parseInt(theme.border.radius),\n    textStyle: {\n      fontWeight: 600,\n      fontSize: 16,\n      color: theme.colors.charts.color1\n    }\n  };\n};\nexport var BaseChart = function BaseChart(_ref) {\n  _s();\n\n  var option = _ref.option,\n      width = _ref.width,\n      height = _ref.height,\n      onEvents = _ref.onEvents,\n      style = _ref.style,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var theme = useTheme();\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var chartHeight = height || '400px';\n  var defaultOption = {\n    color: getChartColors(theme)\n  };\n  useEffect(function () {\n    // TODO FIXME workaround to make sure that parent container is initialized before the chart\n    setTimeout(function () {\n      setLoading(false);\n    }, 1000 / 2);\n  }, []);\n  return loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, _this) : /*#__PURE__*/_jsxDEV(ReactECharts, _objectSpread(_objectSpread({}, props), {}, {\n    option: _objectSpread(_objectSpread({}, defaultOption), option),\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      height: chartHeight,\n      minHeight: height === '100%' ? 400 : 'unset',\n      width: width,\n      zIndex: 0\n    }),\n    onEvents: onEvents\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(BaseChart, \"I7p8y0bJrNkBXY0so82yD4+t0dM=\", false, function () {\n  return [useTheme];\n});\n\n_c = BaseChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BaseChart\");","map":{"version":3,"sources":["/home/tj/fl-carla/src/components/common/charts/BaseChart.tsx"],"names":["React","useEffect","useState","ReactECharts","Loading","useTheme","getChartColors","theme","colors","charts","color1","color2","color3","color4","color5","getDefaultTooltipStyles","borderColor","borderWidth","borderRadius","Number","parseInt","border","radius","textStyle","fontWeight","fontSize","color","BaseChart","option","width","height","onEvents","style","props","loading","setLoading","chartHeight","defaultOption","setTimeout","minHeight","zIndex"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AAEA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAAuBC,QAAvB,QAAuC,mBAAvC;;AAuBA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD;AAAA,SAAmC,CAC/DA,KAAK,CAACC,MAAN,CAAaC,MAAb,CAAoBC,MAD2C,EAE/DH,KAAK,CAACC,MAAN,CAAaC,MAAb,CAAoBE,MAF2C,EAG/DJ,KAAK,CAACC,MAAN,CAAaC,MAAb,CAAoBG,MAH2C,EAI/DL,KAAK,CAACC,MAAN,CAAaC,MAAb,CAAoBI,MAJ2C,EAK/DN,KAAK,CAACC,MAAN,CAAaC,MAAb,CAAoBK,MAL2C,CAAnC;AAAA,CAAvB;AAQP,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACR,KAAD;AAAA,SAAgD;AACrFS,IAAAA,WAAW,EAAET,KAAK,CAACC,MAAN,CAAaC,MAAb,CAAoBC,MADoD;AAErFO,IAAAA,WAAW,EAAE,CAFwE;AAGrFC,IAAAA,YAAY,EAAEC,MAAM,CAACC,QAAP,CAAgBb,KAAK,CAACc,MAAN,CAAaC,MAA7B,CAHuE;AAIrFC,IAAAA,SAAS,EAAE;AACTC,MAAAA,UAAU,EAAE,GADH;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,KAAK,EAAEnB,KAAK,CAACC,MAAN,CAAaC,MAAb,CAAoBC;AAHlB;AAJ0E,GAAhD;AAAA,CAAhC;AAWP,OAAO,IAAMiB,SAAmC,GAAG,SAAtCA,SAAsC,OAA0D;AAAA;;AAAA,MAAvDC,MAAuD,QAAvDA,MAAuD;AAAA,MAA/CC,KAA+C,QAA/CA,KAA+C;AAAA,MAAxCC,MAAwC,QAAxCA,MAAwC;AAAA,MAAhCC,QAAgC,QAAhCA,QAAgC;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAZC,KAAY;;AAC3G,MAAM1B,KAAK,GAAGF,QAAQ,EAAtB;;AACA,kBAA8BH,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOgC,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,WAAW,GAAGN,MAAM,IAAI,OAA9B;AAEA,MAAMO,aAAa,GAAG;AACpBX,IAAAA,KAAK,EAAEpB,cAAc,CAACC,KAAD;AADD,GAAtB;AAIAN,EAAAA,SAAS,CAAC,YAAM;AACd;AACAqC,IAAAA,UAAU,CAAC,YAAM;AACfH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFS,EAEP,OAAO,CAFA,CAAV;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,SAAOD,OAAO,gBACZ,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,WADY,gBAGZ,QAAC,YAAD,kCACMD,KADN;AAEE,IAAA,MAAM,kCAAOI,aAAP,GAAyBT,MAAzB,CAFR;AAGE,IAAA,KAAK,kCAAOI,KAAP;AAAcF,MAAAA,MAAM,EAAEM,WAAtB;AAAmCG,MAAAA,SAAS,EAAET,MAAM,KAAK,MAAX,GAAoB,GAApB,GAA0B,OAAxE;AAAiFD,MAAAA,KAAK,EAALA,KAAjF;AAAwFW,MAAAA,MAAM,EAAE;AAAhG,MAHP;AAIE,IAAA,QAAQ,EAAET;AAJZ;AAAA;AAAA;AAAA;AAAA,WAHF;AAUD,CA3BM;;GAAMJ,S;UACGtB,Q;;;KADHsB,S","sourcesContent":["import React, { CSSProperties, useEffect, useState } from 'react';\nimport { EChartsOption } from 'echarts-for-react';\nimport ReactECharts from 'echarts-for-react';\nimport { Loading } from '../Loading';\nimport { DefaultTheme, useTheme } from 'styled-components';\n\nexport interface BaseChartProps {\n  option?: EChartsOption;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onEvents?: Record<string, (e: any) => void>;\n  width?: string | number;\n  height?: string | number;\n  style?: CSSProperties;\n  classname?: string;\n}\n\ninterface DefaultTooltipStyles {\n  borderColor: string;\n  borderWidth: number;\n  borderRadius: number;\n  textStyle: {\n    fontWeight: number;\n    fontSize: number;\n    color: string;\n  };\n}\n\nexport const getChartColors = (theme: DefaultTheme): string[] => [\n  theme.colors.charts.color1,\n  theme.colors.charts.color2,\n  theme.colors.charts.color3,\n  theme.colors.charts.color4,\n  theme.colors.charts.color5,\n];\n\nexport const getDefaultTooltipStyles = (theme: DefaultTheme): DefaultTooltipStyles => ({\n  borderColor: theme.colors.charts.color1,\n  borderWidth: 2,\n  borderRadius: Number.parseInt(theme.border.radius),\n  textStyle: {\n    fontWeight: 600,\n    fontSize: 16,\n    color: theme.colors.charts.color1,\n  },\n});\n\nexport const BaseChart: React.FC<BaseChartProps> = ({ option, width, height, onEvents, style, ...props }) => {\n  const theme = useTheme();\n  const [loading, setLoading] = useState(true);\n\n  const chartHeight = height || '400px';\n\n  const defaultOption = {\n    color: getChartColors(theme),\n  };\n\n  useEffect(() => {\n    // TODO FIXME workaround to make sure that parent container is initialized before the chart\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000 / 2);\n  }, []);\n\n  return loading ? (\n    <Loading />\n  ) : (\n    <ReactECharts\n      {...props}\n      option={{ ...defaultOption, ...option }}\n      style={{ ...style, height: chartHeight, minHeight: height === '100%' ? 400 : 'unset', width, zIndex: 0 }}\n      onEvents={onEvents}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}