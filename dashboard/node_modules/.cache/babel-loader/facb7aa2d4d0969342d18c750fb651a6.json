{"ast":null,"code":"import _classCallCheck from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport dayjs from 'dayjs';\nimport LocalizedFormat from 'dayjs/plugin/localizedFormat';\nimport localeData from 'dayjs/plugin/localeData';\nimport isBetween from 'dayjs/plugin/isBetween';\nimport 'dayjs/locale/de';\ndayjs.extend(LocalizedFormat);\ndayjs.extend(localeData);\ndayjs.extend(isBetween);\nexport var Dates = /*#__PURE__*/function () {\n  function Dates() {\n    _classCallCheck(this, Dates);\n  }\n\n  _createClass(Dates, null, [{\n    key: \"setLocale\",\n    value: function setLocale(locale) {\n      dayjs.locale(locale);\n    }\n  }, {\n    key: \"getToday\",\n    value: function getToday() {\n      return dayjs();\n    }\n  }, {\n    key: \"getClearDate\",\n    value: function getClearDate() {\n      return this.getToday().hour(0).minute(0).second(0).millisecond(0);\n    }\n  }, {\n    key: \"getMonths\",\n    value: function getMonths() {\n      return dayjs.months();\n    }\n  }, {\n    key: \"getDays\",\n    value: function getDays() {\n      return dayjs.weekdaysShort();\n    }\n  }, {\n    key: \"getDate\",\n    value: function getDate(date) {\n      return dayjs(date);\n    }\n  }, {\n    key: \"format\",\n    value: function format(date, query) {\n      if (typeof date === 'string' || typeof date === 'number') {\n        return dayjs(date).format(query);\n      } else {\n        return date.format(query);\n      }\n    }\n  }]);\n\n  return Dates;\n}();","map":{"version":3,"sources":["D:/fl-carla/src/constants/Dates.ts"],"names":["dayjs","LocalizedFormat","localeData","isBetween","extend","Dates","locale","getToday","hour","minute","second","millisecond","months","weekdaysShort","date","query","format"],"mappings":";;AAAA,OAAOA,KAAP,MAA6B,OAA7B;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,iBAAP;AAEAH,KAAK,CAACI,MAAN,CAAaH,eAAb;AACAD,KAAK,CAACI,MAAN,CAAaF,UAAb;AACAF,KAAK,CAACI,MAAN,CAAaD,SAAb;AAIA,WAAaE,KAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,mBAAiBC,MAAjB,EAAuC;AACrCN,MAAAA,KAAK,CAACM,MAAN,CAAaA,MAAb;AACD;AAHH;AAAA;AAAA,WAKE,oBAA2B;AACzB,aAAON,KAAK,EAAZ;AACD;AAPH;AAAA;AAAA,WASE,wBAA+B;AAC7B,aAAO,KAAKO,QAAL,GAAgBC,IAAhB,CAAqB,CAArB,EAAwBC,MAAxB,CAA+B,CAA/B,EAAkCC,MAAlC,CAAyC,CAAzC,EAA4CC,WAA5C,CAAwD,CAAxD,CAAP;AACD;AAXH;AAAA;AAAA,WAaE,qBAA6B;AAC3B,aAAOX,KAAK,CAACY,MAAN,EAAP;AACD;AAfH;AAAA;AAAA,WAiBE,mBAA2B;AACzB,aAAOZ,KAAK,CAACa,aAAN,EAAP;AACD;AAnBH;AAAA;AAAA,WAqBE,iBAAeC,IAAf,EAA+C;AAC7C,aAAOd,KAAK,CAACc,IAAD,CAAZ;AACD;AAvBH;AAAA;AAAA,WAyBE,gBAAcA,IAAd,EAA+CC,KAA/C,EAAsE;AACpE,UAAI,OAAOD,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAP,KAAgB,QAAhD,EAA0D;AACxD,eAAOd,KAAK,CAACc,IAAD,CAAL,CAAYE,MAAZ,CAAmBD,KAAnB,CAAP;AACD,OAFD,MAEO;AACL,eAAOD,IAAI,CAACE,MAAL,CAAYD,KAAZ,CAAP;AACD;AACF;AA/BH;;AAAA;AAAA","sourcesContent":["import dayjs, { Dayjs } from 'dayjs';\r\nimport LocalizedFormat from 'dayjs/plugin/localizedFormat';\r\nimport localeData from 'dayjs/plugin/localeData';\r\nimport isBetween from 'dayjs/plugin/isBetween';\r\nimport 'dayjs/locale/de';\r\n\r\ndayjs.extend(LocalizedFormat);\r\ndayjs.extend(localeData);\r\ndayjs.extend(isBetween);\r\n\r\nexport type AppDate = Dayjs;\r\n\r\nexport class Dates {\r\n  static setLocale(locale: string): void {\r\n    dayjs.locale(locale);\r\n  }\r\n\r\n  static getToday(): AppDate {\r\n    return dayjs();\r\n  }\r\n\r\n  static getClearDate(): AppDate {\r\n    return this.getToday().hour(0).minute(0).second(0).millisecond(0);\r\n  }\r\n\r\n  static getMonths(): string[] {\r\n    return dayjs.months();\r\n  }\r\n\r\n  static getDays(): string[] {\r\n    return dayjs.weekdaysShort();\r\n  }\r\n\r\n  static getDate(date: number | string): AppDate {\r\n    return dayjs(date);\r\n  }\r\n\r\n  static format(date: AppDate | string | number, query: string): string {\r\n    if (typeof date === 'string' || typeof date === 'number') {\r\n      return dayjs(date).format(query);\r\n    } else {\r\n      return date.format(query);\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}