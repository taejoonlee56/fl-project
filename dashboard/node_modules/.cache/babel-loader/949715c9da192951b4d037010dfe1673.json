{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport _slicedToArray from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"D:\\\\fl-carla\\\\src\\\\components\\\\tj\\\\BatteryStackedChart\\\\BatteryStackedChart.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useTheme } from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport * as echarts from 'echarts';\nimport axios from 'axios';\nimport { BaseChart } from '@app/components/common/charts/BaseChart';\nimport { Card } from '@app/components/common/Card/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var BatteryStackedChart = function BatteryStackedChart() {\n  _s();\n\n  var theme = useTheme();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var chartColors = theme.colors.charts;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      chartData = _useState2[0],\n      setChartData = _useState2[1];\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios('data.json');\n\n              case 2:\n                result = _context.sent;\n                setChartData(result.data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []);\n  var option = {\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        type: 'cross',\n        label: {\n          backgroundColor: chartColors.tooltipLabel\n        }\n      }\n    },\n    legend: {\n      data: [\"coal\", \"hydro\", \"nuclear\", \"gas\", \"oil\"].map(function (item) {\n        return t(\"charts.\".concat(item));\n      }),\n      top: 0,\n      left: 10,\n      textStyle: {\n        color: theme.colors.text.main\n      }\n    },\n    grid: {\n      top: 80,\n      left: 20,\n      right: 20,\n      bottom: 0,\n      containLabel: true\n    },\n    xAxis: [{\n      type: 'category',\n      boundaryGap: false,\n      data: ['Canada', 'China', 'Russia', 'Australia', 'Germany', 'France'],\n      axisLabel: {\n        fontSize: theme.commonFontSizes.xxs,\n        fontWeight: theme.commonFontWeight.light,\n        color: theme.colors.main.primary\n      }\n    }],\n    yAxis: [{\n      type: 'value',\n      name: 'TWh',\n      axisLabel: {\n        fontSize: theme.commonFontSizes.xxs,\n        fontWeight: theme.commonFontWeight.light,\n        color: theme.colors.text.main\n      }\n    }],\n    series: [{\n      name: t('charts.coal'),\n      type: 'line',\n      stack: 'Total',\n      smooth: true,\n      lineStyle: {\n        width: 0\n      },\n      showSymbol: false,\n      areaStyle: {\n        opacity: 0.8,\n        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n          offset: 0,\n          color: chartColors.color1\n        }, {\n          offset: 1,\n          color: chartColors.color1Tint\n        }])\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      data: [140, 232, 101, 264, 90, 340, 250]\n    }, {\n      name: t('charts.hydro'),\n      type: 'line',\n      stack: 'Total',\n      smooth: true,\n      lineStyle: {\n        width: 0\n      },\n      showSymbol: false,\n      areaStyle: {\n        opacity: 0.8,\n        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n          offset: 0,\n          color: chartColors.color2\n        }, {\n          offset: 0.82,\n          color: chartColors.color2Tint\n        }])\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      data: [120, 282, 111, 234, 220, 340, 310]\n    }, {\n      name: t('charts.nuclear'),\n      type: 'line',\n      stack: 'Total',\n      smooth: true,\n      lineStyle: {\n        width: 0\n      },\n      showSymbol: false,\n      areaStyle: {\n        opacity: 0.8,\n        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n          offset: 0,\n          color: chartColors.color3\n        }, {\n          offset: 0.65,\n          color: chartColors.color3Tint\n        }])\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      data: [320, 132, 201, 334, 190, 130, 220]\n    }, {\n      name: t('charts.gas'),\n      type: 'line',\n      stack: 'Total',\n      smooth: true,\n      lineStyle: {\n        width: 0\n      },\n      showSymbol: false,\n      areaStyle: {\n        opacity: 0.8,\n        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n          offset: 0,\n          color: chartColors.color4\n        }, {\n          offset: 1,\n          color: chartColors.color4Tint\n        }])\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      data: [220, 402, 231, 134, 190, 230, 120]\n    }, {\n      name: t('charts.oil'),\n      type: 'line',\n      stack: 'Total',\n      smooth: true,\n      lineStyle: {\n        width: 0\n      },\n      showSymbol: false,\n      label: {\n        show: true,\n        position: 'top'\n      },\n      areaStyle: {\n        opacity: 0.8,\n        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n          offset: 0.4,\n          color: chartColors.color5\n        }, {\n          offset: 1,\n          color: chartColors.color5Tint\n        }])\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      data: [220, 302, 181, 234, 210, 290, 150]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    padding: \"0 0 1.875rem\",\n    title: t('charts.gradientLabel'),\n    children: /*#__PURE__*/_jsxDEV(BaseChart, {\n      option: option\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(BatteryStackedChart, \"OWql1YbUSVYXUBAW6vIoMU09LCg=\", false, function () {\n  return [useTheme, useTranslation];\n});\n\n_c = BatteryStackedChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BatteryStackedChart\");","map":{"version":3,"sources":["D:/fl-carla/src/components/tj/BatteryStackedChart/BatteryStackedChart.tsx"],"names":["React","useState","useEffect","useTheme","useTranslation","echarts","axios","BaseChart","Card","BatteryStackedChart","theme","t","chartColors","colors","charts","chartData","setChartData","fetchData","result","data","option","tooltip","trigger","axisPointer","type","label","backgroundColor","tooltipLabel","legend","map","item","top","left","textStyle","color","text","main","grid","right","bottom","containLabel","xAxis","boundaryGap","axisLabel","fontSize","commonFontSizes","xxs","fontWeight","commonFontWeight","light","primary","yAxis","name","series","stack","smooth","lineStyle","width","showSymbol","areaStyle","opacity","graphic","LinearGradient","offset","color1","color1Tint","emphasis","focus","color2","color2Tint","color3","color3Tint","color4","color4Tint","show","position","color5","color5Tint"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useTheme } from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\nimport * as echarts from 'echarts';\r\nimport axios from 'axios';\r\nimport { BaseChart } from '@app/components/common/charts/BaseChart';\r\nimport { Card } from '@app/components/common/Card/Card';\r\n\r\n\r\nexport const BatteryStackedChart: React.FC = () => {\r\n  const theme = useTheme();\r\n  const { t } = useTranslation();\r\n\r\n  const chartColors = theme.colors.charts;\r\n\r\n  const [chartData, setChartData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios('data.json');\r\n      setChartData(result.data);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n  \r\n  const option = {\r\n    tooltip: {\r\n      trigger: 'axis',\r\n      axisPointer: {\r\n        type: 'cross',\r\n        label: {\r\n          backgroundColor: chartColors.tooltipLabel,\r\n        },\r\n      },\r\n    },\r\n    legend: {\r\n      data: [`coal`, `hydro`, `nuclear`, `gas`, `oil`].map((item) => t(`charts.${item}`)),\r\n      top: 0,\r\n      left: 10,\r\n      textStyle: {\r\n        color: theme.colors.text.main,\r\n      },\r\n    },\r\n    grid: {\r\n      top: 80,\r\n      left: 20,\r\n      right: 20,\r\n      bottom: 0,\r\n      containLabel: true,\r\n    },\r\n    xAxis: [\r\n      {\r\n        type: 'category',\r\n        boundaryGap: false,\r\n        data: ['Canada', 'China', 'Russia', 'Australia', 'Germany', 'France'],\r\n        axisLabel: {\r\n          fontSize: theme.commonFontSizes.xxs,\r\n          fontWeight: theme.commonFontWeight.light,\r\n          color: theme.colors.main.primary,\r\n        },\r\n      },\r\n    ],\r\n    yAxis: [\r\n      {\r\n        type: 'value',\r\n        name: 'TWh',\r\n        axisLabel: {\r\n          fontSize: theme.commonFontSizes.xxs,\r\n          fontWeight: theme.commonFontWeight.light,\r\n          color: theme.colors.text.main,\r\n        },\r\n      },\r\n    ],\r\n    series: [\r\n      {\r\n        name: t('charts.coal'),\r\n        type: 'line',\r\n        stack: 'Total',\r\n        smooth: true,\r\n        lineStyle: {\r\n          width: 0,\r\n        },\r\n        showSymbol: false,\r\n        areaStyle: {\r\n          opacity: 0.8,\r\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n            {\r\n              offset: 0,\r\n              color: chartColors.color1,\r\n            },\r\n            {\r\n              offset: 1,\r\n              color: chartColors.color1Tint,\r\n            },\r\n          ]),\r\n        },\r\n        emphasis: {\r\n          focus: 'series',\r\n        },\r\n        data: [140, 232, 101, 264, 90, 340, 250],\r\n      },\r\n      {\r\n        name: t('charts.hydro'),\r\n        type: 'line',\r\n        stack: 'Total',\r\n        smooth: true,\r\n        lineStyle: {\r\n          width: 0,\r\n        },\r\n        showSymbol: false,\r\n        areaStyle: {\r\n          opacity: 0.8,\r\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n            {\r\n              offset: 0,\r\n              color: chartColors.color2,\r\n            },\r\n            {\r\n              offset: 0.82,\r\n              color: chartColors.color2Tint,\r\n            },\r\n          ]),\r\n        },\r\n        emphasis: {\r\n          focus: 'series',\r\n        },\r\n        data: [120, 282, 111, 234, 220, 340, 310],\r\n      },\r\n      {\r\n        name: t('charts.nuclear'),\r\n        type: 'line',\r\n        stack: 'Total',\r\n        smooth: true,\r\n        lineStyle: {\r\n          width: 0,\r\n        },\r\n        showSymbol: false,\r\n        areaStyle: {\r\n          opacity: 0.8,\r\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n            {\r\n              offset: 0,\r\n              color: chartColors.color3,\r\n            },\r\n            {\r\n              offset: 0.65,\r\n              color: chartColors.color3Tint,\r\n            },\r\n          ]),\r\n        },\r\n        emphasis: {\r\n          focus: 'series',\r\n        },\r\n        data: [320, 132, 201, 334, 190, 130, 220],\r\n      },\r\n      {\r\n        name: t('charts.gas'),\r\n        type: 'line',\r\n        stack: 'Total',\r\n        smooth: true,\r\n        lineStyle: {\r\n          width: 0,\r\n        },\r\n        showSymbol: false,\r\n        areaStyle: {\r\n          opacity: 0.8,\r\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n            {\r\n              offset: 0,\r\n              color: chartColors.color4,\r\n            },\r\n            {\r\n              offset: 1,\r\n              color: chartColors.color4Tint,\r\n            },\r\n          ]),\r\n        },\r\n        emphasis: {\r\n          focus: 'series',\r\n        },\r\n        data: [220, 402, 231, 134, 190, 230, 120],\r\n      },\r\n      {\r\n        name: t('charts.oil'),\r\n        type: 'line',\r\n        stack: 'Total',\r\n        smooth: true,\r\n        lineStyle: {\r\n          width: 0,\r\n        },\r\n        showSymbol: false,\r\n        label: {\r\n          show: true,\r\n          position: 'top',\r\n        },\r\n        areaStyle: {\r\n          opacity: 0.8,\r\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n            {\r\n              offset: 0.4,\r\n              color: chartColors.color5,\r\n            },\r\n            {\r\n              offset: 1,\r\n              color: chartColors.color5Tint,\r\n            },\r\n          ]),\r\n        },\r\n        emphasis: {\r\n          focus: 'series',\r\n        },\r\n        data: [220, 302, 181, 234, 210, 290, 150],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Card padding=\"0 0 1.875rem\" title={t('charts.gradientLabel')}>\r\n      <BaseChart option={option} />\r\n    </Card>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}