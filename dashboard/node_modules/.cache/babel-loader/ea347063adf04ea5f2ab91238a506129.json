{"ast":null,"code":"var _jsxFileName = \"/home/tj/fl-carla/src/components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorOptions/TwoFactorOptions.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport { RadioGroup } from '@app/components/common/Radio/Radio';\nimport { EmailItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/EmailItem/EmailItem';\nimport { PhoneItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/PhoneItem/PhoneItem';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport * as S from './TwoFactorOptions.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var TwoFactorOptions = function TwoFactorOptions(_ref) {\n  _s();\n\n  var selectedOption = _ref.selectedOption,\n      setSelectedOption = _ref.setSelectedOption;\n  var user = useAppSelector(function (state) {\n    return state.user.user;\n  });\n\n  var _useMemo = useMemo(function () {\n    return {\n      isPhoneActive: selectedOption === 'phone',\n      isEmailActive: selectedOption === 'email'\n    };\n  }, [selectedOption]),\n      isEmailActive = _useMemo.isEmailActive,\n      isPhoneActive = _useMemo.isPhoneActive;\n\n  var onClickInput = useCallback(function (mode) {\n    return function () {\n      setSelectedOption(mode);\n    };\n  }, [setSelectedOption]);\n  useEffect(function () {\n    if (user !== null && user !== void 0 && user.email.verified && user !== null && user !== void 0 && user.phone.verified) {\n      setSelectedOption(null);\n    }\n  }, [setSelectedOption, user === null || user === void 0 ? void 0 : user.email.verified, user === null || user === void 0 ? void 0 : user.phone.verified]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n      value: selectedOption,\n      onChange: function onChange(e) {\n        return setSelectedOption(e.target.value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(S.RadioBtn, {\n        value: \"phone\",\n        $isActive: isPhoneActive,\n        disabled: user === null || user === void 0 ? void 0 : user.phone.verified,\n        children: /*#__PURE__*/_jsxDEV(PhoneItem, {\n          required: isPhoneActive,\n          onClick: onClickInput('phone'),\n          verified: user === null || user === void 0 ? void 0 : user.phone.verified\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(S.RadioBtn, {\n        value: \"email\",\n        $isActive: isEmailActive,\n        disabled: user === null || user === void 0 ? void 0 : user.email.verified,\n        children: /*#__PURE__*/_jsxDEV(EmailItem, {\n          required: isEmailActive,\n          onClick: onClickInput('email'),\n          verified: user === null || user === void 0 ? void 0 : user.email.verified\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(TwoFactorOptions, \"sB5a/DZDIWbA8Di51b8YrYlp3Q8=\", false, function () {\n  return [useAppSelector];\n});\n\n_c = TwoFactorOptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"TwoFactorOptions\");","map":{"version":3,"sources":["/home/tj/fl-carla/src/components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorOptions/TwoFactorOptions.tsx"],"names":["React","useCallback","useEffect","useMemo","RadioGroup","EmailItem","PhoneItem","useAppSelector","S","TwoFactorOptions","selectedOption","setSelectedOption","user","state","isPhoneActive","isEmailActive","onClickInput","mode","email","verified","phone","e","target","value"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo } from 'react';\nimport { RadioGroup } from '@app/components/common/Radio/Radio';\nimport { EmailItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/EmailItem/EmailItem';\nimport { PhoneItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/PhoneItem/PhoneItem';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { TwoFactorAuthOption } from '@app/interfaces/interfaces';\nimport { TwoFactorAuthOptionState } from '../TwoFactorAuth';\nimport * as S from './TwoFactorOptions.styles';\n\ninterface TwoFactorOptionsProps {\n  selectedOption: TwoFactorAuthOptionState;\n  setSelectedOption: (state: TwoFactorAuthOptionState) => void;\n}\n\nexport const TwoFactorOptions: React.FC<TwoFactorOptionsProps> = ({ selectedOption, setSelectedOption }) => {\n  const user = useAppSelector((state) => state.user.user);\n\n  const { isEmailActive, isPhoneActive } = useMemo(\n    () => ({\n      isPhoneActive: selectedOption === 'phone',\n      isEmailActive: selectedOption === 'email',\n    }),\n    [selectedOption],\n  );\n\n  const onClickInput = useCallback(\n    (mode: TwoFactorAuthOption) => () => {\n      setSelectedOption(mode);\n    },\n    [setSelectedOption],\n  );\n\n  useEffect(() => {\n    if (user?.email.verified && user?.phone.verified) {\n      setSelectedOption(null);\n    }\n  }, [setSelectedOption, user?.email.verified, user?.phone.verified]);\n\n  return (\n    <>\n      <RadioGroup value={selectedOption} onChange={(e) => setSelectedOption(e.target.value)}>\n        <S.RadioBtn value=\"phone\" $isActive={isPhoneActive} disabled={user?.phone.verified}>\n          <PhoneItem required={isPhoneActive} onClick={onClickInput('phone')} verified={user?.phone.verified} />\n        </S.RadioBtn>\n        <S.RadioBtn value=\"email\" $isActive={isEmailActive} disabled={user?.email.verified}>\n          <EmailItem required={isEmailActive} onClick={onClickInput('email')} verified={user?.email.verified} />\n        </S.RadioBtn>\n      </RadioGroup>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}