{"ast":null,"code":"import _objectSpread from \"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/tj/fl-carla/src/components/tj/LearningMetricForm/LearningMetricForm.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"/home/tj/fl-carla/node_modules/@babel/runtime/regenerator/index.js\";\nimport { useTranslation } from 'react-i18next';\nimport { useState } from 'react';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { InputNumber } from '@app/components/common/inputs/InputNumber/InputNumber';\nimport { Select, Option } from '@app/components/common/selects/Select/Select';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { RadioButton, RadioGroup } from '@app/components/common/Radio/Radio';\nimport { notificationController } from '@app/controllers/notificationController'; // import socketIOClient from \"socket.io-client\";\n\nimport socketio from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar formItemLayout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\nexport var LearningMetricForm = function LearningMetricForm() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFieldsChanged = _useState2[0],\n      setFieldsChanged = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      response = _useState6[0],\n      setResponse = _useState6[1]; // const socket = socketio('127.0.0.1:9999');\n  // (() => {\n  //     socket.emit('init', { name: 'bella' });\n  //     socket.on('welcome', (msg) => {\n  //       console.log(msg);\n  //     });\n  // })();\n\n\n  var socket = socketio('0.0.0.0:8080');\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var values,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              values = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              setLoading(true);\n              setTimeout(function () {\n                setLoading(false);\n                setFieldsChanged(false);\n                notificationController.success({\n                  message: t('common.success')\n                });\n                console.log(values);\n                socket.emit('init', {\n                  name: 'bella'\n                });\n                socket.on('welcome', function (values) {\n                  console.log(values);\n                });\n              }, 1000);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onFinish() {\n      return _ref.apply(this, arguments);\n    };\n  }(); // const [response, setResponse] = useState(\"\");\n  // useEffect(() => {\n  //   const socket = socketIOClient(ENDPOINT);\n  //   socket.on(\"FromAPI\", data => {\n  //     setResponse(data);\n  //   });\n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(BaseButtonsForm, _objectSpread(_objectSpread({}, formItemLayout), {}, {\n    isFieldsChanged: isFieldsChanged,\n    onFieldsChange: function onFieldsChange() {\n      return setFieldsChanged(true);\n    },\n    name: \"validateForm\",\n    initialValues: {\n      'input-number': 10,\n      'checkbox-group': ['A', 'B'],\n      rate: 3.5\n    },\n    footer: /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: isLoading,\n        children: t('common.submit')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, _this),\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n      name: \"select\",\n      label: t('Learning Purpose'),\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: t('You Must Choose Learning Purpose!')\n      }],\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: t('Please select a learning purpose'),\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: \"lane\",\n          children: t('Lane Detection')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"object\",\n          children: t('Object Detection')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n      label: t('Number of Client'),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n          name: \"client-number\",\n          rules: [{\n            required: true,\n            message: t('Typing Client Number')\n          }],\n          noStyle: true,\n          children: /*#__PURE__*/_jsxDEV(InputNumber, {\n            min: 1,\n            max: 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", t(' Clients, 1 to 100')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n      label: t('Server/Client Epoch'),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", t(' Server Epoch ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n          name: \"server-epoch-number\",\n          rules: [{\n            required: true,\n            message: t('Typing server epoch Number')\n          }],\n          noStyle: true,\n          children: /*#__PURE__*/_jsxDEV(InputNumber, {\n            min: 1,\n            max: 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", t(' Clients Epoch ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n          name: \"client-epoch-number\",\n          rules: [{\n            required: true,\n            message: t('Typing client Epoch Number')\n          }],\n          noStyle: true,\n          children: /*#__PURE__*/_jsxDEV(InputNumber, {\n            min: 1,\n            max: 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n      name: \"loss-button\" // label={t('forms.validationFormLabels.radioButton')}\n      ,\n      label: t('Loss Function'),\n      rules: [{\n        required: true,\n        message: t('Choose Metric')\n      }],\n      children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n        children: [/*#__PURE__*/_jsxDEV(RadioButton, {\n          value: \"mae\",\n          children: t('MAE')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RadioButton, {\n          value: \"mse\",\n          children: t('MSE')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RadioButton, {\n          value: \"rmse\",\n          children: t('RMSE')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RadioButton, {\n          value: \"binary\",\n          children: t('Binary-CrossEntry')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n      name: \"opt-button\" // label={t('forms.validationFormLabels.radioButton')}\n      ,\n      label: t('Optimaizer'),\n      rules: [{\n        required: true,\n        message: t('Choose loss Function')\n      }],\n      children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n        children: [/*#__PURE__*/_jsxDEV(RadioButton, {\n          value: \"sgd\",\n          children: t('SGD')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RadioButton, {\n          value: \"adam\",\n          children: t('Adam')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RadioButton, {\n          value: \"adagrad\",\n          children: t('Adagrad')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(LearningMetricForm, \"SU+9GrZ21jF2psN8U9jTYyMl6TA=\", false, function () {\n  return [useTranslation];\n});\n\n_c = LearningMetricForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LearningMetricForm\");","map":{"version":3,"sources":["/home/tj/fl-carla/src/components/tj/LearningMetricForm/LearningMetricForm.tsx"],"names":["useTranslation","useState","BaseButtonsForm","InputNumber","Select","Option","Button","RadioButton","RadioGroup","notificationController","socketio","formItemLayout","labelCol","span","wrapperCol","LearningMetricForm","isFieldsChanged","setFieldsChanged","isLoading","setLoading","t","response","setResponse","socket","onFinish","values","setTimeout","success","message","console","log","emit","name","on","rate","required"],"mappings":"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","sourcesContent":["import { useTranslation } from 'react-i18next';\nimport { useState, useEffect } from 'react';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { InputNumber } from '@app/components/common/inputs/InputNumber/InputNumber';\nimport { Select, Option } from '@app/components/common/selects/Select/Select';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { RadioButton, RadioGroup } from '@app/components/common/Radio/Radio';\nimport { notificationController } from '@app/controllers/notificationController';\n\n\n// import socketIOClient from \"socket.io-client\";\nimport socketio from 'socket.io-client';\n\n\nconst formItemLayout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 },\n};\n\nexport const LearningMetricForm: React.FC = () => {\n  \n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const { t } = useTranslation();\n  const [response, setResponse] = useState(\"\");\n  \n  // const socket = socketio('127.0.0.1:9999');\n  \n  // (() => {\n  //     socket.emit('init', { name: 'bella' });\n    \n  //     socket.on('welcome', (msg) => {\n  //       console.log(msg);\n  //     });\n      \n  // })();\n  \n\n  const socket = socketio('0.0.0.0:8080');\n  const onFinish = async (values = {}) => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setFieldsChanged(false);\n      notificationController.success({ message: t('common.success') });\n      console.log(values);\n      socket.emit('init', { name: 'bella' });\n      socket.on('welcome', (values) => {\n        console.log(values);\n      });\n    \n    }, 1000);\n\n  };\n\n  // const [response, setResponse] = useState(\"\");\n\n  // useEffect(() => {\n  //   const socket = socketIOClient(ENDPOINT);\n  //   socket.on(\"FromAPI\", data => {\n  //     setResponse(data);\n  //   });\n  // }, []);\n  \n\n  return (\n    <BaseButtonsForm\n      {...formItemLayout}\n      isFieldsChanged={isFieldsChanged}\n      onFieldsChange={() => setFieldsChanged(true)}\n      name=\"validateForm\"\n      initialValues={{\n        'input-number': 10,\n        'checkbox-group': ['A', 'B'],\n        rate: 3.5,\n      }}\n      footer={\n        <BaseButtonsForm.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n            {t('common.submit')}\n          </Button>\n        </BaseButtonsForm.Item>\n      }\n      onFinish={onFinish}\n    >\n      <BaseButtonsForm.Item\n        name=\"select\"\n        label={t('Learning Purpose')}\n        hasFeedback\n        rules={[{ required: true, message: t('You Must Choose Learning Purpose!') }]}\n      >\n        {/* <Select placeholder={t('forms.validationFormLabels.selectCountry')}> */}\n        <Select placeholder={t('Please select a learning purpose')}>\n          <Option value=\"lane\">{t('Lane Detection')}</Option>\n          <Option value=\"object\">{t('Object Detection')}</Option>\n        </Select>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item label={t('Number of Client')}>\n        <label>\n          <BaseButtonsForm.Item name=\"client-number\" rules={[{ required: true, message: t('Typing Client Number') }]} noStyle>\n            <InputNumber min={1} max={100} />\n          </BaseButtonsForm.Item>\n        </label>\n        <span> {t(' Clients, 1 to 100')}</span>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item label={t('Server/Client Epoch')}>      \n        <span> {t(' Server Epoch ')}</span>\n        <label>\n          <BaseButtonsForm.Item name=\"server-epoch-number\" rules={[{ required: true, message: t('Typing server epoch Number') }]} noStyle>\n            <InputNumber min={1} max={100} />\n          </BaseButtonsForm.Item>\n        </label>\n        \n        <span> {t(' Clients Epoch ')}</span>\n        <label>\n          <BaseButtonsForm.Item name=\"client-epoch-number\" rules={[{ required: true, message: t('Typing client Epoch Number') }]} noStyle>\n            <InputNumber min={1} max={100} />\n          </BaseButtonsForm.Item>\n        </label>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item\n        name=\"loss-button\"\n        // label={t('forms.validationFormLabels.radioButton')}\n        label={t('Loss Function')}\n        rules={[{ required: true, message: t('Choose Metric') }]}\n      >\n        <RadioGroup>\n          <RadioButton value=\"mae\">{t('MAE')}</RadioButton>\n          <RadioButton value=\"mse\">{t('MSE')}</RadioButton>\n          <RadioButton value=\"rmse\">{t('RMSE')}</RadioButton>\n          <RadioButton value=\"binary\">{t('Binary-CrossEntry')}</RadioButton>\n        </RadioGroup>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item\n        name=\"opt-button\"\n        // label={t('forms.validationFormLabels.radioButton')}\n        label={t('Optimaizer')}\n        rules={[{ required: true, message: t('Choose loss Function') }]}\n      >\n        <RadioGroup>\n          <RadioButton value=\"sgd\">{t('SGD')}</RadioButton>\n          <RadioButton value=\"adam\">{t('Adam')}</RadioButton>\n          <RadioButton value=\"adagrad\">{t('Adagrad')}</RadioButton>\n        </RadioGroup>\n      </BaseButtonsForm.Item>\n    </BaseButtonsForm>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}