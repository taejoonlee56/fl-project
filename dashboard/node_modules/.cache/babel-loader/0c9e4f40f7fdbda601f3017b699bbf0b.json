{"ast":null,"code":"import _assertThisInitialized from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\assertThisInitialized.js\";\nimport _get from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\get.js\";\nimport _getPrototypeOf from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\getPrototypeOf.js\";\nimport _createClass from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _classCallCheck from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _inherits from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _createSuper from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createSuper.js\";\nimport _wrapNativeSuper from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\wrapNativeSuper.js\";\nimport { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\n\nvar TransportError = /*#__PURE__*/function (_Error) {\n  _inherits(TransportError, _Error);\n\n  var _super = _createSuper(TransportError);\n\n  function TransportError(reason, description, context) {\n    var _this;\n\n    _classCallCheck(this, TransportError);\n\n    _this = _super.call(this, reason);\n    _this.description = description;\n    _this.context = context;\n    _this.type = \"TransportError\";\n    return _this;\n  }\n\n  return _createClass(TransportError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexport var Transport = /*#__PURE__*/function (_Emitter) {\n  _inherits(Transport, _Emitter);\n\n  var _super2 = _createSuper(Transport);\n\n  /**\r\n   * Transport abstract constructor.\r\n   *\r\n   * @param {Object} options.\r\n   * @api private\r\n   */\n  function Transport(opts) {\n    var _this2;\n\n    _classCallCheck(this, Transport);\n\n    _this2 = _super2.call(this);\n    _this2.writable = false;\n    installTimerFunctions(_assertThisInitialized(_this2), opts);\n    _this2.opts = opts;\n    _this2.query = opts.query;\n    _this2.readyState = \"\";\n    _this2.socket = opts.socket;\n    return _this2;\n  }\n  /**\r\n   * Emits an error.\r\n   *\r\n   * @param {String} reason\r\n   * @param description\r\n   * @param context - the error context\r\n   * @return {Transport} for chaining\r\n   * @api protected\r\n   */\n\n\n  _createClass(Transport, [{\n    key: \"onError\",\n    value: function onError(reason, description, context) {\n      _get(_getPrototypeOf(Transport.prototype), \"emitReserved\", this).call(this, \"error\", new TransportError(reason, description, context));\n\n      return this;\n    }\n    /**\r\n     * Opens the transport.\r\n     *\r\n     * @api public\r\n     */\n\n  }, {\n    key: \"open\",\n    value: function open() {\n      if (\"closed\" === this.readyState || \"\" === this.readyState) {\n        this.readyState = \"opening\";\n        this.doOpen();\n      }\n\n      return this;\n    }\n    /**\r\n     * Closes the transport.\r\n     *\r\n     * @api public\r\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n        this.doClose();\n        this.onClose();\n      }\n\n      return this;\n    }\n    /**\r\n     * Sends multiple packets.\r\n     *\r\n     * @param {Array} packets\r\n     * @api public\r\n     */\n\n  }, {\n    key: \"send\",\n    value: function send(packets) {\n      if (\"open\" === this.readyState) {\n        this.write(packets);\n      } else {// this might happen if the transport was silently closed in the beforeunload event handler\n      }\n    }\n    /**\r\n     * Called upon open\r\n     *\r\n     * @api protected\r\n     */\n\n  }, {\n    key: \"onOpen\",\n    value: function onOpen() {\n      this.readyState = \"open\";\n      this.writable = true;\n\n      _get(_getPrototypeOf(Transport.prototype), \"emitReserved\", this).call(this, \"open\");\n    }\n    /**\r\n     * Called with data.\r\n     *\r\n     * @param {String} data\r\n     * @api protected\r\n     */\n\n  }, {\n    key: \"onData\",\n    value: function onData(data) {\n      var packet = decodePacket(data, this.socket.binaryType);\n      this.onPacket(packet);\n    }\n    /**\r\n     * Called with a decoded packet.\r\n     *\r\n     * @api protected\r\n     */\n\n  }, {\n    key: \"onPacket\",\n    value: function onPacket(packet) {\n      _get(_getPrototypeOf(Transport.prototype), \"emitReserved\", this).call(this, \"packet\", packet);\n    }\n    /**\r\n     * Called upon close.\r\n     *\r\n     * @api protected\r\n     */\n\n  }, {\n    key: \"onClose\",\n    value: function onClose(details) {\n      this.readyState = \"closed\";\n\n      _get(_getPrototypeOf(Transport.prototype), \"emitReserved\", this).call(this, \"close\", details);\n    }\n  }]);\n\n  return Transport;\n}(Emitter);","map":{"version":3,"sources":["D:/fl-carla/node_modules/engine.io-client/build/esm/transport.js"],"names":["decodePacket","Emitter","installTimerFunctions","TransportError","reason","description","context","type","Error","Transport","opts","writable","query","readyState","socket","doOpen","doClose","onClose","packets","write","data","packet","binaryType","onPacket","details"],"mappings":";;;;;;;;AAAA,SAASA,YAAT,QAA6B,kBAA7B;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,SAASC,qBAAT,QAAsC,WAAtC;;IACMC,c;;;;;AACF,0BAAYC,MAAZ,EAAoBC,WAApB,EAAiCC,OAAjC,EAA0C;AAAA;;AAAA;;AACtC,8BAAMF,MAAN;AACA,UAAKC,WAAL,GAAmBA,WAAnB;AACA,UAAKC,OAAL,GAAeA,OAAf;AACA,UAAKC,IAAL,GAAY,gBAAZ;AAJsC;AAKzC;;;iCANwBC,K;;AAQ7B,WAAaC,SAAb;AAAA;;AAAA;;AACI;AACJ;AACA;AACA;AACA;AACA;AACI,qBAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AACd;AACA,WAAKC,QAAL,GAAgB,KAAhB;AACAT,IAAAA,qBAAqB,iCAAOQ,IAAP,CAArB;AACA,WAAKA,IAAL,GAAYA,IAAZ;AACA,WAAKE,KAAL,GAAaF,IAAI,CAACE,KAAlB;AACA,WAAKC,UAAL,GAAkB,EAAlB;AACA,WAAKC,MAAL,GAAcJ,IAAI,CAACI,MAAnB;AAPc;AAQjB;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAxBA;AAAA;AAAA,WAyBI,iBAAQV,MAAR,EAAgBC,WAAhB,EAA6BC,OAA7B,EAAsC;AAClC,kFAAmB,OAAnB,EAA4B,IAAIH,cAAJ,CAAmBC,MAAnB,EAA2BC,WAA3B,EAAwCC,OAAxC,CAA5B;;AACA,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;AAjCA;AAAA;AAAA,WAkCI,gBAAO;AACH,UAAI,aAAa,KAAKO,UAAlB,IAAgC,OAAO,KAAKA,UAAhD,EAA4D;AACxD,aAAKA,UAAL,GAAkB,SAAlB;AACA,aAAKE,MAAL;AACH;;AACD,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;AA7CA;AAAA;AAAA,WA8CI,iBAAQ;AACJ,UAAI,cAAc,KAAKF,UAAnB,IAAiC,WAAW,KAAKA,UAArD,EAAiE;AAC7D,aAAKG,OAAL;AACA,aAAKC,OAAL;AACH;;AACD,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;AA1DA;AAAA;AAAA,WA2DI,cAAKC,OAAL,EAAc;AACV,UAAI,WAAW,KAAKL,UAApB,EAAgC;AAC5B,aAAKM,KAAL,CAAWD,OAAX;AACH,OAFD,MAGK,CACD;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;AAvEA;AAAA;AAAA,WAwEI,kBAAS;AACL,WAAKL,UAAL,GAAkB,MAAlB;AACA,WAAKF,QAAL,GAAgB,IAAhB;;AACA,kFAAmB,MAAnB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;AAlFA;AAAA;AAAA,WAmFI,gBAAOS,IAAP,EAAa;AACT,UAAMC,MAAM,GAAGrB,YAAY,CAACoB,IAAD,EAAO,KAAKN,MAAL,CAAYQ,UAAnB,CAA3B;AACA,WAAKC,QAAL,CAAcF,MAAd;AACH;AACD;AACJ;AACA;AACA;AACA;;AA3FA;AAAA;AAAA,WA4FI,kBAASA,MAAT,EAAiB;AACb,kFAAmB,QAAnB,EAA6BA,MAA7B;AACH;AACD;AACJ;AACA;AACA;AACA;;AAnGA;AAAA;AAAA,WAoGI,iBAAQG,OAAR,EAAiB;AACb,WAAKX,UAAL,GAAkB,QAAlB;;AACA,kFAAmB,OAAnB,EAA4BW,OAA5B;AACH;AAvGL;;AAAA;AAAA,EAA+BvB,OAA/B","sourcesContent":["import { decodePacket } from \"engine.io-parser\";\r\nimport { Emitter } from \"@socket.io/component-emitter\";\r\nimport { installTimerFunctions } from \"./util.js\";\r\nclass TransportError extends Error {\r\n    constructor(reason, description, context) {\r\n        super(reason);\r\n        this.description = description;\r\n        this.context = context;\r\n        this.type = \"TransportError\";\r\n    }\r\n}\r\nexport class Transport extends Emitter {\r\n    /**\r\n     * Transport abstract constructor.\r\n     *\r\n     * @param {Object} options.\r\n     * @api private\r\n     */\r\n    constructor(opts) {\r\n        super();\r\n        this.writable = false;\r\n        installTimerFunctions(this, opts);\r\n        this.opts = opts;\r\n        this.query = opts.query;\r\n        this.readyState = \"\";\r\n        this.socket = opts.socket;\r\n    }\r\n    /**\r\n     * Emits an error.\r\n     *\r\n     * @param {String} reason\r\n     * @param description\r\n     * @param context - the error context\r\n     * @return {Transport} for chaining\r\n     * @api protected\r\n     */\r\n    onError(reason, description, context) {\r\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\r\n        return this;\r\n    }\r\n    /**\r\n     * Opens the transport.\r\n     *\r\n     * @api public\r\n     */\r\n    open() {\r\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\r\n            this.readyState = \"opening\";\r\n            this.doOpen();\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Closes the transport.\r\n     *\r\n     * @api public\r\n     */\r\n    close() {\r\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\r\n            this.doClose();\r\n            this.onClose();\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Sends multiple packets.\r\n     *\r\n     * @param {Array} packets\r\n     * @api public\r\n     */\r\n    send(packets) {\r\n        if (\"open\" === this.readyState) {\r\n            this.write(packets);\r\n        }\r\n        else {\r\n            // this might happen if the transport was silently closed in the beforeunload event handler\r\n        }\r\n    }\r\n    /**\r\n     * Called upon open\r\n     *\r\n     * @api protected\r\n     */\r\n    onOpen() {\r\n        this.readyState = \"open\";\r\n        this.writable = true;\r\n        super.emitReserved(\"open\");\r\n    }\r\n    /**\r\n     * Called with data.\r\n     *\r\n     * @param {String} data\r\n     * @api protected\r\n     */\r\n    onData(data) {\r\n        const packet = decodePacket(data, this.socket.binaryType);\r\n        this.onPacket(packet);\r\n    }\r\n    /**\r\n     * Called with a decoded packet.\r\n     *\r\n     * @api protected\r\n     */\r\n    onPacket(packet) {\r\n        super.emitReserved(\"packet\", packet);\r\n    }\r\n    /**\r\n     * Called upon close.\r\n     *\r\n     * @api protected\r\n     */\r\n    onClose(details) {\r\n        this.readyState = \"closed\";\r\n        super.emitReserved(\"close\", details);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}