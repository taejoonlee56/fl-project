{"ast":null,"code":"var _jsxFileName = \"D:\\\\fl-carla\\\\src\\\\components\\\\profile\\\\profileCard\\\\profileFormNav\\\\nav\\\\PersonalInfo\\\\PhoneItem\\\\PhoneItem.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { isValidPhoneNumber } from 'react-phone-number-input';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport * as S from './PhoneItem.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var PhoneItem = function PhoneItem(_ref) {\n  _s();\n\n  var required = _ref.required,\n      onClick = _ref.onClick,\n      verified = _ref.verified;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  return /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n    name: \"phone\",\n    $isSuccess: verified,\n    $successText: t('profile.nav.personalInfo.verified'),\n    label: t('common.phone'),\n    rules: [{\n      required: required,\n      message: t('common.requiredField')\n    }, function () {\n      return {\n        validator: function validator(_, value) {\n          if (!value || isValidPhoneNumber(value)) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject(new Error(t('profile.nav.personalInfo.wrongNumber')));\n        }\n      };\n    }],\n    children: /*#__PURE__*/_jsxDEV(S.PhoneNumberInput, {\n      disabled: verified,\n      className: \"ant-input\",\n      onClick: onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PhoneItem, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = PhoneItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhoneItem\");","map":{"version":3,"sources":["D:/fl-carla/src/components/profile/profileCard/profileFormNav/nav/PersonalInfo/PhoneItem/PhoneItem.tsx"],"names":["React","useTranslation","isValidPhoneNumber","BaseButtonsForm","S","PhoneItem","required","onClick","verified","t","message","validator","_","value","Promise","resolve","reject","Error"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,kBAAT,QAAmC,0BAAnC;AACA,SAASC,eAAT,QAAgC,8DAAhC;AACA,OAAO,KAAKC,CAAZ,MAAmB,oBAAnB;;AAQA,OAAO,IAAMC,SAAoC,GAAG,SAAvCA,SAAuC,OAAqC;AAAA;;AAAA,MAAlCC,QAAkC,QAAlCA,QAAkC;AAAA,MAAxBC,OAAwB,QAAxBA,OAAwB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACvF,wBAAcP,cAAc,EAA5B;AAAA,MAAQQ,CAAR,mBAAQA,CAAR;;AAEA,sBACE,QAAC,eAAD,CAAiB,IAAjB;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,UAAU,EAAED,QAFd;AAGE,IAAA,YAAY,EAAEC,CAAC,CAAC,mCAAD,CAHjB;AAIE,IAAA,KAAK,EAAEA,CAAC,CAAC,cAAD,CAJV;AAKE,IAAA,KAAK,EAAE,CACL;AAAEH,MAAAA,QAAQ,EAARA,QAAF;AAAYI,MAAAA,OAAO,EAAED,CAAC,CAAC,sBAAD;AAAtB,KADK,EAEL;AAAA,aAAO;AACLE,QAAAA,SADK,qBACKC,CADL,EACQC,KADR,EACe;AAClB,cAAI,CAACA,KAAD,IAAUX,kBAAkB,CAACW,KAAD,CAAhC,EAAyC;AACvC,mBAAOC,OAAO,CAACC,OAAR,EAAP;AACD;;AACD,iBAAOD,OAAO,CAACE,MAAR,CAAe,IAAIC,KAAJ,CAAUR,CAAC,CAAC,sCAAD,CAAX,CAAf,CAAP;AACD;AANI,OAAP;AAAA,KAFK,CALT;AAAA,2BAiBE,QAAC,CAAD,CAAG,gBAAH;AAAoB,MAAA,QAAQ,EAAED,QAA9B;AAAwC,MAAA,SAAS,EAAC,WAAlD;AAA8D,MAAA,OAAO,EAAED;AAAvE;AAAA;AAAA;AAAA;AAAA;AAjBF;AAAA;AAAA;AAAA;AAAA,WADF;AAqBD,CAxBM;;GAAMF,S;UACGJ,c;;;KADHI,S","sourcesContent":["import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { isValidPhoneNumber } from 'react-phone-number-input';\r\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\r\nimport * as S from './PhoneItem.styles';\r\n\r\ninterface PhoneItemsProps {\r\n  required?: boolean;\r\n  onClick?: () => void;\r\n  verified?: boolean;\r\n}\r\n\r\nexport const PhoneItem: React.FC<PhoneItemsProps> = ({ required, onClick, verified }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <BaseButtonsForm.Item\r\n      name=\"phone\"\r\n      $isSuccess={verified}\r\n      $successText={t('profile.nav.personalInfo.verified')}\r\n      label={t('common.phone')}\r\n      rules={[\r\n        { required, message: t('common.requiredField') },\r\n        () => ({\r\n          validator(_, value) {\r\n            if (!value || isValidPhoneNumber(value)) {\r\n              return Promise.resolve();\r\n            }\r\n            return Promise.reject(new Error(t('profile.nav.personalInfo.wrongNumber')));\r\n          },\r\n        }),\r\n      ]}\r\n    >\r\n      <S.PhoneNumberInput disabled={verified} className=\"ant-input\" onClick={onClick} />\r\n    </BaseButtonsForm.Item>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}