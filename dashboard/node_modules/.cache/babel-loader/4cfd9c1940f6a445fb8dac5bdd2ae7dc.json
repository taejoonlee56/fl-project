{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _get = require(\"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/get.js\").default;\n\nvar _getPrototypeOf = require(\"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\n\nvar _inherits = require(\"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JSONP = void 0;\n\nvar polling_1 = require(\"./polling\");\n\nvar qs = require(\"querystring\");\n\nvar rDoubleSlashes = /\\\\\\\\n/g;\nvar rSlashes = /(\\\\)?\\\\n/g;\n\nvar JSONP = /*#__PURE__*/function (_polling_1$Polling) {\n  _inherits(JSONP, _polling_1$Polling);\n\n  var _super = _createSuper(JSONP);\n\n  /**\n   * JSON-P polling transport.\n   *\n   * @api public\n   */\n  function JSONP(req) {\n    var _this;\n\n    _classCallCheck(this, JSONP);\n\n    _this = _super.call(this, req);\n    _this.head = \"___eio[\" + (req._query.j || \"\").replace(/[^0-9]/g, \"\") + \"](\";\n    _this.foot = \");\";\n    return _this;\n  }\n  /**\n   * Handles incoming data.\n   * Due to a bug in \\n handling by browsers, we expect a escaped string.\n   *\n   * @api private\n   */\n\n\n  _createClass(JSONP, [{\n    key: \"onData\",\n    value: function onData(data) {\n      // we leverage the qs module so that we get built-in DoS protection\n      // and the fast alternative to decodeURIComponent\n      data = qs.parse(data).d;\n\n      if (\"string\" === typeof data) {\n        // client will send already escaped newlines as \\\\\\\\n and newlines as \\\\n\n        // \\\\n must be replaced with \\n and \\\\\\\\n with \\\\n\n        data = data.replace(rSlashes, function (match, slashes) {\n          return slashes ? match : \"\\n\";\n        });\n\n        _get(_getPrototypeOf(JSONP.prototype), \"onData\", this).call(this, data.replace(rDoubleSlashes, \"\\\\n\"));\n      }\n    }\n    /**\n     * Performs the write.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"doWrite\",\n    value: function doWrite(data, options, callback) {\n      // we must output valid javascript, not valid json\n      // see: http://timelessrepo.com/json-isnt-a-javascript-subset\n      var js = JSON.stringify(data).replace(/\\u2028/g, \"\\\\u2028\").replace(/\\u2029/g, \"\\\\u2029\"); // prepare response\n\n      data = this.head + js + this.foot;\n\n      _get(_getPrototypeOf(JSONP.prototype), \"doWrite\", this).call(this, data, options, callback);\n    }\n  }]);\n\n  return JSONP;\n}(polling_1.Polling);\n\nexports.JSONP = JSONP;","map":{"version":3,"sources":["/home/tj/fl-carla/node_modules/engine.io/build/transports/polling-jsonp.js"],"names":["Object","defineProperty","exports","value","JSONP","polling_1","require","qs","rDoubleSlashes","rSlashes","req","head","_query","j","replace","foot","data","parse","d","match","slashes","options","callback","js","JSON","stringify","Polling"],"mappings":"AAAA;;;;;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,KAAR,GAAgB,KAAK,CAArB;;AACA,IAAMC,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAAC,aAAD,CAAlB;;AACA,IAAME,cAAc,GAAG,QAAvB;AACA,IAAMC,QAAQ,GAAG,WAAjB;;IACML,K;;;;;AACF;AACJ;AACA;AACA;AACA;AACI,iBAAYM,GAAZ,EAAiB;AAAA;;AAAA;;AACb,8BAAMA,GAAN;AACA,UAAKC,IAAL,GAAY,YAAY,CAACD,GAAG,CAACE,MAAJ,CAAWC,CAAX,IAAgB,EAAjB,EAAqBC,OAArB,CAA6B,SAA7B,EAAwC,EAAxC,CAAZ,GAA0D,IAAtE;AACA,UAAKC,IAAL,GAAY,IAAZ;AAHa;AAIhB;AACD;AACJ;AACA;AACA;AACA;AACA;;;;;WACI,gBAAOC,IAAP,EAAa;AACT;AACA;AACAA,MAAAA,IAAI,GAAGT,EAAE,CAACU,KAAH,CAASD,IAAT,EAAeE,CAAtB;;AACA,UAAI,aAAa,OAAOF,IAAxB,EAA8B;AAC1B;AACA;AACAA,QAAAA,IAAI,GAAGA,IAAI,CAACF,OAAL,CAAaL,QAAb,EAAuB,UAAUU,KAAV,EAAiBC,OAAjB,EAA0B;AACpD,iBAAOA,OAAO,GAAGD,KAAH,GAAW,IAAzB;AACH,SAFM,CAAP;;AAGA,0EAAaH,IAAI,CAACF,OAAL,CAAaN,cAAb,EAA6B,KAA7B,CAAb;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;WACI,iBAAQQ,IAAR,EAAcK,OAAd,EAAuBC,QAAvB,EAAiC;AAC7B;AACA;AACA,UAAMC,EAAE,GAAGC,IAAI,CAACC,SAAL,CAAeT,IAAf,EACNF,OADM,CACE,SADF,EACa,SADb,EAENA,OAFM,CAEE,SAFF,EAEa,SAFb,CAAX,CAH6B,CAM7B;;AACAE,MAAAA,IAAI,GAAG,KAAKL,IAAL,GAAYY,EAAZ,GAAiB,KAAKR,IAA7B;;AACA,yEAAcC,IAAd,EAAoBK,OAApB,EAA6BC,QAA7B;AACH;;;;EA5CejB,SAAS,CAACqB,O;;AA8C9BxB,OAAO,CAACE,KAAR,GAAgBA,KAAhB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JSONP = void 0;\nconst polling_1 = require(\"./polling\");\nconst qs = require(\"querystring\");\nconst rDoubleSlashes = /\\\\\\\\n/g;\nconst rSlashes = /(\\\\)?\\\\n/g;\nclass JSONP extends polling_1.Polling {\n    /**\n     * JSON-P polling transport.\n     *\n     * @api public\n     */\n    constructor(req) {\n        super(req);\n        this.head = \"___eio[\" + (req._query.j || \"\").replace(/[^0-9]/g, \"\") + \"](\";\n        this.foot = \");\";\n    }\n    /**\n     * Handles incoming data.\n     * Due to a bug in \\n handling by browsers, we expect a escaped string.\n     *\n     * @api private\n     */\n    onData(data) {\n        // we leverage the qs module so that we get built-in DoS protection\n        // and the fast alternative to decodeURIComponent\n        data = qs.parse(data).d;\n        if (\"string\" === typeof data) {\n            // client will send already escaped newlines as \\\\\\\\n and newlines as \\\\n\n            // \\\\n must be replaced with \\n and \\\\\\\\n with \\\\n\n            data = data.replace(rSlashes, function (match, slashes) {\n                return slashes ? match : \"\\n\";\n            });\n            super.onData(data.replace(rDoubleSlashes, \"\\\\n\"));\n        }\n    }\n    /**\n     * Performs the write.\n     *\n     * @api private\n     */\n    doWrite(data, options, callback) {\n        // we must output valid javascript, not valid json\n        // see: http://timelessrepo.com/json-isnt-a-javascript-subset\n        const js = JSON.stringify(data)\n            .replace(/\\u2028/g, \"\\\\u2028\")\n            .replace(/\\u2029/g, \"\\\\u2029\");\n        // prepare response\n        data = this.head + js + this.foot;\n        super.doWrite(data, options, callback);\n    }\n}\nexports.JSONP = JSONP;\n"]},"metadata":{},"sourceType":"script"}