{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\taggedTemplateLiteral.js\";\n\nvar _jsxFileName = \"D:\\\\fl-carla\\\\src\\\\components\\\\common\\\\Burger\\\\BurgerIcon.tsx\",\n    _this = this,\n    _templateObject,\n    _templateObject2;\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Burger = function Burger(_ref) {\n  var className = _ref.className,\n      onClick = _ref.onClick;\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"280 215 400 220\",\n    fill: \"currentColor\",\n    className: className,\n    onClick: onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M300,220 C300,220 520,220 540,220 C740,220 640,540 520,420 C440,340 300,200 300,200\",\n      id: \"top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M300,320 L540,320\",\n      id: \"middle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M300,210 C300,210 520,210 540,210 C740,210 640,530 520,410 C440,330 300,190 300,190\",\n      id: \"bottom\",\n      transform: \"translate(480, 320) scale(1, -1) translate(-480, -318) \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, _this);\n};\n_c = Burger;\nexport var BurgerIcon = styled(Burger)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  cursor: pointer;\\n  transform: translate3d(0, 0, 0);\\n\\n  path {\\n    fill: none;\\n    transition: stroke-dashoffset 0.5s cubic-bezier(0.25, -0.25, 0.75, 1.25),\\n      stroke-dasharray 0.5s cubic-bezier(0.25, -0.25, 0.75, 1.25);\\n    stroke-width: 30px;\\n    stroke-linecap: round;\\n    stroke: currentColor;\\n    stroke-dashoffset: 0;\\n\\n    &#top,\\n    &#bottom {\\n      stroke-dasharray: 240px 950px;\\n    }\\n    &#middle {\\n      stroke-dasharray: 240px 240px;\\n    }\\n\\n    \", \"\\n  }\\n\"])), function (props) {\n  return props.isCross && css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n        &#top,\\n        &#bottom {\\n          stroke-dashoffset: -650px;\\n        }\\n        &#middle {\\n          stroke-dashoffset: -115px;\\n          stroke-dasharray: 1px 220px;\\n        }\\n      \"])));\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"Burger\");","map":{"version":3,"sources":["D:/fl-carla/src/components/common/Burger/BurgerIcon.tsx"],"names":["React","styled","css","Burger","className","onClick","BurgerIcon","props","isCross"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;;AAMA,OAAO,IAAMC,MAA6B,GAAG,SAAhCA,MAAgC;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,MAAcC,OAAd,QAAcA,OAAd;AAAA,sBAC3C;AAAK,IAAA,KAAK,EAAC,KAAX;AAAiB,IAAA,MAAM,EAAC,KAAxB;AAA8B,IAAA,OAAO,EAAC,iBAAtC;AAAwD,IAAA,IAAI,EAAC,cAA7D;AAA4E,IAAA,SAAS,EAAED,SAAvF;AAAkG,IAAA,OAAO,EAAEC,OAA3G;AAAA,4BACE;AAAM,MAAA,CAAC,EAAC,qFAAR;AAA8F,MAAA,EAAE,EAAC;AAAjG;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAM,MAAA,CAAC,EAAC,mBAAR;AAA4B,MAAA,EAAE,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AACE,MAAA,CAAC,EAAC,qFADJ;AAEE,MAAA,EAAE,EAAC,QAFL;AAGE,MAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA;AAAA,WAD2C;AAAA,CAAtC;KAAMF,M;AAYb,OAAO,IAAMG,UAAU,GAAGL,MAAM,CAACE,MAAD,CAAT,ojBAqBjB,UAACI,KAAD;AAAA,SACAA,KAAK,CAACC,OAAN,IACAN,GADA,iRADA;AAAA,CArBiB,CAAhB","sourcesContent":["import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\ninterface BurgerProps {\r\n  className?: string;\r\n  onClick: () => void;\r\n}\r\nexport const Burger: React.FC<BurgerProps> = ({ className, onClick }) => (\r\n  <svg width=\"1em\" height=\"1em\" viewBox=\"280 215 400 220\" fill=\"currentColor\" className={className} onClick={onClick}>\r\n    <path d=\"M300,220 C300,220 520,220 540,220 C740,220 640,540 520,420 C440,340 300,200 300,200\" id=\"top\" />\r\n    <path d=\"M300,320 L540,320\" id=\"middle\" />\r\n    <path\r\n      d=\"M300,210 C300,210 520,210 540,210 C740,210 640,530 520,410 C440,330 300,190 300,190\"\r\n      id=\"bottom\"\r\n      transform=\"translate(480, 320) scale(1, -1) translate(-480, -318) \"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport const BurgerIcon = styled(Burger)<{ isCross: boolean }>`\r\n  cursor: pointer;\r\n  transform: translate3d(0, 0, 0);\r\n\r\n  path {\r\n    fill: none;\r\n    transition: stroke-dashoffset 0.5s cubic-bezier(0.25, -0.25, 0.75, 1.25),\r\n      stroke-dasharray 0.5s cubic-bezier(0.25, -0.25, 0.75, 1.25);\r\n    stroke-width: 30px;\r\n    stroke-linecap: round;\r\n    stroke: currentColor;\r\n    stroke-dashoffset: 0;\r\n\r\n    &#top,\r\n    &#bottom {\r\n      stroke-dasharray: 240px 950px;\r\n    }\r\n    &#middle {\r\n      stroke-dasharray: 240px 240px;\r\n    }\r\n\r\n    ${(props) =>\r\n      props.isCross &&\r\n      css`\r\n        &#top,\r\n        &#bottom {\r\n          stroke-dashoffset: -650px;\r\n        }\r\n        &#middle {\r\n          stroke-dashoffset: -115px;\r\n          stroke-dasharray: 1px 220px;\r\n        }\r\n      `}\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}