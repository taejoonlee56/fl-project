{"ast":null,"code":"import _toConsumableArray from \"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/tj/fl-carla/src/components/tables/editableTable/EditableTable.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"/home/tj/fl-carla/node_modules/@babel/runtime/regenerator/index.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Popconfirm, Form, Space } from 'antd';\nimport { Table } from 'components/common/Table/Table';\nimport { getEditableTableData } from 'api/table.api';\nimport { EditableCell } from './EditableCell';\nimport { Button } from 'components/common/buttons/Button/Button';\nimport { useTranslation } from 'react-i18next';\nimport { useMounted } from '@app/hooks/useMounted';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar initialPagination = {\n  current: 1,\n  pageSize: 4\n};\nexport var EditableTable = function EditableTable() {\n  _s();\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _useState = useState({\n    data: [],\n    pagination: initialPagination,\n    loading: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      tableData = _useState2[0],\n      setTableData = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      editingKey = _useState4[0],\n      setEditingKey = _useState4[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useMounted = useMounted(),\n      isMounted = _useMounted.isMounted;\n\n  var fetch = useCallback(function (pagination) {\n    setTableData(function (tableData) {\n      return _objectSpread(_objectSpread({}, tableData), {}, {\n        loading: true\n      });\n    });\n    getEditableTableData(pagination).then(function (res) {\n      if (isMounted.current) {\n        setTableData({\n          data: res.data,\n          pagination: res.pagination,\n          loading: false\n        });\n      }\n    });\n  }, [isMounted]);\n  useEffect(function () {\n    fetch(initialPagination);\n  }, [fetch]);\n\n  var handleTableChange = function handleTableChange(pagination) {\n    fetch(pagination);\n    cancel();\n  };\n\n  var isEditing = function isEditing(record) {\n    return record.key === editingKey;\n  };\n\n  var edit = function edit(record) {\n    form.setFieldsValue(_objectSpread({\n      name: '',\n      age: '',\n      address: ''\n    }, record));\n    setEditingKey(record.key);\n  };\n\n  var cancel = function cancel() {\n    setEditingKey(0);\n  };\n\n  var save = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(key) {\n      var row, newData, index, item;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return form.validateFields();\n\n            case 3:\n              row = _context.sent;\n              newData = _toConsumableArray(tableData.data);\n              index = newData.findIndex(function (item) {\n                return key === item.key;\n              });\n\n              if (index > -1) {\n                item = newData[index];\n                newData.splice(index, 1, _objectSpread(_objectSpread({}, item), row));\n              } else {\n                newData.push(row);\n              }\n\n              setTableData(_objectSpread(_objectSpread({}, tableData), {}, {\n                data: newData\n              }));\n              setEditingKey(0);\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.log('Validate Failed:', _context.t0);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n\n    return function save(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleDeleteRow = function handleDeleteRow(rowId) {\n    setTableData(_objectSpread(_objectSpread({}, tableData), {}, {\n      data: tableData.data.filter(function (item) {\n        return item.key !== rowId;\n      })\n    }));\n  };\n\n  var columns = [{\n    title: t('common.name'),\n    dataIndex: 'name',\n    width: '25%',\n    editable: true\n  }, {\n    title: t('common.age'),\n    dataIndex: 'age',\n    width: '15%',\n    editable: true\n  }, {\n    title: t('common.address'),\n    dataIndex: 'address',\n    width: '30%',\n    editable: true\n  }, {\n    title: t('tables.actions'),\n    dataIndex: 'actions',\n    width: '15%',\n    render: function render(text, record) {\n      var editable = isEditing(record);\n      return /*#__PURE__*/_jsxDEV(Space, {\n        children: editable ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: function onClick() {\n              return save(record.key);\n            },\n            children: t('common.save')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n            title: t('tables.cancelInfo'),\n            onConfirm: cancel,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"ghost\",\n              children: t('common.cancel')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"ghost\",\n            disabled: editingKey !== 0,\n            onClick: function onClick() {\n              return edit(record);\n            },\n            children: t('common.edit')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"default\",\n            danger: true,\n            onClick: function onClick() {\n              return handleDeleteRow(record.key);\n            },\n            children: t('tables.delete')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, _this);\n    }\n  }];\n  var mergedColumns = columns.map(function (col) {\n    if (!col.editable) {\n      return col;\n    }\n\n    return _objectSpread(_objectSpread({}, col), {}, {\n      onCell: function onCell(record) {\n        return {\n          record: record,\n          inputType: col.dataIndex === 'age' ? 'number' : 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: isEditing(record)\n        };\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    component: false,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      components: {\n        body: {\n          cell: EditableCell\n        }\n      },\n      bordered: true,\n      dataSource: tableData.data,\n      columns: mergedColumns,\n      rowClassName: \"editable-row\",\n      pagination: _objectSpread(_objectSpread({}, tableData.pagination), {}, {\n        onChange: cancel\n      }),\n      onChange: handleTableChange,\n      loading: tableData.loading,\n      scroll: {\n        x: 800\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(EditableTable, \"lntycBS6g5QY5DuA1EcEjg2AeGs=\", false, function () {\n  return [Form.useForm, useTranslation, useMounted];\n});\n\n_c = EditableTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditableTable\");","map":{"version":3,"sources":["/home/tj/fl-carla/src/components/tables/editableTable/EditableTable.tsx"],"names":["React","useState","useEffect","useCallback","Popconfirm","Form","Space","Table","getEditableTableData","EditableCell","Button","useTranslation","useMounted","initialPagination","current","pageSize","EditableTable","useForm","form","data","pagination","loading","tableData","setTableData","editingKey","setEditingKey","t","isMounted","fetch","then","res","handleTableChange","cancel","isEditing","record","key","edit","setFieldsValue","name","age","address","save","validateFields","row","newData","index","findIndex","item","splice","push","console","log","handleDeleteRow","rowId","filter","columns","title","dataIndex","width","editable","render","text","mergedColumns","map","col","onCell","inputType","editing","body","cell","onChange","x"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Popconfirm, Form, TablePaginationConfig, Space } from 'antd';\nimport { Table } from 'components/common/Table/Table';\nimport { getEditableTableData, BasicTableRow, Pagination } from 'api/table.api';\nimport { EditableCell } from './EditableCell';\nimport { Button } from 'components/common/buttons/Button/Button';\nimport { useTranslation } from 'react-i18next';\nimport { useMounted } from '@app/hooks/useMounted';\n\nconst initialPagination: Pagination = {\n  current: 1,\n  pageSize: 4,\n};\n\nexport const EditableTable: React.FC = () => {\n  const [form] = Form.useForm();\n  const [tableData, setTableData] = useState<{ data: BasicTableRow[]; pagination: Pagination; loading: boolean }>({\n    data: [],\n    pagination: initialPagination,\n    loading: false,\n  });\n  const [editingKey, setEditingKey] = useState(0);\n  const { t } = useTranslation();\n  const { isMounted } = useMounted();\n\n  const fetch = useCallback(\n    (pagination: Pagination) => {\n      setTableData((tableData) => ({ ...tableData, loading: true }));\n      getEditableTableData(pagination).then((res) => {\n        if (isMounted.current) {\n          setTableData({ data: res.data, pagination: res.pagination, loading: false });\n        }\n      });\n    },\n    [isMounted],\n  );\n\n  useEffect(() => {\n    fetch(initialPagination);\n  }, [fetch]);\n\n  const handleTableChange = (pagination: TablePaginationConfig) => {\n    fetch(pagination);\n    cancel();\n  };\n\n  const isEditing = (record: BasicTableRow) => record.key === editingKey;\n\n  const edit = (record: Partial<BasicTableRow> & { key: React.Key }) => {\n    form.setFieldsValue({ name: '', age: '', address: '', ...record });\n    setEditingKey(record.key);\n  };\n\n  const cancel = () => {\n    setEditingKey(0);\n  };\n\n  const save = async (key: React.Key) => {\n    try {\n      const row = (await form.validateFields()) as BasicTableRow;\n\n      const newData = [...tableData.data];\n      const index = newData.findIndex((item) => key === item.key);\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, {\n          ...item,\n          ...row,\n        });\n      } else {\n        newData.push(row);\n      }\n      setTableData({ ...tableData, data: newData });\n      setEditingKey(0);\n    } catch (errInfo) {\n      console.log('Validate Failed:', errInfo);\n    }\n  };\n\n  const handleDeleteRow = (rowId: number) => {\n    setTableData({ ...tableData, data: tableData.data.filter((item) => item.key !== rowId) });\n  };\n\n  const columns = [\n    {\n      title: t('common.name'),\n      dataIndex: 'name',\n      width: '25%',\n      editable: true,\n    },\n    {\n      title: t('common.age'),\n      dataIndex: 'age',\n      width: '15%',\n      editable: true,\n    },\n    {\n      title: t('common.address'),\n      dataIndex: 'address',\n      width: '30%',\n      editable: true,\n    },\n    {\n      title: t('tables.actions'),\n      dataIndex: 'actions',\n      width: '15%',\n      render: (text: string, record: BasicTableRow) => {\n        const editable = isEditing(record);\n        return (\n          <Space>\n            {editable ? (\n              <>\n                <Button type=\"primary\" onClick={() => save(record.key)}>\n                  {t('common.save')}\n                </Button>\n                <Popconfirm title={t('tables.cancelInfo')} onConfirm={cancel}>\n                  <Button type=\"ghost\">{t('common.cancel')}</Button>\n                </Popconfirm>\n              </>\n            ) : (\n              <>\n                <Button type=\"ghost\" disabled={editingKey !== 0} onClick={() => edit(record)}>\n                  {t('common.edit')}\n                </Button>\n                <Button type=\"default\" danger onClick={() => handleDeleteRow(record.key)}>\n                  {t('tables.delete')}\n                </Button>\n              </>\n            )}\n          </Space>\n        );\n      },\n    },\n  ];\n\n  const mergedColumns = columns.map((col) => {\n    if (!col.editable) {\n      return col;\n    }\n    return {\n      ...col,\n      onCell: (record: BasicTableRow) => ({\n        record,\n        inputType: col.dataIndex === 'age' ? 'number' : 'text',\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record),\n      }),\n    };\n  });\n\n  return (\n    <Form form={form} component={false}>\n      <Table\n        components={{\n          body: {\n            cell: EditableCell,\n          },\n        }}\n        bordered\n        dataSource={tableData.data}\n        columns={mergedColumns}\n        rowClassName=\"editable-row\"\n        pagination={{\n          ...tableData.pagination,\n          onChange: cancel,\n        }}\n        onChange={handleTableChange}\n        loading={tableData.loading}\n        scroll={{ x: 800 }}\n      />\n    </Form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}