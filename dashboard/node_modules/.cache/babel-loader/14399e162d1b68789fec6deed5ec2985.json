{"ast":null,"code":"var _jsxFileName = \"D:\\\\fl-carla\\\\src\\\\App.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { ConfigProvider } from 'antd';\nimport deDe from 'antd/lib/locale/de_DE';\nimport enUS from 'antd/lib/locale/en_US';\nimport { ThemeProvider } from 'styled-components';\nimport lightTheme from './styles/themes/light/lightTheme';\nimport GlobalStyle from './styles/GlobalStyle';\nimport 'typeface-montserrat';\nimport { darkTheme } from '@app/styles/themes/dark/darkTheme';\nimport { AppRouter } from './components/router/AppRouter';\nimport { ThemeSwitcher } from '@app/components/common/ThemeSwitcher';\nimport { useLanguage } from './hooks/useLanguage';\nimport { useAppSelector } from './hooks/reduxHooks';\nimport { useAutoNightMode } from './hooks/useAutoNightMode';\nimport { usePWA } from './hooks/usePWA';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar App = function App() {\n  _s();\n\n  var theme = useAppSelector(function (state) {\n    return state.theme.theme;\n  });\n  var currentTheme = useMemo(function () {\n    return theme === 'dark' ? darkTheme : lightTheme;\n  }, [theme]);\n\n  var _useLanguage = useLanguage(),\n      language = _useLanguage.language;\n\n  usePWA();\n  useAutoNightMode();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n      name: \"theme-color\",\n      content: currentTheme.colors.main.primary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: currentTheme,\n      children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(ConfigProvider, {\n        locale: language === 'en' ? enUS : deDe,\n        children: /*#__PURE__*/_jsxDEV(ThemeSwitcher, {\n          theme: theme,\n          children: /*#__PURE__*/_jsxDEV(AppRouter, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(App, \"LgVz7WonR9RPmUL8yPoA34kIlh4=\", false, function () {\n  return [useAppSelector, useLanguage, usePWA, useAutoNightMode];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/fl-carla/src/App.tsx"],"names":["React","useMemo","ConfigProvider","deDe","enUS","ThemeProvider","lightTheme","GlobalStyle","darkTheme","AppRouter","ThemeSwitcher","useLanguage","useAppSelector","useAutoNightMode","usePWA","App","theme","state","currentTheme","language","colors","main","primary"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,cAAT,QAA+B,MAA/B;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAO,qBAAP;AACA,SAASC,SAAT,QAA0B,mCAA1B;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,SAASC,aAAT,QAA8B,sCAA9B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SAASC,MAAT,QAAuB,gBAAvB;;;;AAEA,IAAMC,GAAa,GAAG,SAAhBA,GAAgB,GAAM;AAAA;;AAC1B,MAAMC,KAAK,GAAGJ,cAAc,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACD,KAAN,CAAYA,KAAvB;AAAA,GAAD,CAA5B;AACA,MAAME,YAAY,GAAGjB,OAAO,CAAC;AAAA,WAAOe,KAAK,KAAK,MAAV,GAAmBR,SAAnB,GAA+BF,UAAtC;AAAA,GAAD,EAAoD,CAACU,KAAD,CAApD,CAA5B;;AAEA,qBAAqBL,WAAW,EAAhC;AAAA,MAAQQ,QAAR,gBAAQA,QAAR;;AAEAL,EAAAA,MAAM;AAEND,EAAAA,gBAAgB;AAEhB,sBACE;AAAA,4BACE;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,OAAO,EAAEK,YAAY,CAACE,MAAb,CAAoBC,IAApB,CAAyBC;AAA3D;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEJ,YAAtB;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,cAAD;AAAgB,QAAA,MAAM,EAAEC,QAAQ,KAAK,IAAb,GAAoBf,IAApB,GAA2BD,IAAnD;AAAA,+BACE,QAAC,aAAD;AAAe,UAAA,KAAK,EAAEa,KAAtB;AAAA,iCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA,kBADF;AAaD,CAvBD;;GAAMD,G;UACUH,c,EAGOD,W,EAErBG,M,EAEAD,gB;;;KARIE,G;AAyBN,eAAeA,GAAf","sourcesContent":["import React, { useMemo } from 'react';\r\nimport { ConfigProvider } from 'antd';\r\nimport deDe from 'antd/lib/locale/de_DE';\r\nimport enUS from 'antd/lib/locale/en_US';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport lightTheme from './styles/themes/light/lightTheme';\r\nimport GlobalStyle from './styles/GlobalStyle';\r\nimport 'typeface-montserrat';\r\nimport { darkTheme } from '@app/styles/themes/dark/darkTheme';\r\nimport { AppRouter } from './components/router/AppRouter';\r\nimport { ThemeSwitcher } from '@app/components/common/ThemeSwitcher';\r\nimport { useLanguage } from './hooks/useLanguage';\r\nimport { useAppSelector } from './hooks/reduxHooks';\r\nimport { useAutoNightMode } from './hooks/useAutoNightMode';\r\nimport { usePWA } from './hooks/usePWA';\r\n\r\nconst App: React.FC = () => {\r\n  const theme = useAppSelector((state) => state.theme.theme);\r\n  const currentTheme = useMemo(() => (theme === 'dark' ? darkTheme : lightTheme), [theme]);\r\n\r\n  const { language } = useLanguage();\r\n\r\n  usePWA();\r\n\r\n  useAutoNightMode();\r\n\r\n  return (\r\n    <>\r\n      <meta name=\"theme-color\" content={currentTheme.colors.main.primary} />\r\n      <ThemeProvider theme={currentTheme}>\r\n        <GlobalStyle />\r\n        <ConfigProvider locale={language === 'en' ? enUS : deDe}>\r\n          <ThemeSwitcher theme={theme}>\r\n            <AppRouter />\r\n          </ThemeSwitcher>\r\n        </ConfigProvider>\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}