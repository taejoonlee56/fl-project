{"ast":null,"code":"import { createAction, createSlice } from '@reduxjs/toolkit';\nvar DEFAULT_NIGHT_MODE_INTERVAL = [20 * 3600 * 1000, 8 * 3600 * 1000];\nvar currentNightTimeJSON = localStorage.getItem('nightTime');\nvar currentNightTime = currentNightTimeJSON ? JSON.parse(currentNightTimeJSON) : DEFAULT_NIGHT_MODE_INTERVAL;\nvar isNightMode = localStorage.getItem('nightMode') === 'true';\nlocalStorage.setItem('nightTime', JSON.stringify(currentNightTime));\nlocalStorage.setItem('nightMode', JSON.stringify(isNightMode));\nvar initialState = {\n  isNightMode: isNightMode,\n  nightTime: currentNightTime\n};\nexport var setNightMode = createAction('nightMode/setNightMode', function (isNightMode) {\n  localStorage.setItem('nightMode', JSON.stringify(isNightMode));\n  return {\n    payload: isNightMode\n  };\n});\nexport var setNightTime = createAction('nightMode/setNightTime', function (nightTime) {\n  localStorage.setItem('nightTime', JSON.stringify(nightTime));\n  return {\n    payload: nightTime\n  };\n});\nexport var nightModeSlice = createSlice({\n  name: 'nightMode',\n  initialState: initialState,\n  reducers: {},\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(setNightMode, function (state, action) {\n      state.isNightMode = action.payload;\n    });\n    builder.addCase(setNightTime, function (state, action) {\n      state.nightTime = action.payload;\n    });\n  }\n});\nexport default nightModeSlice.reducer;","map":{"version":3,"sources":["D:/fl-carla/src/store/slices/nightModeSlice.ts"],"names":["createAction","createSlice","DEFAULT_NIGHT_MODE_INTERVAL","currentNightTimeJSON","localStorage","getItem","currentNightTime","JSON","parse","isNightMode","setItem","stringify","initialState","nightTime","setNightMode","payload","setNightTime","nightModeSlice","name","reducers","extraReducers","builder","addCase","state","action","reducer"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,WAAvB,QAAyD,kBAAzD;AAEA,IAAMC,2BAA2B,GAAG,CAAC,KAAK,IAAL,GAAY,IAAb,EAAmB,IAAI,IAAJ,GAAW,IAA9B,CAApC;AAOA,IAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAA7B;AACA,IAAMC,gBAA0B,GAAGH,oBAAoB,GAClDI,IAAI,CAACC,KAAL,CAAWL,oBAAX,CADkD,GAEnDD,2BAFJ;AAIA,IAAMO,WAAW,GAAGL,YAAY,CAACC,OAAb,CAAqB,WAArB,MAAsC,MAA1D;AAEAD,YAAY,CAACM,OAAb,CAAqB,WAArB,EAAkCH,IAAI,CAACI,SAAL,CAAeL,gBAAf,CAAlC;AACAF,YAAY,CAACM,OAAb,CAAqB,WAArB,EAAkCH,IAAI,CAACI,SAAL,CAAeF,WAAf,CAAlC;AAEA,IAAMG,YAA4B,GAAG;AACnCH,EAAAA,WAAW,EAAXA,WADmC;AAEnCI,EAAAA,SAAS,EAAEP;AAFwB,CAArC;AAKA,OAAO,IAAMQ,YAAY,GAAGd,YAAY,CAAyB,wBAAzB,EAAmD,UAACS,WAAD,EAAiB;AAC1GL,EAAAA,YAAY,CAACM,OAAb,CAAqB,WAArB,EAAkCH,IAAI,CAACI,SAAL,CAAeF,WAAf,CAAlC;AAEA,SAAO;AACLM,IAAAA,OAAO,EAAEN;AADJ,GAAP;AAGD,CANuC,CAAjC;AAQP,OAAO,IAAMO,YAAY,GAAGhB,YAAY,CAA0B,wBAA1B,EAAoD,UAACa,SAAD,EAAe;AACzGT,EAAAA,YAAY,CAACM,OAAb,CAAqB,WAArB,EAAkCH,IAAI,CAACI,SAAL,CAAeE,SAAf,CAAlC;AAEA,SAAO;AACLE,IAAAA,OAAO,EAAEF;AADJ,GAAP;AAGD,CANuC,CAAjC;AAQP,OAAO,IAAMI,cAAc,GAAGhB,WAAW,CAAC;AACxCiB,EAAAA,IAAI,EAAE,WADkC;AAExCN,EAAAA,YAAY,EAAZA,YAFwC;AAGxCO,EAAAA,QAAQ,EAAE,EAH8B;AAIxCC,EAAAA,aAAa,EAAE,uBAACC,OAAD,EAAa;AAC1BA,IAAAA,OAAO,CAACC,OAAR,CAAgBR,YAAhB,EAA8B,UAACS,KAAD,EAAQC,MAAR,EAAmB;AAC/CD,MAAAA,KAAK,CAACd,WAAN,GAAoBe,MAAM,CAACT,OAA3B;AACD,KAFD;AAGAM,IAAAA,OAAO,CAACC,OAAR,CAAgBN,YAAhB,EAA8B,UAACO,KAAD,EAAQC,MAAR,EAAmB;AAC/CD,MAAAA,KAAK,CAACV,SAAN,GAAkBW,MAAM,CAACT,OAAzB;AACD,KAFD;AAGD;AAXuC,CAAD,CAAlC;AAcP,eAAeE,cAAc,CAACQ,OAA9B","sourcesContent":["import { createAction, createSlice, PrepareAction } from '@reduxjs/toolkit';\r\n\r\nconst DEFAULT_NIGHT_MODE_INTERVAL = [20 * 3600 * 1000, 8 * 3600 * 1000];\r\n\r\ninterface NightModeState {\r\n  isNightMode: boolean;\r\n  nightTime: number[];\r\n}\r\n\r\nconst currentNightTimeJSON = localStorage.getItem('nightTime');\r\nconst currentNightTime: number[] = currentNightTimeJSON\r\n  ? (JSON.parse(currentNightTimeJSON) as number[])\r\n  : DEFAULT_NIGHT_MODE_INTERVAL;\r\n\r\nconst isNightMode = localStorage.getItem('nightMode') === 'true';\r\n\r\nlocalStorage.setItem('nightTime', JSON.stringify(currentNightTime));\r\nlocalStorage.setItem('nightMode', JSON.stringify(isNightMode));\r\n\r\nconst initialState: NightModeState = {\r\n  isNightMode,\r\n  nightTime: currentNightTime,\r\n};\r\n\r\nexport const setNightMode = createAction<PrepareAction<boolean>>('nightMode/setNightMode', (isNightMode) => {\r\n  localStorage.setItem('nightMode', JSON.stringify(isNightMode));\r\n\r\n  return {\r\n    payload: isNightMode,\r\n  };\r\n});\r\n\r\nexport const setNightTime = createAction<PrepareAction<number[]>>('nightMode/setNightTime', (nightTime) => {\r\n  localStorage.setItem('nightTime', JSON.stringify(nightTime));\r\n\r\n  return {\r\n    payload: nightTime,\r\n  };\r\n});\r\n\r\nexport const nightModeSlice = createSlice({\r\n  name: 'nightMode',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(setNightMode, (state, action) => {\r\n      state.isNightMode = action.payload;\r\n    });\r\n    builder.addCase(setNightTime, (state, action) => {\r\n      state.nightTime = action.payload;\r\n    });\r\n  },\r\n});\r\n\r\nexport default nightModeSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}