{"ast":null,"code":"import _objectSpread from \"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"isCollapsed\", \"setCollapsed\"];\n\nvar _jsxFileName = \"/home/tj/fl-carla/src/components/layouts/main/sider/MainSider/MainSider.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport Overlay from '../../../../common/Overlay';\nimport { useResponsive } from 'hooks/useResponsive';\nimport * as S from './MainSider.styles';\nimport { SiderLogo } from '../SiderLogo';\nimport SiderMenu from '../SiderMenu/SiderMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar MainSider = function MainSider(_ref) {\n  _s();\n\n  var isCollapsed = _ref.isCollapsed,\n      setCollapsed = _ref.setCollapsed,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useResponsive = useResponsive(),\n      isDesktop = _useResponsive.isDesktop,\n      mobileOnly = _useResponsive.mobileOnly,\n      tabletOnly = _useResponsive.tabletOnly;\n\n  var isCollapsible = useMemo(function () {\n    return mobileOnly && tabletOnly;\n  }, [mobileOnly, tabletOnly]);\n\n  var toggleSider = function toggleSider() {\n    return setCollapsed(!isCollapsed);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(S.Sider, _objectSpread(_objectSpread({\n      trigger: null,\n      collapsed: !isDesktop && isCollapsed,\n      collapsedWidth: tabletOnly ? 80 : 0,\n      collapsible: isCollapsible,\n      width: 260\n    }, props), {}, {\n      children: [/*#__PURE__*/_jsxDEV(SiderLogo, {\n        isSiderCollapsed: isCollapsed,\n        toggleSider: toggleSider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(S.SiderContent, {\n        children: /*#__PURE__*/_jsxDEV(SiderMenu, {\n          setCollapsed: setCollapsed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, _this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, _this), mobileOnly && /*#__PURE__*/_jsxDEV(Overlay, {\n      onClick: toggleSider,\n      show: !isCollapsed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 22\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(MainSider, \"6zUvcDJspcdtWiEbYSG0rOuUXPY=\", false, function () {\n  return [useResponsive];\n});\n\n_c = MainSider;\nexport default MainSider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainSider\");","map":{"version":3,"sources":["/home/tj/fl-carla/src/components/layouts/main/sider/MainSider/MainSider.tsx"],"names":["React","useMemo","Overlay","useResponsive","S","SiderLogo","SiderMenu","MainSider","isCollapsed","setCollapsed","props","isDesktop","mobileOnly","tabletOnly","isCollapsible","toggleSider"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,OAAO,KAAKC,CAAZ,MAAmB,oBAAnB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;;AAOA,IAAMC,SAAmC,GAAG,SAAtCA,SAAsC,OAA6C;AAAA;;AAAA,MAA1CC,WAA0C,QAA1CA,WAA0C;AAAA,MAA7BC,YAA6B,QAA7BA,YAA6B;AAAA,MAAZC,KAAY;;AACvF,uBAA8CP,aAAa,EAA3D;AAAA,MAAQQ,SAAR,kBAAQA,SAAR;AAAA,MAAmBC,UAAnB,kBAAmBA,UAAnB;AAAA,MAA+BC,UAA/B,kBAA+BA,UAA/B;;AAEA,MAAMC,aAAa,GAAGb,OAAO,CAAC;AAAA,WAAMW,UAAU,IAAIC,UAApB;AAAA,GAAD,EAAiC,CAACD,UAAD,EAAaC,UAAb,CAAjC,CAA7B;;AAEA,MAAME,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMN,YAAY,CAAC,CAACD,WAAF,CAAlB;AAAA,GAApB;;AAEA,sBACE;AAAA,4BACE,QAAC,CAAD,CAAG,KAAH;AACE,MAAA,OAAO,EAAE,IADX;AAEE,MAAA,SAAS,EAAE,CAACG,SAAD,IAAcH,WAF3B;AAGE,MAAA,cAAc,EAAEK,UAAU,GAAG,EAAH,GAAQ,CAHpC;AAIE,MAAA,WAAW,EAAEC,aAJf;AAKE,MAAA,KAAK,EAAE;AALT,OAMMJ,KANN;AAAA,8BAQE,QAAC,SAAD;AAAW,QAAA,gBAAgB,EAAEF,WAA7B;AAA0C,QAAA,WAAW,EAAEO;AAAvD;AAAA;AAAA;AAAA;AAAA,eARF,eASE,QAAC,CAAD,CAAG,YAAH;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,YAAY,EAAEN;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eATF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAcGG,UAAU,iBAAI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEG,WAAlB;AAA+B,MAAA,IAAI,EAAE,CAACP;AAAtC;AAAA;AAAA;AAAA;AAAA,aAdjB;AAAA,kBADF;AAkBD,CAzBD;;GAAMD,S;UAC0CJ,a;;;KAD1CI,S;AA2BN,eAAeA,SAAf","sourcesContent":["import React, { useMemo } from 'react';\nimport Overlay from '../../../../common/Overlay';\nimport { useResponsive } from 'hooks/useResponsive';\nimport * as S from './MainSider.styles';\nimport { SiderLogo } from '../SiderLogo';\nimport SiderMenu from '../SiderMenu/SiderMenu';\n\ninterface MainSiderProps {\n  isCollapsed: boolean;\n  setCollapsed: (isCollapsed: boolean) => void;\n}\n\nconst MainSider: React.FC<MainSiderProps> = ({ isCollapsed, setCollapsed, ...props }) => {\n  const { isDesktop, mobileOnly, tabletOnly } = useResponsive();\n\n  const isCollapsible = useMemo(() => mobileOnly && tabletOnly, [mobileOnly, tabletOnly]);\n\n  const toggleSider = () => setCollapsed(!isCollapsed);\n\n  return (\n    <>\n      <S.Sider\n        trigger={null}\n        collapsed={!isDesktop && isCollapsed}\n        collapsedWidth={tabletOnly ? 80 : 0}\n        collapsible={isCollapsible}\n        width={260}\n        {...props}\n      >\n        <SiderLogo isSiderCollapsed={isCollapsed} toggleSider={toggleSider} />\n        <S.SiderContent>\n          <SiderMenu setCollapsed={setCollapsed} />\n        </S.SiderContent>\n      </S.Sider>\n      {mobileOnly && <Overlay onClick={toggleSider} show={!isCollapsed} />}\n    </>\n  );\n};\n\nexport default MainSider;\n"]},"metadata":{},"sourceType":"module"}