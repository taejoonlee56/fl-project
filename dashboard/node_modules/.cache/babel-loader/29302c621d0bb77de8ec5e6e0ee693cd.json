{"ast":null,"code":"import _objectSpread from \"/home/tj/fl-carla/dashboard/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/home/tj/fl-carla/dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/home/tj/fl-carla/dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/tj/fl-carla/dashboard/src/components/tj/DataControlForm/DataControlForm.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"/home/tj/fl-carla/dashboard/node_modules/@babel/runtime/regenerator/index.js\";\nimport { useTranslation } from 'react-i18next';\nimport { useState } from 'react';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { RadioButton, RadioGroup } from '@app/components/common/Radio/Radio';\nimport { notificationController } from '@app/controllers/notificationController';\nimport { InputNumber } from '@app/components/common/inputs/InputNumber/InputNumber';\nimport { Select, Option } from '@app/components/common/selects/Select/Select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar formItemLayout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\nexport var DataControlForm = function DataControlForm() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFieldsChanged = _useState2[0],\n      setFieldsChanged = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var values,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              values = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              setLoading(true);\n              setTimeout(function () {\n                setLoading(false);\n                setFieldsChanged(false);\n                notificationController.success({\n                  message: t('common.success')\n                });\n                console.log(values);\n              }, 1000);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onFinish() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(BaseButtonsForm, _objectSpread(_objectSpread({}, formItemLayout), {}, {\n    isFieldsChanged: isFieldsChanged,\n    onFieldsChange: function onFieldsChange() {\n      return setFieldsChanged(true);\n    },\n    name: \"validateForm\",\n    initialValues: {\n      'input-number': 10,\n      'checkbox-group': ['A', 'B'],\n      rate: 3.5\n    },\n    footer: /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: isLoading,\n        children: t('common.submit')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, _this),\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n      name: \"purpose-button\" // label={t('forms.validationFormLabels.radioButton')}\n      ,\n      label: t('Purpose'),\n      rules: [{\n        required: true,\n        message: t('Choose Purpose')\n      }],\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: t('Select a Data Purpose'),\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: \"lane\",\n          children: t('Lane Detection')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"object\",\n          children: t('Object Detection')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n      label: t('Number of data to collect'),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n          name: \"amount-data\",\n          rules: [{\n            required: true,\n            message: t('Enter the number of data to collect')\n          }],\n          noStyle: true,\n          children: /*#__PURE__*/_jsxDEV(InputNumber, {\n            min: 100,\n            max: 10000\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", t(' Amount of Data, 100 to 10,000')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n      label: t('Enter the number of vehicles for data collection'),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n          name: \"amount-data\",\n          rules: [{\n            required: true,\n            message: t('Type Amount of Data')\n          }],\n          noStyle: true,\n          children: /*#__PURE__*/_jsxDEV(InputNumber, {\n            min: 1,\n            max: 10\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", t(' Amount of Data, 1 to 10')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n      name: \"time-button\" // label={t('forms.validationFormLabels.radioButton')}\n      ,\n      label: t('Day/Night'),\n      rules: [{\n        required: true,\n        message: t('Choose Day or Night')\n      }],\n      children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n        children: [/*#__PURE__*/_jsxDEV(RadioButton, {\n          value: \"Sunset\",\n          children: t('Day')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RadioButton, {\n          value: \"Night\",\n          children: t('Night')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n      name: \"weather-button\" // label={t('forms.validationFormLabels.radioButton')}\n      ,\n      label: t('Weather'),\n      rules: [{\n        required: true,\n        message: t('Choose Weather')\n      }],\n      children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n        children: [/*#__PURE__*/_jsxDEV(RadioButton, {\n          value: \"ClearSunset\",\n          children: t('Sunny')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RadioButton, {\n          value: \"CloudySunset\",\n          children: t('Cloudy')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RadioButton, {\n          value: \"HardRainSunset\",\n          children: t('Rainy')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RadioButton, {\n          value: \"WetSunset\",\n          children: t('Snowy')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DataControlForm, \"+2qt9+VyOzDr/RwsnFeHV8e7uTw=\", false, function () {\n  return [useTranslation];\n});\n\n_c = DataControlForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataControlForm\");","map":{"version":3,"sources":["/home/tj/fl-carla/dashboard/src/components/tj/DataControlForm/DataControlForm.tsx"],"names":["useTranslation","useState","BaseButtonsForm","Button","RadioButton","RadioGroup","notificationController","InputNumber","Select","Option","formItemLayout","labelCol","span","wrapperCol","DataControlForm","isFieldsChanged","setFieldsChanged","isLoading","setLoading","t","onFinish","values","setTimeout","success","message","console","log","rate","required"],"mappings":"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","sourcesContent":["import { useTranslation } from 'react-i18next';\nimport { useState } from 'react';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { RadioButton, RadioGroup } from '@app/components/common/Radio/Radio';\nimport { notificationController } from '@app/controllers/notificationController';\nimport { InputNumber } from '@app/components/common/inputs/InputNumber/InputNumber';\nimport { Select, Option } from '@app/components/common/selects/Select/Select';\n\nconst formItemLayout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 }, \n};\n\nexport const DataControlForm: React.FC = () => {\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const { t } = useTranslation();\n  \n  const onFinish = async (values = {}) => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setFieldsChanged(false);\n      notificationController.success({ message: t('common.success') });\n      console.log(values);\n    }, 1000);\n  };\n\n  return (\n    <BaseButtonsForm\n      {...formItemLayout}\n      isFieldsChanged={isFieldsChanged}\n      onFieldsChange={() => setFieldsChanged(true)}\n      name=\"validateForm\"\n      initialValues={{\n        'input-number': 10,\n        'checkbox-group': ['A', 'B'],\n        rate: 3.5,\n      }}\n      footer={\n        <BaseButtonsForm.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n            {t('common.submit')}\n          </Button>\n        </BaseButtonsForm.Item>\n      }\n      onFinish={onFinish}\n    >\n      <BaseButtonsForm.Item\n        name=\"purpose-button\"\n        // label={t('forms.validationFormLabels.radioButton')}\n        label={t('Purpose')}\n        rules={[{ required: true, message: t('Choose Purpose') }]}\n      >\n        \n        <Select placeholder={t('Select a Data Purpose')}>\n          <Option value=\"lane\">{t('Lane Detection')}</Option>\n          <Option value=\"object\">{t('Object Detection')}</Option>\n        </Select>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item label={t('Number of data to collect')}>\n        <label>\n          <BaseButtonsForm.Item name=\"amount-data\" rules={[{ required: true, message: t('Enter the number of data to collect') }]} noStyle>\n            <InputNumber min={100} max={10000} />\n          </BaseButtonsForm.Item>\n        </label>\n        <span> {t(' Amount of Data, 100 to 10,000')}</span>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item label={t('Enter the number of vehicles for data collection')}>\n        <label>\n          <BaseButtonsForm.Item name=\"amount-data\" rules={[{ required: true, message: t('Type Amount of Data') }]} noStyle>\n            <InputNumber min={1} max={10} />\n          </BaseButtonsForm.Item>\n        </label>\n        <span> {t(' Amount of Data, 1 to 10')}</span>\n      </BaseButtonsForm.Item>\n\n\n\n\n\n      <BaseButtonsForm.Item\n        name=\"time-button\"\n        // label={t('forms.validationFormLabels.radioButton')}\n        label={t('Day/Night')}\n        rules={[{ required: true, message: t('Choose Day or Night') }]}\n      >\n        <RadioGroup>\n          <RadioButton value=\"Sunset\">{t('Day')}</RadioButton>\n          <RadioButton value=\"Night\">{t('Night')}</RadioButton>\n        </RadioGroup>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item\n        name=\"weather-button\"\n        // label={t('forms.validationFormLabels.radioButton')}\n        label={t('Weather')}\n        rules={[{ required: true, message: t('Choose Weather') }]}\n      >\n        <RadioGroup>\n          <RadioButton value=\"ClearSunset\">{t('Sunny')}</RadioButton>\n          <RadioButton value=\"CloudySunset\">{t('Cloudy')}</RadioButton>\n          <RadioButton value=\"HardRainSunset\">{t('Rainy')}</RadioButton>\n          <RadioButton value=\"WetSunset\">{t('Snowy')}</RadioButton>\n        </RadioGroup>\n      </BaseButtonsForm.Item>\n    </BaseButtonsForm>\n\n  );\n};\n"]},"metadata":{},"sourceType":"module"}