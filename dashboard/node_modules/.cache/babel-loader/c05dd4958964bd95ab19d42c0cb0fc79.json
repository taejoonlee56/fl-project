{"ast":null,"code":"import _objectSpread from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\nimport axios from 'axios';\nimport { ApiError } from '@app/api/ApiError';\nimport { readToken } from '@app/services/localStorage.service';\nexport var httpApi = axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL\n});\nhttpApi.interceptors.request.use(function (config) {\n  config.headers = _objectSpread(_objectSpread({}, config.headers), {}, {\n    Authorization: \"Bearer \".concat(readToken())\n  });\n  return config;\n});\nhttpApi.interceptors.response.use(undefined, function (error) {\n  var _error$response, _error$response2;\n\n  throw new ApiError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.message) || error.message, (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n});","map":{"version":3,"sources":["D:/fl-carla/src/api/http.api.ts"],"names":["axios","ApiError","readToken","httpApi","create","baseURL","process","env","REACT_APP_BASE_URL","interceptors","request","use","config","headers","Authorization","response","undefined","error","data","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,SAAT,QAA0B,oCAA1B;AAEA,OAAO,IAAMC,OAAO,GAAGH,KAAK,CAACI,MAAN,CAAa;AAClCC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADa,CAAb,CAAhB;AAIPL,OAAO,CAACM,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAiC,UAACC,MAAD,EAAY;AAC3CA,EAAAA,MAAM,CAACC,OAAP,mCAAsBD,MAAM,CAACC,OAA7B;AAAsCC,IAAAA,aAAa,mBAAYZ,SAAS,EAArB;AAAnD;AAEA,SAAOU,MAAP;AACD,CAJD;AAMAT,OAAO,CAACM,YAAR,CAAqBM,QAArB,CAA8BJ,GAA9B,CAAkCK,SAAlC,EAA6C,UAACC,KAAD,EAAuB;AAAA;;AAClE,QAAM,IAAIhB,QAAJ,CAA2B,oBAAAgB,KAAK,CAACF,QAAN,oEAAgBG,IAAhB,CAAqBC,OAArB,KAAgCF,KAAK,CAACE,OAAjE,sBAA0EF,KAAK,CAACF,QAAhF,qDAA0E,iBAAgBG,IAA1F,CAAN;AACD,CAFD","sourcesContent":["import axios from 'axios';\r\nimport { AxiosError } from 'axios';\r\nimport { ApiError } from '@app/api/ApiError';\r\nimport { readToken } from '@app/services/localStorage.service';\r\n\r\nexport const httpApi = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL,\r\n});\r\n\r\nhttpApi.interceptors.request.use((config) => {\r\n  config.headers = { ...config.headers, Authorization: `Bearer ${readToken()}` };\r\n\r\n  return config;\r\n});\r\n\r\nhttpApi.interceptors.response.use(undefined, (error: AxiosError) => {\r\n  throw new ApiError<ApiErrorData>(error.response?.data.message || error.message, error.response?.data);\r\n});\r\n\r\nexport interface ApiErrorData {\r\n  message: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}