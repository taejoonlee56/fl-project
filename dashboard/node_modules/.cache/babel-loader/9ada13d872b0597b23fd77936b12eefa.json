{"ast":null,"code":"import _slicedToArray from \"/home/tj/fl-carla/dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/tj/fl-carla/dashboard/src/components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/PaymentHistory/PaymentHistory.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row } from 'antd';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { Card } from '@app/components/common/Card/Card';\nimport { Payment } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/Payment/Payment';\nimport { PaymentsTable } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/PaymentsTable/PaymentsTable';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport { getPaymentHistory } from '@app/api/paymentHistory.api';\nimport * as S from './PaymentHistory.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var PaymentHistory = function PaymentHistory() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      history = _useState2[0],\n      setHistory = _useState2[1];\n\n  var _useResponsive = useResponsive(),\n      mobileOnly = _useResponsive.mobileOnly,\n      isTablet = _useResponsive.isTablet;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var payments = useMemo(function () {\n    return history.map(function (item) {\n      return /*#__PURE__*/_jsxDEV(Payment, {\n        src: item.imgUrl,\n        recipient: item.recipient,\n        date: item.date,\n        status: item.status,\n        price: item.amount,\n        currency: item.currency\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, _this);\n    });\n  }, [history]);\n  useEffect(function () {\n    getPaymentHistory().then(function (res) {\n      return setHistory(res);\n    });\n  }, []);\n  var content = useMemo(function () {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [32, 32],\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        children: /*#__PURE__*/_jsxDEV(BaseForm.Title, {\n          children: t('profile.nav.payments.paymentHistory')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        children: /*#__PURE__*/_jsxDEV(S.ContentWrapper, {\n          isEmptyHistory: history.length === 0,\n          children: [mobileOnly && (history.length > 0 ? payments : /*#__PURE__*/_jsxDEV(S.Text, {\n            children: t('profile.nav.payments.noHistory')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 61\n          }, _this)), isTablet && /*#__PURE__*/_jsxDEV(PaymentsTable, {\n            payments: history\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 26\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, _this);\n  }, [isTablet, history, payments, mobileOnly, t]);\n  return isTablet ? content : /*#__PURE__*/_jsxDEV(Card, {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 31\n  }, _this);\n};\n\n_s(PaymentHistory, \"dZuX7jJn2OQcTu+aHDm8GMGwopQ=\", false, function () {\n  return [useResponsive, useTranslation];\n});\n\n_c = PaymentHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentHistory\");","map":{"version":3,"sources":["/home/tj/fl-carla/dashboard/src/components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/PaymentHistory/PaymentHistory.tsx"],"names":["React","useEffect","useMemo","useState","useTranslation","Col","Row","BaseForm","Card","Payment","PaymentsTable","useResponsive","getPaymentHistory","S","PaymentHistory","history","setHistory","mobileOnly","isTablet","t","payments","map","item","imgUrl","recipient","date","status","amount","currency","id","then","res","content","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row } from 'antd';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { Card } from '@app/components/common/Card/Card';\nimport { Payment } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/Payment/Payment';\nimport { PaymentsTable } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/PaymentsTable/PaymentsTable';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport { getPaymentHistory, Payment as IPayment } from '@app/api/paymentHistory.api';\nimport * as S from './PaymentHistory.styles';\n\nexport const PaymentHistory: React.FC = () => {\n  const [history, setHistory] = useState<IPayment[]>([]);\n\n  const { mobileOnly, isTablet } = useResponsive();\n\n  const { t } = useTranslation();\n\n  const payments = useMemo(\n    () =>\n      history.map((item) => (\n        <Payment\n          key={item.id}\n          src={item.imgUrl}\n          recipient={item.recipient}\n          date={item.date}\n          status={item.status}\n          price={item.amount}\n          currency={item.currency}\n        />\n      )),\n    [history],\n  );\n\n  useEffect(() => {\n    getPaymentHistory().then((res) => setHistory(res));\n  }, []);\n\n  const content = useMemo(\n    () => (\n      <Row gutter={[32, 32]}>\n        <Col span={24}>\n          <BaseForm.Title>{t('profile.nav.payments.paymentHistory')}</BaseForm.Title>\n        </Col>\n\n        <Col span={24}>\n          <S.ContentWrapper isEmptyHistory={history.length === 0}>\n            {mobileOnly && (history.length > 0 ? payments : <S.Text>{t('profile.nav.payments.noHistory')}</S.Text>)}\n\n            {isTablet && <PaymentsTable payments={history} />}\n          </S.ContentWrapper>\n        </Col>\n      </Row>\n    ),\n    [isTablet, history, payments, mobileOnly, t],\n  );\n\n  return isTablet ? content : <Card>{content}</Card>;\n};\n"]},"metadata":{},"sourceType":"module"}