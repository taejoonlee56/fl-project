{"ast":null,"code":"import _objectSpread from \"/home/tj/fl-carla/dashboard/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/home/tj/fl-carla/dashboard/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"href\", \"target\"];\n\nvar _jsxFileName = \"/home/tj/fl-carla/dashboard/src/components/common/inputs/OpenURLInput/OpenURLInput.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { Tooltip } from 'antd';\nimport { SuffixInput } from '../SuffixInput/SuffixInput';\nimport { useTranslation } from 'react-i18next';\nimport { FileTextOutlined } from '@ant-design/icons';\nimport { websitePattern } from 'constants/patterns';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var OpenURLInput = function OpenURLInput(_ref) {\n  _s();\n\n  var href = _ref.href,\n      _ref$target = _ref.target,\n      target = _ref$target === void 0 ? '_blank' : _ref$target,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var isMatch = useMemo(function () {\n    return new RegExp(websitePattern).test(href || ' ');\n  }, [href]);\n  return /*#__PURE__*/_jsxDEV(SuffixInput, _objectSpread({\n    suffix: /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: t('common.openInNewTab'),\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        href: href,\n        target: target,\n        disabled: !isMatch,\n        type: \"text\",\n        icon: /*#__PURE__*/_jsxDEV(FileTextOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 19\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, _this)\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(OpenURLInput, \"Y+2FXkIQFC6jZEDBbKNmhjC5Tb0=\", false, function () {\n  return [useTranslation];\n});\n\n_c = OpenURLInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"OpenURLInput\");","map":{"version":3,"sources":["/home/tj/fl-carla/dashboard/src/components/common/inputs/OpenURLInput/OpenURLInput.tsx"],"names":["React","useMemo","Tooltip","SuffixInput","useTranslation","FileTextOutlined","websitePattern","Button","OpenURLInput","href","target","props","t","isMatch","RegExp","test"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AAEA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,MAAT,QAAuB,8CAAvB;;AAOA,OAAO,IAAMC,YAAyC,GAAG,SAA5CA,YAA4C,OAA2C;AAAA;;AAAA,MAAxCC,IAAwC,QAAxCA,IAAwC;AAAA,yBAAlCC,MAAkC;AAAA,MAAlCA,MAAkC,4BAAzB,QAAyB;AAAA,MAAZC,KAAY;;AAClG,wBAAcP,cAAc,EAA5B;AAAA,MAAQQ,CAAR,mBAAQA,CAAR;;AAEA,MAAMC,OAAO,GAAGZ,OAAO,CAAC;AAAA,WAAM,IAAIa,MAAJ,CAAWR,cAAX,EAA2BS,IAA3B,CAAgCN,IAAI,IAAI,GAAxC,CAAN;AAAA,GAAD,EAAqD,CAACA,IAAD,CAArD,CAAvB;AAEA,sBACE,QAAC,WAAD;AACE,IAAA,MAAM,eACJ,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEG,CAAC,CAAC,qBAAD,CAAjB;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAEH,IAFR;AAGE,QAAA,MAAM,EAAEC,MAHV;AAIE,QAAA,QAAQ,EAAE,CAACG,OAJb;AAKE,QAAA,IAAI,EAAC,MALP;AAME,QAAA,IAAI,eAAE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AANR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFJ,KAaMF,KAbN;AAAA;AAAA;AAAA;AAAA,WADF;AAiBD,CAtBM;;GAAMH,Y;UACGJ,c;;;KADHI,Y","sourcesContent":["import React, { useMemo } from 'react';\nimport { Tooltip } from 'antd';\nimport { SuffixInput } from '../SuffixInput/SuffixInput';\nimport { useTranslation } from 'react-i18next';\nimport { FileTextOutlined } from '@ant-design/icons';\nimport { InputProps } from '../Input/Input';\nimport { websitePattern } from 'constants/patterns';\nimport { Button } from '@app/components/common/buttons/Button/Button';\n\ninterface OpenURLInputProps extends InputProps {\n  href?: string;\n  target?: string;\n}\n\nexport const OpenURLInput: React.FC<OpenURLInputProps> = ({ href, target = '_blank', ...props }) => {\n  const { t } = useTranslation();\n\n  const isMatch = useMemo(() => new RegExp(websitePattern).test(href || ' '), [href]);\n\n  return (\n    <SuffixInput\n      suffix={\n        <Tooltip title={t('common.openInNewTab')}>\n          <Button\n            size=\"small\"\n            href={href}\n            target={target}\n            disabled={!isMatch}\n            type=\"text\"\n            icon={<FileTextOutlined />}\n          />\n        </Tooltip>\n      }\n      {...props}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}