{"ast":null,"code":"import _objectSpread from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\nimport { Priority } from '../constants/enums/priorities';\nexport var getBasicTableData = function getBasicTableData(pagination) {\n  return new Promise(function (res) {\n    setTimeout(function () {\n      res({\n        data: [{\n          key: 1,\n          name: 'John Brown',\n          age: 32,\n          address: 'New York No. 1 Lake Park',\n          tags: [{\n            value: 'Architect',\n            priority: Priority.LOW\n          }, {\n            value: 'Engineer',\n            priority: Priority.MEDIUM\n          }]\n        }, {\n          key: 2,\n          name: 'Jim Green',\n          age: 42,\n          address: 'London No. 1 Lake Park',\n          tags: [{\n            value: 'Doctor',\n            priority: Priority.HIGH\n          }]\n        }, {\n          key: 3,\n          name: 'Joe Black',\n          age: 32,\n          address: 'Sidney No. 1 Lake Park',\n          tags: [{\n            value: 'Professor',\n            priority: Priority.INFO\n          }, {\n            value: 'Architect',\n            priority: Priority.LOW\n          }]\n        }, {\n          key: 4,\n          name: 'Pavel Green',\n          age: 30,\n          address: 'New York No. 1 Lake Park',\n          tags: [{\n            value: 'Engineer',\n            priority: Priority.MEDIUM\n          }, {\n            value: 'Architect',\n            priority: Priority.LOW\n          }]\n        }, {\n          key: 5,\n          name: 'Alex Brown',\n          age: 26,\n          address: 'Minsk',\n          tags: [{\n            value: 'Engineer',\n            priority: Priority.MEDIUM\n          }]\n        }, {\n          key: 6,\n          name: 'Josh Black',\n          age: 21,\n          address: 'New York No. 1 Lake Park',\n          tags: [{\n            value: 'Teacher',\n            priority: Priority.INFO\n          }, {\n            value: 'Architect',\n            priority: Priority.LOW\n          }]\n        }, {\n          key: 7,\n          name: 'Cris Green',\n          age: 22,\n          address: 'Sidney No. 1 Lake Park',\n          tags: [{\n            value: 'Architect',\n            priority: Priority.LOW\n          }]\n        }, {\n          key: 8,\n          name: 'Jaime Black',\n          age: 23,\n          address: 'New York No. 1 Lake Park',\n          tags: [{\n            value: 'Engineer',\n            priority: Priority.MEDIUM\n          }]\n        }, {\n          key: 9,\n          name: 'Alina Brown',\n          age: 19,\n          address: 'Minsk',\n          tags: [{\n            value: 'Professor',\n            priority: Priority.LOW\n          }, {\n            value: 'Teacher',\n            priority: Priority.INFO\n          }]\n        }, {\n          key: 10,\n          name: 'Cris Brown',\n          age: 25,\n          address: 'London',\n          tags: [{\n            value: 'Engineer',\n            priority: Priority.MEDIUM\n          }, {\n            value: 'Teacher',\n            priority: Priority.INFO\n          }]\n        }, {\n          key: 11,\n          name: 'Alina Fens',\n          age: 19,\n          address: 'Minsk',\n          tags: [{\n            value: 'Professor',\n            priority: Priority.LOW\n          }, {\n            value: 'Teacher',\n            priority: Priority.INFO\n          }]\n        }, {\n          key: 12,\n          name: 'Alex Snak',\n          age: 28,\n          address: 'Brest',\n          tags: [{\n            value: 'Professor',\n            priority: Priority.LOW\n          }, {\n            value: 'Doctor',\n            priority: Priority.HIGH\n          }]\n        }, {\n          key: 13,\n          name: 'Pavel Dubrouski',\n          age: 26,\n          address: 'Minsk',\n          tags: [{\n            value: 'Professor',\n            priority: Priority.LOW\n          }, {\n            value: 'Doctor',\n            priority: Priority.HIGH\n          }, {\n            value: 'Teacher',\n            priority: Priority.INFO\n          }, {\n            value: 'Engineer',\n            priority: Priority.MEDIUM\n          }]\n        }, {\n          key: 14,\n          name: 'Jack Donald',\n          age: 24,\n          address: 'New York',\n          tags: [{\n            value: 'Professor',\n            priority: Priority.LOW\n          }]\n        }, {\n          key: 15,\n          name: 'Nik Nest',\n          age: 34,\n          address: 'London',\n          tags: [{\n            value: 'Doctor',\n            priority: Priority.HIGH\n          }, {\n            value: 'Engineer',\n            priority: Priority.MEDIUM\n          }]\n        }, {\n          key: 16,\n          name: 'Zak Nikls',\n          age: 32,\n          address: 'Minsk',\n          tags: [{\n            value: 'Doctor',\n            priority: Priority.HIGH\n          }, {\n            value: 'Teacher',\n            priority: Priority.INFO\n          }]\n        }, {\n          key: 17,\n          name: 'Petr Dan',\n          age: 29,\n          address: 'Gomel',\n          tags: [{\n            value: 'Engineer',\n            priority: Priority.MEDIUM\n          }, {\n            value: 'Teacher',\n            priority: Priority.INFO\n          }]\n        }, {\n          key: 18,\n          name: 'Alexa Pirs',\n          age: 19,\n          address: 'Moscow',\n          tags: [{\n            value: 'Professor',\n            priority: Priority.LOW\n          }, {\n            value: 'Doctor',\n            priority: Priority.HIGH\n          }]\n        }, {\n          key: 19,\n          name: 'Mark Brown',\n          age: 25,\n          address: 'London',\n          tags: [{\n            value: 'Teacher',\n            priority: Priority.INFO\n          }, {\n            value: 'Doctor',\n            priority: Priority.HIGH\n          }]\n        }, {\n          key: 20,\n          name: 'Alex Brons',\n          age: 45,\n          address: 'Bronx',\n          tags: [{\n            value: 'Professor',\n            priority: Priority.LOW\n          }]\n        }],\n        pagination: _objectSpread(_objectSpread({}, pagination), {}, {\n          total: 20\n        })\n      });\n    }, 1000);\n  });\n};\nexport var getTreeTableData = function getTreeTableData(pagination) {\n  return new Promise(function (res) {\n    setTimeout(function () {\n      res({\n        data: [{\n          key: 1,\n          name: 'John Brown sr.',\n          age: 60,\n          address: 'New York No. 1 Lake Park',\n          children: [{\n            key: 11,\n            name: 'John Brown',\n            age: 42,\n            address: 'New York No. 2 Lake Park'\n          }, {\n            key: 12,\n            name: 'John Brown jr.',\n            age: 30,\n            address: 'New York No. 3 Lake Park',\n            children: [{\n              key: 121,\n              name: 'Jimmy Brown',\n              age: 16,\n              address: 'New York No. 3 Lake Park'\n            }]\n          }, {\n            key: 13,\n            name: 'Jim Green sr.',\n            age: 72,\n            address: 'London No. 1 Lake Park',\n            children: [{\n              key: 131,\n              name: 'Jim Green',\n              age: 42,\n              address: 'London No. 2 Lake Park',\n              children: [{\n                key: 1311,\n                name: 'Jim Green jr.',\n                age: 25,\n                address: 'London No. 3 Lake Park'\n              }, {\n                key: 1312,\n                name: 'Jimmy Green sr.',\n                age: 18,\n                address: 'London No. 4 Lake Park'\n              }]\n            }]\n          }]\n        }, {\n          key: 200,\n          name: 'Joe Black',\n          age: 32,\n          address: 'Sidney No. 1 Lake Park',\n          children: [{\n            key: 201,\n            name: 'Joe Green',\n            age: 42,\n            address: 'London No. 2 Lake Park',\n            children: [{\n              key: 202,\n              name: 'Joe Green jr.',\n              age: 25,\n              address: 'London No. 3 Lake Park'\n            }, {\n              key: 203,\n              name: 'Joe Green sr.',\n              age: 18,\n              address: 'London No. 4 Lake Park'\n            }]\n          }]\n        }, {\n          key: 300,\n          name: 'Jaime Black',\n          age: 22,\n          address: 'Sidney No. 1 Lake Park',\n          children: [{\n            key: 301,\n            name: 'Jaime Green',\n            age: 52,\n            address: 'London No. 2 Lake Park',\n            children: [{\n              key: 302,\n              name: 'Jaime Green jr.',\n              age: 21,\n              address: 'London No. 3 Lake Park'\n            }, {\n              key: 303,\n              name: 'Jaime Green sr.',\n              age: 18,\n              address: 'London No. 4 Lake Park'\n            }]\n          }]\n        }, {\n          key: 400,\n          name: 'Pavel Brown',\n          age: 26,\n          address: 'London No. 2 Lake Park',\n          children: [{\n            key: 401,\n            name: 'Pavel Brown',\n            age: 22,\n            address: 'London No. 2 Lake Park',\n            children: [{\n              key: 402,\n              name: 'Pavel Brown jr.',\n              age: 24,\n              address: 'London No. 1 Lake Park'\n            }, {\n              key: 403,\n              name: 'Pavel Brown sr.',\n              age: 19,\n              address: 'London No. 4 Lake Park'\n            }]\n          }]\n        }, {\n          key: 500,\n          name: 'Alex Nickls',\n          age: 45,\n          address: 'London No. 2 Lake Park',\n          children: [{\n            key: 501,\n            name: 'Marta Nickls',\n            age: 25,\n            address: 'London No. 2 Lake Park',\n            children: [{\n              key: 502,\n              name: 'Pavel Nickls jr.',\n              age: 12,\n              address: 'London No. 1 Lake Park'\n            }, {\n              key: 503,\n              name: 'Alina Nickls sr.',\n              age: 19,\n              address: 'London No. 4 Lake Park'\n            }]\n          }]\n        }, {\n          key: 600,\n          name: 'Nick Donald',\n          age: 45,\n          address: 'London No. 2 Lake Park',\n          children: [{\n            key: 601,\n            name: 'Alexsa Donald',\n            age: 34,\n            address: 'London No. 2 Lake Park',\n            children: [{\n              key: 602,\n              name: 'Marta Donald jr.',\n              age: 24,\n              address: 'London No. 1 Lake Park'\n            }, {\n              key: 603,\n              name: 'Alex Donald sr.',\n              age: 19,\n              address: 'London No. 4 Lake Park'\n            }]\n          }]\n        }, {\n          key: 700,\n          name: 'Jo Snider',\n          age: 26,\n          address: 'London No. 2 Lake Park',\n          children: [{\n            key: 701,\n            name: 'Jo Snider',\n            age: 22,\n            address: 'London No. 2 Lake Park',\n            children: [{\n              key: 702,\n              name: 'Jaems Snider jr.',\n              age: 24,\n              address: 'London No. 1 Lake Park'\n            }, {\n              key: 703,\n              name: 'Jin Snider sr.',\n              age: 19,\n              address: 'London No. 4 Lake Park'\n            }]\n          }]\n        }, {\n          key: 800,\n          name: 'Jon Brown',\n          age: 26,\n          address: 'London No. 2 Lake Park',\n          children: [{\n            key: 801,\n            name: 'Kitana Brown',\n            age: 22,\n            address: 'London No. 2 Lake Park',\n            children: [{\n              key: 802,\n              name: 'Cris Brown jr.',\n              age: 24,\n              address: 'London No. 1 Lake Park'\n            }, {\n              key: 803,\n              name: 'Jon Brown sr.',\n              age: 19,\n              address: 'London No. 4 Lake Park'\n            }]\n          }]\n        }],\n        pagination: _objectSpread(_objectSpread({}, pagination), {}, {\n          total: 8\n        })\n      });\n    }, 1000);\n  });\n};\nexport var getEditableTableData = function getEditableTableData(pagination) {\n  return new Promise(function (res) {\n    setTimeout(function () {\n      res({\n        data: [{\n          key: 1,\n          name: \"Edward\",\n          age: 32,\n          address: \"London Park no.1\"\n        }, {\n          key: 2,\n          name: \"Alex\",\n          age: 45,\n          address: \"London Park no.2\"\n        }, {\n          key: 3,\n          name: \"Niko\",\n          age: 21,\n          address: \"London Park no.3\"\n        }, {\n          key: 4,\n          name: \"Josh\",\n          age: 18,\n          address: \"London Park no.4\"\n        }, {\n          key: 5,\n          name: \"Jo\",\n          age: 15,\n          address: \"Minsk Park no.1\"\n        }, {\n          key: 6,\n          name: \"Jaimi\",\n          age: 18,\n          address: \"London Park no.2\"\n        }, {\n          key: 7,\n          name: \"Alexa\",\n          age: 24,\n          address: \"London Park no.6\"\n        }, {\n          key: 8,\n          name: \"Donald\",\n          age: 27,\n          address: \"London Park no.7\"\n        }, {\n          key: 9,\n          name: \"Pavel\",\n          age: 17,\n          address: \"London Park no.9\"\n        }, {\n          key: 10,\n          name: \"Nick\",\n          age: 18,\n          address: \"London Park no.1\"\n        }, {\n          key: 11,\n          name: \"Dasha\",\n          age: 25,\n          address: \"London Park no.2\"\n        }, {\n          key: 12,\n          name: \"Alex\",\n          age: 27,\n          address: \"London Park no.3\"\n        }, {\n          key: 13,\n          name: \"Vic\",\n          age: 29,\n          address: \"London Park no.2\"\n        }, {\n          key: 14,\n          name: \"Natalia\",\n          age: 25,\n          address: \"London Park no.4\"\n        }, {\n          key: 15,\n          name: \"Zack\",\n          age: 27,\n          address: \"London Park no.1\"\n        }, {\n          key: 16,\n          name: \"Jack\",\n          age: 31,\n          address: \"London Park no.4\"\n        }],\n        pagination: _objectSpread(_objectSpread({}, pagination), {}, {\n          total: 16\n        })\n      });\n    }, 1000);\n  });\n};","map":{"version":3,"sources":["D:/fl-carla/src/api/table.api.ts"],"names":["Priority","getBasicTableData","pagination","Promise","res","setTimeout","data","key","name","age","address","tags","value","priority","LOW","MEDIUM","HIGH","INFO","total","getTreeTableData","children","getEditableTableData"],"mappings":"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","sourcesContent":["import { Priority } from '../constants/enums/priorities';\r\n\r\nexport interface Tag {\r\n  value: string;\r\n  priority: Priority;\r\n}\r\n\r\nexport interface BasicTableRow {\r\n  key: number;\r\n  name: string;\r\n  age: number;\r\n  address: string;\r\n  tags?: Tag[];\r\n}\r\n\r\nexport interface Pagination {\r\n  current?: number;\r\n  pageSize?: number;\r\n  total?: number;\r\n}\r\n\r\nexport interface BasicTableData {\r\n  data: BasicTableRow[];\r\n  pagination: Pagination;\r\n}\r\n\r\nexport interface TreeTableRow extends BasicTableRow {\r\n  children?: TreeTableRow[];\r\n}\r\n\r\nexport interface TreeTableData extends BasicTableData {\r\n  data: TreeTableRow[];\r\n}\r\n\r\nexport interface EditableTableData extends BasicTableData {\r\n  data: BasicTableRow[];\r\n}\r\n\r\nexport const getBasicTableData = (pagination: Pagination): Promise<BasicTableData> => {\r\n  return new Promise((res) => {\r\n    setTimeout(() => {\r\n      res({\r\n        data: [\r\n          {\r\n            key: 1,\r\n            name: 'John Brown',\r\n            age: 32,\r\n            address: 'New York No. 1 Lake Park',\r\n            tags: [\r\n              { value: 'Architect', priority: Priority.LOW },\r\n              { value: 'Engineer', priority: Priority.MEDIUM },\r\n            ],\r\n          },\r\n          {\r\n            key: 2,\r\n            name: 'Jim Green',\r\n            age: 42,\r\n            address: 'London No. 1 Lake Park',\r\n            tags: [{ value: 'Doctor', priority: Priority.HIGH }],\r\n          },\r\n          {\r\n            key: 3,\r\n            name: 'Joe Black',\r\n            age: 32,\r\n            address: 'Sidney No. 1 Lake Park',\r\n            tags: [\r\n              { value: 'Professor', priority: Priority.INFO },\r\n              { value: 'Architect', priority: Priority.LOW },\r\n            ],\r\n          },\r\n          {\r\n            key: 4,\r\n            name: 'Pavel Green',\r\n            age: 30,\r\n            address: 'New York No. 1 Lake Park',\r\n            tags: [\r\n              { value: 'Engineer', priority: Priority.MEDIUM },\r\n              { value: 'Architect', priority: Priority.LOW },\r\n            ],\r\n          },\r\n          {\r\n            key: 5,\r\n            name: 'Alex Brown',\r\n            age: 26,\r\n            address: 'Minsk',\r\n            tags: [{ value: 'Engineer', priority: Priority.MEDIUM }],\r\n          },\r\n          {\r\n            key: 6,\r\n            name: 'Josh Black',\r\n            age: 21,\r\n            address: 'New York No. 1 Lake Park',\r\n            tags: [\r\n              { value: 'Teacher', priority: Priority.INFO },\r\n              { value: 'Architect', priority: Priority.LOW },\r\n            ],\r\n          },\r\n          {\r\n            key: 7,\r\n            name: 'Cris Green',\r\n            age: 22,\r\n            address: 'Sidney No. 1 Lake Park',\r\n            tags: [{ value: 'Architect', priority: Priority.LOW }],\r\n          },\r\n          {\r\n            key: 8,\r\n            name: 'Jaime Black',\r\n            age: 23,\r\n            address: 'New York No. 1 Lake Park',\r\n            tags: [{ value: 'Engineer', priority: Priority.MEDIUM }],\r\n          },\r\n          {\r\n            key: 9,\r\n            name: 'Alina Brown',\r\n            age: 19,\r\n            address: 'Minsk',\r\n            tags: [\r\n              { value: 'Professor', priority: Priority.LOW },\r\n              { value: 'Teacher', priority: Priority.INFO },\r\n            ],\r\n          },\r\n          {\r\n            key: 10,\r\n            name: 'Cris Brown',\r\n            age: 25,\r\n            address: 'London',\r\n            tags: [\r\n              { value: 'Engineer', priority: Priority.MEDIUM },\r\n              { value: 'Teacher', priority: Priority.INFO },\r\n            ],\r\n          },\r\n          {\r\n            key: 11,\r\n            name: 'Alina Fens',\r\n            age: 19,\r\n            address: 'Minsk',\r\n            tags: [\r\n              { value: 'Professor', priority: Priority.LOW },\r\n              { value: 'Teacher', priority: Priority.INFO },\r\n            ],\r\n          },\r\n          {\r\n            key: 12,\r\n            name: 'Alex Snak',\r\n            age: 28,\r\n            address: 'Brest',\r\n            tags: [\r\n              { value: 'Professor', priority: Priority.LOW },\r\n              { value: 'Doctor', priority: Priority.HIGH },\r\n            ],\r\n          },\r\n          {\r\n            key: 13,\r\n            name: 'Pavel Dubrouski',\r\n            age: 26,\r\n            address: 'Minsk',\r\n            tags: [\r\n              { value: 'Professor', priority: Priority.LOW },\r\n              { value: 'Doctor', priority: Priority.HIGH },\r\n              { value: 'Teacher', priority: Priority.INFO },\r\n              { value: 'Engineer', priority: Priority.MEDIUM },\r\n            ],\r\n          },\r\n          {\r\n            key: 14,\r\n            name: 'Jack Donald',\r\n            age: 24,\r\n            address: 'New York',\r\n            tags: [{ value: 'Professor', priority: Priority.LOW }],\r\n          },\r\n          {\r\n            key: 15,\r\n            name: 'Nik Nest',\r\n            age: 34,\r\n            address: 'London',\r\n            tags: [\r\n              { value: 'Doctor', priority: Priority.HIGH },\r\n              { value: 'Engineer', priority: Priority.MEDIUM },\r\n            ],\r\n          },\r\n          {\r\n            key: 16,\r\n            name: 'Zak Nikls',\r\n            age: 32,\r\n            address: 'Minsk',\r\n            tags: [\r\n              { value: 'Doctor', priority: Priority.HIGH },\r\n              { value: 'Teacher', priority: Priority.INFO },\r\n            ],\r\n          },\r\n          {\r\n            key: 17,\r\n            name: 'Petr Dan',\r\n            age: 29,\r\n            address: 'Gomel',\r\n            tags: [\r\n              { value: 'Engineer', priority: Priority.MEDIUM },\r\n              { value: 'Teacher', priority: Priority.INFO },\r\n            ],\r\n          },\r\n          {\r\n            key: 18,\r\n            name: 'Alexa Pirs',\r\n            age: 19,\r\n            address: 'Moscow',\r\n            tags: [\r\n              { value: 'Professor', priority: Priority.LOW },\r\n              { value: 'Doctor', priority: Priority.HIGH },\r\n            ],\r\n          },\r\n          {\r\n            key: 19,\r\n            name: 'Mark Brown',\r\n            age: 25,\r\n            address: 'London',\r\n            tags: [\r\n              { value: 'Teacher', priority: Priority.INFO },\r\n              { value: 'Doctor', priority: Priority.HIGH },\r\n            ],\r\n          },\r\n          {\r\n            key: 20,\r\n            name: 'Alex Brons',\r\n            age: 45,\r\n            address: 'Bronx',\r\n            tags: [{ value: 'Professor', priority: Priority.LOW }],\r\n          },\r\n        ],\r\n        pagination: { ...pagination, total: 20 },\r\n      });\r\n    }, 1000);\r\n  });\r\n};\r\n\r\nexport const getTreeTableData = (pagination: Pagination): Promise<TreeTableData> => {\r\n  return new Promise((res) => {\r\n    setTimeout(() => {\r\n      res({\r\n        data: [\r\n          {\r\n            key: 1,\r\n            name: 'John Brown sr.',\r\n            age: 60,\r\n            address: 'New York No. 1 Lake Park',\r\n            children: [\r\n              {\r\n                key: 11,\r\n                name: 'John Brown',\r\n                age: 42,\r\n                address: 'New York No. 2 Lake Park',\r\n              },\r\n              {\r\n                key: 12,\r\n                name: 'John Brown jr.',\r\n                age: 30,\r\n                address: 'New York No. 3 Lake Park',\r\n                children: [\r\n                  {\r\n                    key: 121,\r\n                    name: 'Jimmy Brown',\r\n                    age: 16,\r\n                    address: 'New York No. 3 Lake Park',\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                key: 13,\r\n                name: 'Jim Green sr.',\r\n                age: 72,\r\n                address: 'London No. 1 Lake Park',\r\n                children: [\r\n                  {\r\n                    key: 131,\r\n                    name: 'Jim Green',\r\n                    age: 42,\r\n                    address: 'London No. 2 Lake Park',\r\n                    children: [\r\n                      {\r\n                        key: 1311,\r\n                        name: 'Jim Green jr.',\r\n                        age: 25,\r\n                        address: 'London No. 3 Lake Park',\r\n                      },\r\n                      {\r\n                        key: 1312,\r\n                        name: 'Jimmy Green sr.',\r\n                        age: 18,\r\n                        address: 'London No. 4 Lake Park',\r\n                      },\r\n                    ],\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            key: 200,\r\n            name: 'Joe Black',\r\n            age: 32,\r\n            address: 'Sidney No. 1 Lake Park',\r\n            children: [\r\n              {\r\n                key: 201,\r\n                name: 'Joe Green',\r\n                age: 42,\r\n                address: 'London No. 2 Lake Park',\r\n                children: [\r\n                  {\r\n                    key: 202,\r\n                    name: 'Joe Green jr.',\r\n                    age: 25,\r\n                    address: 'London No. 3 Lake Park',\r\n                  },\r\n                  {\r\n                    key: 203,\r\n                    name: 'Joe Green sr.',\r\n                    age: 18,\r\n                    address: 'London No. 4 Lake Park',\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            key: 300,\r\n            name: 'Jaime Black',\r\n            age: 22,\r\n            address: 'Sidney No. 1 Lake Park',\r\n            children: [\r\n              {\r\n                key: 301,\r\n                name: 'Jaime Green',\r\n                age: 52,\r\n                address: 'London No. 2 Lake Park',\r\n                children: [\r\n                  {\r\n                    key: 302,\r\n                    name: 'Jaime Green jr.',\r\n                    age: 21,\r\n                    address: 'London No. 3 Lake Park',\r\n                  },\r\n                  {\r\n                    key: 303,\r\n                    name: 'Jaime Green sr.',\r\n                    age: 18,\r\n                    address: 'London No. 4 Lake Park',\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            key: 400,\r\n            name: 'Pavel Brown',\r\n            age: 26,\r\n            address: 'London No. 2 Lake Park',\r\n            children: [\r\n              {\r\n                key: 401,\r\n                name: 'Pavel Brown',\r\n                age: 22,\r\n                address: 'London No. 2 Lake Park',\r\n                children: [\r\n                  {\r\n                    key: 402,\r\n                    name: 'Pavel Brown jr.',\r\n                    age: 24,\r\n                    address: 'London No. 1 Lake Park',\r\n                  },\r\n                  {\r\n                    key: 403,\r\n                    name: 'Pavel Brown sr.',\r\n                    age: 19,\r\n                    address: 'London No. 4 Lake Park',\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            key: 500,\r\n            name: 'Alex Nickls',\r\n            age: 45,\r\n            address: 'London No. 2 Lake Park',\r\n            children: [\r\n              {\r\n                key: 501,\r\n                name: 'Marta Nickls',\r\n                age: 25,\r\n                address: 'London No. 2 Lake Park',\r\n                children: [\r\n                  {\r\n                    key: 502,\r\n                    name: 'Pavel Nickls jr.',\r\n                    age: 12,\r\n                    address: 'London No. 1 Lake Park',\r\n                  },\r\n                  {\r\n                    key: 503,\r\n                    name: 'Alina Nickls sr.',\r\n                    age: 19,\r\n                    address: 'London No. 4 Lake Park',\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            key: 600,\r\n            name: 'Nick Donald',\r\n            age: 45,\r\n            address: 'London No. 2 Lake Park',\r\n            children: [\r\n              {\r\n                key: 601,\r\n                name: 'Alexsa Donald',\r\n                age: 34,\r\n                address: 'London No. 2 Lake Park',\r\n                children: [\r\n                  {\r\n                    key: 602,\r\n                    name: 'Marta Donald jr.',\r\n                    age: 24,\r\n                    address: 'London No. 1 Lake Park',\r\n                  },\r\n                  {\r\n                    key: 603,\r\n                    name: 'Alex Donald sr.',\r\n                    age: 19,\r\n                    address: 'London No. 4 Lake Park',\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            key: 700,\r\n            name: 'Jo Snider',\r\n            age: 26,\r\n            address: 'London No. 2 Lake Park',\r\n            children: [\r\n              {\r\n                key: 701,\r\n                name: 'Jo Snider',\r\n                age: 22,\r\n                address: 'London No. 2 Lake Park',\r\n                children: [\r\n                  {\r\n                    key: 702,\r\n                    name: 'Jaems Snider jr.',\r\n                    age: 24,\r\n                    address: 'London No. 1 Lake Park',\r\n                  },\r\n                  {\r\n                    key: 703,\r\n                    name: 'Jin Snider sr.',\r\n                    age: 19,\r\n                    address: 'London No. 4 Lake Park',\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            key: 800,\r\n            name: 'Jon Brown',\r\n            age: 26,\r\n            address: 'London No. 2 Lake Park',\r\n            children: [\r\n              {\r\n                key: 801,\r\n                name: 'Kitana Brown',\r\n                age: 22,\r\n                address: 'London No. 2 Lake Park',\r\n                children: [\r\n                  {\r\n                    key: 802,\r\n                    name: 'Cris Brown jr.',\r\n                    age: 24,\r\n                    address: 'London No. 1 Lake Park',\r\n                  },\r\n                  {\r\n                    key: 803,\r\n                    name: 'Jon Brown sr.',\r\n                    age: 19,\r\n                    address: 'London No. 4 Lake Park',\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n        pagination: { ...pagination, total: 8 },\r\n      });\r\n    }, 1000);\r\n  });\r\n};\r\n\r\nexport const getEditableTableData = (pagination: Pagination): Promise<EditableTableData> => {\r\n  return new Promise((res) => {\r\n    setTimeout(() => {\r\n      res({\r\n        data: [\r\n          {\r\n            key: 1,\r\n            name: `Edward`,\r\n            age: 32,\r\n            address: `London Park no.1`,\r\n          },\r\n          {\r\n            key: 2,\r\n            name: `Alex`,\r\n            age: 45,\r\n            address: `London Park no.2`,\r\n          },\r\n          {\r\n            key: 3,\r\n            name: `Niko`,\r\n            age: 21,\r\n            address: `London Park no.3`,\r\n          },\r\n          {\r\n            key: 4,\r\n            name: `Josh`,\r\n            age: 18,\r\n            address: `London Park no.4`,\r\n          },\r\n          {\r\n            key: 5,\r\n            name: `Jo`,\r\n            age: 15,\r\n            address: `Minsk Park no.1`,\r\n          },\r\n          {\r\n            key: 6,\r\n            name: `Jaimi`,\r\n            age: 18,\r\n            address: `London Park no.2`,\r\n          },\r\n          {\r\n            key: 7,\r\n            name: `Alexa`,\r\n            age: 24,\r\n            address: `London Park no.6`,\r\n          },\r\n          {\r\n            key: 8,\r\n            name: `Donald`,\r\n            age: 27,\r\n            address: `London Park no.7`,\r\n          },\r\n          {\r\n            key: 9,\r\n            name: `Pavel`,\r\n            age: 17,\r\n            address: `London Park no.9`,\r\n          },\r\n          {\r\n            key: 10,\r\n            name: `Nick`,\r\n            age: 18,\r\n            address: `London Park no.1`,\r\n          },\r\n          {\r\n            key: 11,\r\n            name: `Dasha`,\r\n            age: 25,\r\n            address: `London Park no.2`,\r\n          },\r\n          {\r\n            key: 12,\r\n            name: `Alex`,\r\n            age: 27,\r\n            address: `London Park no.3`,\r\n          },\r\n          {\r\n            key: 13,\r\n            name: `Vic`,\r\n            age: 29,\r\n            address: `London Park no.2`,\r\n          },\r\n          {\r\n            key: 14,\r\n            name: `Natalia`,\r\n            age: 25,\r\n            address: `London Park no.4`,\r\n          },\r\n          {\r\n            key: 15,\r\n            name: `Zack`,\r\n            age: 27,\r\n            address: `London Park no.1`,\r\n          },\r\n          {\r\n            key: 16,\r\n            name: `Jack`,\r\n            age: 31,\r\n            address: `London Park no.4`,\r\n          },\r\n        ],\r\n        pagination: { ...pagination, total: 16 },\r\n      });\r\n    }, 1000);\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}