{"ast":null,"code":"import _objectSpread from \"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/tj/fl-carla/src/components/tables/TreeTable/TreeTable.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Table } from 'components/common/Table/Table';\nimport { getTreeTableData } from 'api/table.api';\nimport { useTranslation } from 'react-i18next';\nimport { useMounted } from '@app/hooks/useMounted';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar initialPagination = {\n  current: 1,\n  pageSize: 4\n};\nexport var TreeTable = function TreeTable() {\n  _s();\n\n  var _useState = useState({\n    data: [],\n    pagination: initialPagination,\n    loading: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      tableData = _useState2[0],\n      setTableData = _useState2[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useMounted = useMounted(),\n      isMounted = _useMounted.isMounted;\n\n  var fetch = useCallback(function (pagination) {\n    setTableData(function (tableData) {\n      return _objectSpread(_objectSpread({}, tableData), {}, {\n        loading: true\n      });\n    });\n    getTreeTableData(pagination).then(function (res) {\n      if (isMounted.current) {\n        setTableData({\n          data: res.data,\n          pagination: res.pagination,\n          loading: false\n        });\n      }\n    });\n  }, [isMounted]);\n  useEffect(function () {\n    fetch(initialPagination);\n  }, [fetch]);\n\n  var handleTableChange = function handleTableChange(pagination) {\n    fetch(pagination);\n  };\n\n  var rowSelection = {\n    onChange: function onChange(selectedRowKeys, selectedRows) {\n      console.log(selectedRowKeys, selectedRows);\n    },\n    onSelect: function onSelect(record, selected, selectedRows) {\n      console.log(record, selected, selectedRows);\n    },\n    onSelectAll: function onSelectAll(selected, selectedRows) {\n      console.log(selected, selectedRows);\n    }\n  };\n  var columns = [{\n    title: t('common.name'),\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: t('common.age'),\n    dataIndex: 'age',\n    key: 'age',\n    width: '12%'\n  }, {\n    title: t('common.address'),\n    dataIndex: 'address',\n    width: '30%',\n    key: 'address'\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: tableData.data,\n      rowSelection: _objectSpread({}, rowSelection),\n      pagination: tableData.pagination,\n      loading: tableData.loading,\n      onChange: handleTableChange,\n      scroll: {\n        x: 800\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(TreeTable, \"pN2AzRVj8c46k2h3oV10hjKaEeQ=\", false, function () {\n  return [useTranslation, useMounted];\n});\n\n_c = TreeTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"TreeTable\");","map":{"version":3,"sources":["/home/tj/fl-carla/src/components/tables/TreeTable/TreeTable.tsx"],"names":["React","useState","useEffect","useCallback","Table","getTreeTableData","useTranslation","useMounted","initialPagination","current","pageSize","TreeTable","data","pagination","loading","tableData","setTableData","t","isMounted","fetch","then","res","handleTableChange","rowSelection","onChange","selectedRowKeys","selectedRows","console","log","onSelect","record","selected","onSelectAll","columns","title","dataIndex","key","width","x"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Table } from 'components/common/Table/Table';\nimport { TablePaginationConfig } from 'antd';\nimport { Key, DefaultRecordType } from 'rc-table/lib/interface';\nimport { TreeTableRow, Pagination, getTreeTableData } from 'api/table.api';\nimport { useTranslation } from 'react-i18next';\nimport { useMounted } from '@app/hooks/useMounted';\n\nconst initialPagination: Pagination = {\n  current: 1,\n  pageSize: 4,\n};\n\nexport const TreeTable: React.FC = () => {\n  const [tableData, setTableData] = useState<{ data: TreeTableRow[]; pagination: Pagination; loading: boolean }>({\n    data: [],\n    pagination: initialPagination,\n    loading: false,\n  });\n  const { t } = useTranslation();\n  const { isMounted } = useMounted();\n\n  const fetch = useCallback(\n    (pagination: Pagination) => {\n      setTableData((tableData) => ({ ...tableData, loading: true }));\n      getTreeTableData(pagination).then((res) => {\n        if (isMounted.current) {\n          setTableData({ data: res.data, pagination: res.pagination, loading: false });\n        }\n      });\n    },\n    [isMounted],\n  );\n\n  useEffect(() => {\n    fetch(initialPagination);\n  }, [fetch]);\n\n  const handleTableChange = (pagination: TablePaginationConfig) => {\n    fetch(pagination);\n  };\n\n  const rowSelection = {\n    onChange: (selectedRowKeys: Key[], selectedRows: DefaultRecordType[]) => {\n      console.log(selectedRowKeys, selectedRows);\n    },\n    onSelect: (record: DefaultRecordType, selected: boolean, selectedRows: DefaultRecordType[]) => {\n      console.log(record, selected, selectedRows);\n    },\n    onSelectAll: (selected: boolean, selectedRows: DefaultRecordType[]) => {\n      console.log(selected, selectedRows);\n    },\n  };\n\n  const columns = [\n    {\n      title: t('common.name'),\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: t('common.age'),\n      dataIndex: 'age',\n      key: 'age',\n      width: '12%',\n    },\n    {\n      title: t('common.address'),\n      dataIndex: 'address',\n      width: '30%',\n      key: 'address',\n    },\n  ];\n\n  return (\n    <>\n      <Table\n        columns={columns}\n        dataSource={tableData.data}\n        rowSelection={{ ...rowSelection }}\n        pagination={tableData.pagination}\n        loading={tableData.loading}\n        onChange={handleTableChange}\n        scroll={{ x: 800 }}\n      />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}