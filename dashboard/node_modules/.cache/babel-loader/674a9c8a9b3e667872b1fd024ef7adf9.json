{"ast":null,"code":"var _jsxFileName = \"/home/tj/fl-carla/dashboard/src/components/header/dropdowns/settingsDropdown/settingsOverlay/ThemePicker/ThemePicker.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { MoonSunSwitch } from '@app/components/common/MoonSunSwitch/MoonSunSwitch';\nimport { useAppDispatch, useAppSelector } from '@app/hooks/reduxHooks';\nimport { setTheme } from '@app/store/slices/themeSlice';\nimport { setNightMode } from '@app/store/slices/nightModeSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var ThemePicker = function ThemePicker() {\n  _s();\n\n  var dispatch = useAppDispatch();\n  var theme = useAppSelector(function (state) {\n    return state.theme.theme;\n  });\n\n  var handleClickButton = function handleClickButton(theme) {\n    dispatch(setTheme(theme));\n    dispatch(setNightMode(false));\n  };\n\n  return /*#__PURE__*/_jsxDEV(MoonSunSwitch, {\n    isMoonActive: theme === 'dark',\n    onClickMoon: function onClickMoon() {\n      return handleClickButton('dark');\n    },\n    onClickSun: function onClickSun() {\n      return handleClickButton('light');\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ThemePicker, \"HIXSmBRahAF8q4oh6uEvVByPsZc=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n\n_c = ThemePicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemePicker\");","map":{"version":3,"sources":["/home/tj/fl-carla/dashboard/src/components/header/dropdowns/settingsDropdown/settingsOverlay/ThemePicker/ThemePicker.tsx"],"names":["React","MoonSunSwitch","useAppDispatch","useAppSelector","setTheme","setNightMode","ThemePicker","dispatch","theme","state","handleClickButton"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,oDAA9B;AAEA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,uBAA/C;AACA,SAASC,QAAT,QAAyB,8BAAzB;AACA,SAASC,YAAT,QAA6B,kCAA7B;;AAEA,OAAO,IAAMC,WAAqB,GAAG,SAAxBA,WAAwB,GAAM;AAAA;;AACzC,MAAMC,QAAQ,GAAGL,cAAc,EAA/B;AACA,MAAMM,KAAK,GAAGL,cAAc,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACD,KAAN,CAAYA,KAAvB;AAAA,GAAD,CAA5B;;AAEA,MAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAACF,KAAD,EAAsB;AAC9CD,IAAAA,QAAQ,CAACH,QAAQ,CAACI,KAAD,CAAT,CAAR;AACAD,IAAAA,QAAQ,CAACF,YAAY,CAAC,KAAD,CAAb,CAAR;AACD,GAHD;;AAKA,sBACE,QAAC,aAAD;AACE,IAAA,YAAY,EAAEG,KAAK,KAAK,MAD1B;AAEE,IAAA,WAAW,EAAE;AAAA,aAAME,iBAAiB,CAAC,MAAD,CAAvB;AAAA,KAFf;AAGE,IAAA,UAAU,EAAE;AAAA,aAAMA,iBAAiB,CAAC,OAAD,CAAvB;AAAA;AAHd;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CAhBM;;GAAMJ,W;UACMJ,c,EACHC,c;;;KAFHG,W","sourcesContent":["import React from 'react';\nimport { MoonSunSwitch } from '@app/components/common/MoonSunSwitch/MoonSunSwitch';\nimport { ThemeType } from '@app/interfaces/interfaces';\nimport { useAppDispatch, useAppSelector } from '@app/hooks/reduxHooks';\nimport { setTheme } from '@app/store/slices/themeSlice';\nimport { setNightMode } from '@app/store/slices/nightModeSlice';\n\nexport const ThemePicker: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const theme = useAppSelector((state) => state.theme.theme);\n\n  const handleClickButton = (theme: ThemeType) => {\n    dispatch(setTheme(theme));\n    dispatch(setNightMode(false));\n  };\n\n  return (\n    <MoonSunSwitch\n      isMoonActive={theme === 'dark'}\n      onClickMoon={() => handleClickButton('dark')}\n      onClickSun={() => handleClickButton('light')}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}