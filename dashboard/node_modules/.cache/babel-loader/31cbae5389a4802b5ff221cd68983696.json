{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\n\nvar _jsxFileName = \"/home/tj/fl-carla/src/components/header/dropdowns/settingsDropdown/settingsOverlay/nightModeSettings/NightModeSettings.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _templateObject;\n\nimport React from 'react';\nimport { NightTimePicker } from './NightTimePicker/NightTimePicker';\nimport { Switch } from '@app/components/common/Switch/Switch';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { useAppDispatch, useAppSelector } from '@app/hooks/reduxHooks';\nimport { setNightMode, setNightTime } from '@app/store/slices/nightModeSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var NightModeSettings = function NightModeSettings() {\n  _s();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var dispatch = useAppDispatch();\n  var nightModeState = useAppSelector(function (state) {\n    return state.nightMode;\n  });\n  var isNightMode = nightModeState.isNightMode;\n  var nightTime = nightModeState.nightTime;\n\n  var handleChange = function handleChange(isNightMode) {\n    dispatch(setNightMode(isNightMode));\n  };\n\n  var handleNightTime = function handleNightTime(nightTime) {\n    dispatch(setNightTime(nightTime));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SwitchContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: t('common.auto')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Switch, {\n        checkedChildren: \"On\",\n        unCheckedChildren: \"Off\",\n        checked: isNightMode,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, _this), isNightMode && /*#__PURE__*/_jsxDEV(NightTimePicker, {\n      nightTime: nightTime,\n      setNightTime: handleNightTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 23\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(NightModeSettings, \"b767xlPBzJpyZB3f52t6MjB9xik=\", false, function () {\n  return [useTranslation, useAppDispatch, useAppSelector];\n});\n\n_c = NightModeSettings;\nexport var SwitchContainer = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n\"])));\n_c2 = SwitchContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NightModeSettings\");\n$RefreshReg$(_c2, \"SwitchContainer\");","map":{"version":3,"sources":["/home/tj/fl-carla/src/components/header/dropdowns/settingsDropdown/settingsOverlay/nightModeSettings/NightModeSettings.tsx"],"names":["React","NightTimePicker","Switch","styled","useTranslation","useAppDispatch","useAppSelector","setNightMode","setNightTime","NightModeSettings","t","dispatch","nightModeState","state","nightMode","isNightMode","nightTime","handleChange","handleNightTime","SwitchContainer","div"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,mCAAhC;AACA,SAASC,MAAT,QAAuB,sCAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,uBAA/C;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,kCAA3C;;;AAEA,OAAO,IAAMC,iBAA2B,GAAG,SAA9BA,iBAA8B,GAAM;AAAA;;AAC/C,wBAAcL,cAAc,EAA5B;AAAA,MAAQM,CAAR,mBAAQA,CAAR;;AAEA,MAAMC,QAAQ,GAAGN,cAAc,EAA/B;AACA,MAAMO,cAAc,GAAGN,cAAc,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACC,SAAjB;AAAA,GAAD,CAArC;AACA,MAAMC,WAAW,GAAGH,cAAc,CAACG,WAAnC;AACA,MAAMC,SAAS,GAAGJ,cAAc,CAACI,SAAjC;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACF,WAAD,EAA0B;AAC7CJ,IAAAA,QAAQ,CAACJ,YAAY,CAACQ,WAAD,CAAb,CAAR;AACD,GAFD;;AAIA,MAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACF,SAAD,EAAyB;AAC/CL,IAAAA,QAAQ,CAACH,YAAY,CAACQ,SAAD,CAAb,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,eAAD;AAAA,8BACE;AAAA,kBAAON,CAAC,CAAC,aAAD;AAAR;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,MAAD;AAAQ,QAAA,eAAe,EAAC,IAAxB;AAA6B,QAAA,iBAAiB,EAAC,KAA/C;AAAqD,QAAA,OAAO,EAAEK,WAA9D;AAA2E,QAAA,QAAQ,EAAEE;AAArF;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAKGF,WAAW,iBAAI,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAEC,SAA5B;AAAuC,MAAA,YAAY,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,aALlB;AAAA,kBADF;AASD,CAzBM;;GAAMT,iB;UACGL,c,EAEGC,c,EACMC,c;;;KAJZG,iB;AA2Bb,OAAO,IAAMU,eAAe,GAAGhB,MAAM,CAACiB,GAAV,4HAArB;MAAMD,e","sourcesContent":["import React from 'react';\nimport { NightTimePicker } from './NightTimePicker/NightTimePicker';\nimport { Switch } from '@app/components/common/Switch/Switch';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { useAppDispatch, useAppSelector } from '@app/hooks/reduxHooks';\nimport { setNightMode, setNightTime } from '@app/store/slices/nightModeSlice';\n\nexport const NightModeSettings: React.FC = () => {\n  const { t } = useTranslation();\n\n  const dispatch = useAppDispatch();\n  const nightModeState = useAppSelector((state) => state.nightMode);\n  const isNightMode = nightModeState.isNightMode;\n  const nightTime = nightModeState.nightTime;\n\n  const handleChange = (isNightMode: boolean) => {\n    dispatch(setNightMode(isNightMode));\n  };\n\n  const handleNightTime = (nightTime: number[]) => {\n    dispatch(setNightTime(nightTime));\n  };\n\n  return (\n    <>\n      <SwitchContainer>\n        <span>{t('common.auto')}</span>\n        <Switch checkedChildren=\"On\" unCheckedChildren=\"Off\" checked={isNightMode} onChange={handleChange} />\n      </SwitchContainer>\n      {isNightMode && <NightTimePicker nightTime={nightTime} setNightTime={handleNightTime} />}\n    </>\n  );\n};\n\nexport const SwitchContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n"]},"metadata":{},"sourceType":"module"}