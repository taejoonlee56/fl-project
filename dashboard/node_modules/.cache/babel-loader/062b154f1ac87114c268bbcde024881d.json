{"ast":null,"code":"import _toConsumableArray from \"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/tj/fl-carla/src/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/PaymentMethod.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row } from 'antd';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { Card } from '@app/components/common/Card/Card';\nimport { PaymentCardsWidget } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/PaymentCardsWidget';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport { cards as initialCards } from '@app/constants/cards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var PaymentMethod = function PaymentMethod() {\n  _s();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(initialCards),\n      _useState2 = _slicedToArray(_useState, 2),\n      cards = _useState2[0],\n      setCards = _useState2[1];\n\n  var _useResponsive = useResponsive(),\n      isTablet = _useResponsive.isTablet;\n\n  var handleCardRemove = function handleCardRemove(cardNumber) {\n    return setCards(cards.filter(function (card) {\n      return card.number !== cardNumber;\n    }));\n  };\n\n  var handleCardAdd = function handleCardAdd(card) {\n    setCards([].concat(_toConsumableArray(cards), [card]));\n  };\n\n  var content = /*#__PURE__*/_jsxDEV(Row, {\n    gutter: [32, 32],\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      span: 24,\n      children: /*#__PURE__*/_jsxDEV(BaseForm.Title, {\n        children: t('profile.nav.payments.paymentMethod')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Col, {\n      span: 24,\n      children: /*#__PURE__*/_jsxDEV(PaymentCardsWidget, {\n        cards: cards,\n        onCardRemove: handleCardRemove,\n        onCardAdd: handleCardAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, _this);\n\n  return isTablet ? content : /*#__PURE__*/_jsxDEV(Card, {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 31\n  }, _this);\n};\n\n_s(PaymentMethod, \"xRsOPU/D7vCGHi6OWkH4UtzSerc=\", false, function () {\n  return [useTranslation, useResponsive];\n});\n\n_c = PaymentMethod;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentMethod\");","map":{"version":3,"sources":["/home/tj/fl-carla/src/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/PaymentMethod.tsx"],"names":["React","useState","useTranslation","Col","Row","BaseForm","Card","PaymentCardsWidget","useResponsive","cards","initialCards","PaymentMethod","t","setCards","isTablet","handleCardRemove","cardNumber","filter","card","number","handleCardAdd","content"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AACA,SAASC,QAAT,QAAyB,gDAAzB;AACA,SAASC,IAAT,QAAqB,kCAArB;AACA,SAASC,kBAAT,QAAmC,kGAAnC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,KAAK,IAAIC,YAAlB,QAAsC,sBAAtC;;AAGA,OAAO,IAAMC,aAAuB,GAAG,SAA1BA,aAA0B,GAAM;AAAA;;AAC3C,wBAAcT,cAAc,EAA5B;AAAA,MAAQU,CAAR,mBAAQA,CAAR;;AAEA,kBAA0BX,QAAQ,CAAeS,YAAf,CAAlC;AAAA;AAAA,MAAOD,KAAP;AAAA,MAAcI,QAAd;;AAEA,uBAAqBL,aAAa,EAAlC;AAAA,MAAQM,QAAR,kBAAQA,QAAR;;AAEA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,UAAD;AAAA,WAAwBH,QAAQ,CAACJ,KAAK,CAACQ,MAAN,CAAa,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,MAAL,KAAgBH,UAA1B;AAAA,KAAb,CAAD,CAAhC;AAAA,GAAzB;;AAEA,MAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAACF,IAAD,EAAsB;AAC1CL,IAAAA,QAAQ,8BAAKJ,KAAL,IAAYS,IAAZ,GAAR;AACD,GAFD;;AAIA,MAAMG,OAAO,gBACX,QAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA,6BACE,QAAC,QAAD,CAAU,KAAV;AAAA,kBAAiBT,CAAC,CAAC,oCAAD;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eAIE,QAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA,6BACE,QAAC,kBAAD;AAAoB,QAAA,KAAK,EAAEH,KAA3B;AAAkC,QAAA,YAAY,EAAEM,gBAAhD;AAAkE,QAAA,SAAS,EAAEK;AAA7E;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAJF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;;AAWA,SAAON,QAAQ,GAAGO,OAAH,gBAAa,QAAC,IAAD;AAAA,cAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,WAA5B;AACD,CAzBM;;GAAMV,a;UACGT,c,EAIOM,a;;;KALVG,a","sourcesContent":["import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row } from 'antd';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { Card } from '@app/components/common/Card/Card';\nimport { PaymentCardsWidget } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/PaymentCardsWidget';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport { cards as initialCards } from '@app/constants/cards';\nimport { CreditCard } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/interfaces';\n\nexport const PaymentMethod: React.FC = () => {\n  const { t } = useTranslation();\n\n  const [cards, setCards] = useState<CreditCard[]>(initialCards);\n\n  const { isTablet } = useResponsive();\n\n  const handleCardRemove = (cardNumber: string) => setCards(cards.filter((card) => card.number !== cardNumber));\n\n  const handleCardAdd = (card: CreditCard) => {\n    setCards([...cards, card]);\n  };\n\n  const content = (\n    <Row gutter={[32, 32]}>\n      <Col span={24}>\n        <BaseForm.Title>{t('profile.nav.payments.paymentMethod')}</BaseForm.Title>\n      </Col>\n      <Col span={24}>\n        <PaymentCardsWidget cards={cards} onCardRemove={handleCardRemove} onCardAdd={handleCardAdd} />\n      </Col>\n    </Row>\n  );\n\n  return isTablet ? content : <Card>{content}</Card>;\n};\n"]},"metadata":{},"sourceType":"module"}