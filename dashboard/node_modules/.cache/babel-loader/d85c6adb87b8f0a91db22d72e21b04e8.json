{"ast":null,"code":"var _jsxFileName = \"/home/tj/fl-carla/src/components/common/pickers/TimeRangePicker.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { DayjsDatePicker } from '@app/components/common/pickers/DayjsDatePicker';\nimport { Dates } from '@app/constants/Dates';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar clearDate = Dates.getToday().hour(0).minute(0).second(0).millisecond(0);\nvar clearDateMs = +clearDate;\nexport var TimeRangePicker = function TimeRangePicker(_ref) {\n  _s();\n\n  var timeRange = _ref.timeRange,\n      setTimeRange = _ref.setTimeRange;\n  var timeRangePrepared = useMemo(function () {\n    return timeRange.map(function (time) {\n      return clearDate.add(time);\n    });\n  }, [timeRange]); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  var onChange = function onChange(timeRange) {\n    var timeRangeSinceTodayMs = timeRange.map(function (time) {\n      return time.subtract(clearDateMs, 'ms');\n    }).map(function (time) {\n      return +time;\n    });\n    setTimeRange(timeRangeSinceTodayMs);\n  };\n\n  return /*#__PURE__*/_jsxDEV(DayjsDatePicker.RangePicker, {\n    value: [timeRangePrepared[0], timeRangePrepared[1]],\n    picker: \"time\",\n    format: \"HH:mm\",\n    onChange: onChange,\n    allowClear: false,\n    order: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TimeRangePicker, \"4xYmeMBRLXI6UzyykTPHM4mGFYQ=\");\n\n_c = TimeRangePicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeRangePicker\");","map":{"version":3,"sources":["/home/tj/fl-carla/src/components/common/pickers/TimeRangePicker.tsx"],"names":["React","useMemo","DayjsDatePicker","Dates","clearDate","getToday","hour","minute","second","millisecond","clearDateMs","TimeRangePicker","timeRange","setTimeRange","timeRangePrepared","map","time","add","onChange","timeRangeSinceTodayMs","subtract"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,eAAT,QAAgC,gDAAhC;AACA,SAAkBC,KAAlB,QAA+B,sBAA/B;;AAEA,IAAMC,SAAS,GAAGD,KAAK,CAACE,QAAN,GAAiBC,IAAjB,CAAsB,CAAtB,EAAyBC,MAAzB,CAAgC,CAAhC,EAAmCC,MAAnC,CAA0C,CAA1C,EAA6CC,WAA7C,CAAyD,CAAzD,CAAlB;AACA,IAAMC,WAAW,GAAG,CAACN,SAArB;AAOA,OAAO,IAAMO,eAA0C,GAAG,SAA7CA,eAA6C,OAAiC;AAAA;;AAAA,MAA9BC,SAA8B,QAA9BA,SAA8B;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AACzF,MAAMC,iBAAiB,GAAGb,OAAO,CAAC;AAAA,WAAMW,SAAS,CAACG,GAAV,CAAc,UAACC,IAAD;AAAA,aAAUZ,SAAS,CAACa,GAAV,CAAcD,IAAd,CAAV;AAAA,KAAd,CAAN;AAAA,GAAD,EAAqD,CAACJ,SAAD,CAArD,CAAjC,CADyF,CAGzF;;AACA,MAAMM,QAAQ,GAAG,SAAXA,QAAW,CAACN,SAAD,EAAoB;AACnC,QAAMO,qBAAqB,GAAGP,SAAS,CACpCG,GAD2B,CACvB,UAACC,IAAD;AAAA,aAAmBA,IAAI,CAACI,QAAL,CAAcV,WAAd,EAA2B,IAA3B,CAAnB;AAAA,KADuB,EAE3BK,GAF2B,CAEvB,UAACC,IAAD;AAAA,aAAmB,CAACA,IAApB;AAAA,KAFuB,CAA9B;AAIAH,IAAAA,YAAY,CAACM,qBAAD,CAAZ;AACD,GAND;;AAQA,sBACE,QAAC,eAAD,CAAiB,WAAjB;AACE,IAAA,KAAK,EAAE,CAACL,iBAAiB,CAAC,CAAD,CAAlB,EAAuBA,iBAAiB,CAAC,CAAD,CAAxC,CADT;AAEE,IAAA,MAAM,EAAC,MAFT;AAGE,IAAA,MAAM,EAAC,OAHT;AAIE,IAAA,QAAQ,EAAEI,QAJZ;AAKE,IAAA,UAAU,EAAE,KALd;AAME,IAAA,KAAK,EAAE;AANT;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CAtBM;;GAAMP,e;;KAAAA,e","sourcesContent":["import React, { useMemo } from 'react';\nimport { DayjsDatePicker } from '@app/components/common/pickers/DayjsDatePicker';\nimport { AppDate, Dates } from '@app/constants/Dates';\n\nconst clearDate = Dates.getToday().hour(0).minute(0).second(0).millisecond(0);\nconst clearDateMs = +clearDate;\n\ninterface TimePickerProps {\n  timeRange: number[];\n  setTimeRange: (timeRange: number[]) => void;\n}\n\nexport const TimeRangePicker: React.FC<TimePickerProps> = ({ timeRange, setTimeRange }) => {\n  const timeRangePrepared = useMemo(() => timeRange.map((time) => clearDate.add(time)), [timeRange]);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const onChange = (timeRange: any) => {\n    const timeRangeSinceTodayMs = timeRange\n      .map((time: AppDate) => time.subtract(clearDateMs, 'ms'))\n      .map((time: AppDate) => +time);\n\n    setTimeRange(timeRangeSinceTodayMs);\n  };\n\n  return (\n    <DayjsDatePicker.RangePicker\n      value={[timeRangePrepared[0], timeRangePrepared[1]]}\n      picker=\"time\"\n      format=\"HH:mm\"\n      onChange={onChange}\n      allowClear={false}\n      order={false}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}