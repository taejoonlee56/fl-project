{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\taggedTemplateLiteral.js\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\n\nimport { Avatar, Space, Typography } from 'antd';\nimport styled from 'styled-components';\nexport var NotificationIcon = styled(Avatar)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\"])));\nexport var Title = styled(Typography.Text)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  font-size: 0.875rem;\\n  font-weight: 600;\\n\"])));\nexport var Description = styled(Typography.Text)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  font-size: 0.875rem;\\n\"])));\nexport var SpaceWrapper = styled(Space)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  background-color: \", \";\\n\\n  & \", \", span[role='img'] {\\n    \", \";\\n\\n    \", \";\\n\\n    \", \";\\n\\n    \", \";\\n\\n    \", \";\\n  }\\n\\n  & span[role='img'] {\\n    font-size: 2rem;\\n  }\\n\"])), function (props) {\n  return props.theme.colors.main.mainBackground;\n}, Title, function (props) {\n  return props.type === 'error' && \"color: \".concat(props.theme.colors.main.error);\n}, function (props) {\n  return props.type === 'warning' && \"color: \".concat(props.theme.colors.main.warning);\n}, function (props) {\n  return props.type === 'success' && \"color: \".concat(props.theme.colors.main.success);\n}, function (props) {\n  return props.type === 'info' && \"color: \".concat(props.theme.colors.main.primary);\n}, function (props) {\n  return props.type === 'mention' && \"color: \".concat(props.theme.colors.main.primary);\n});","map":{"version":3,"sources":["D:/fl-carla/src/components/common/Notification/Notification.styles.ts"],"names":["Avatar","Space","Typography","styled","NotificationIcon","Title","Text","Description","SpaceWrapper","props","theme","colors","main","mainBackground","type","error","warning","success","primary"],"mappings":";;;;AAAA,SAASA,MAAT,EAAiBC,KAAjB,EAAwBC,UAAxB,QAA0C,MAA1C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAOA,OAAO,IAAMC,gBAAgB,GAAGD,MAAM,CAACH,MAAD,CAAT,qEAAtB;AAEP,OAAO,IAAMK,KAAK,GAAGF,MAAM,CAACD,UAAU,CAACI,IAAZ,CAAT,sHAAX;AAKP,OAAO,IAAMC,WAAW,GAAGJ,MAAM,CAACD,UAAU,CAACI,IAAZ,CAAT,iGAAjB;AAIP,OAAO,IAAME,YAAY,GAAGL,MAAM,CAACF,KAAD,CAAT,8PACH,UAACQ,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,IAAnB,CAAwBC,cAAnC;AAAA,CADG,EAGnBR,KAHmB,EAInB,UAACI,KAAD;AAAA,SAAWA,KAAK,CAACK,IAAN,KAAe,OAAf,qBAAoCL,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,IAAnB,CAAwBG,KAA5D,CAAX;AAAA,CAJmB,EAMnB,UAACN,KAAD;AAAA,SAAWA,KAAK,CAACK,IAAN,KAAe,SAAf,qBAAsCL,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,IAAnB,CAAwBI,OAA9D,CAAX;AAAA,CANmB,EAQnB,UAACP,KAAD;AAAA,SAAWA,KAAK,CAACK,IAAN,KAAe,SAAf,qBAAsCL,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,IAAnB,CAAwBK,OAA9D,CAAX;AAAA,CARmB,EAUnB,UAACR,KAAD;AAAA,SAAWA,KAAK,CAACK,IAAN,KAAe,MAAf,qBAAmCL,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,IAAnB,CAAwBM,OAA3D,CAAX;AAAA,CAVmB,EAYnB,UAACT,KAAD;AAAA,SAAWA,KAAK,CAACK,IAAN,KAAe,SAAf,qBAAsCL,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,IAAnB,CAAwBM,OAA9D,CAAX;AAAA,CAZmB,CAAlB","sourcesContent":["import { Avatar, Space, Typography } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { NotificationType } from './Notification';\r\n\r\ninterface SpacewWrapperProps {\r\n  type: NotificationType;\r\n}\r\n\r\nexport const NotificationIcon = styled(Avatar)``;\r\n\r\nexport const Title = styled(Typography.Text)`\r\n  font-size: 0.875rem;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const Description = styled(Typography.Text)`\r\n  font-size: 0.875rem;\r\n`;\r\n\r\nexport const SpaceWrapper = styled(Space)<SpacewWrapperProps>`\r\n  background-color: ${(props) => props.theme.colors.main.mainBackground};\r\n\r\n  & ${Title}, span[role='img'] {\r\n    ${(props) => props.type === 'error' && `color: ${props.theme.colors.main.error}`};\r\n\r\n    ${(props) => props.type === 'warning' && `color: ${props.theme.colors.main.warning}`};\r\n\r\n    ${(props) => props.type === 'success' && `color: ${props.theme.colors.main.success}`};\r\n\r\n    ${(props) => props.type === 'info' && `color: ${props.theme.colors.main.primary}`};\r\n\r\n    ${(props) => props.type === 'mention' && `color: ${props.theme.colors.main.primary}`};\r\n  }\r\n\r\n  & span[role='img'] {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}