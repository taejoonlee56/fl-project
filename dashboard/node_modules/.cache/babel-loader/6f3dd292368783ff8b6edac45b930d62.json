{"ast":null,"code":"import _defineProperty from \"/home/tj/fl-carla/dashboard/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/tj/fl-carla/dashboard/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/tj/fl-carla/dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/tj/fl-carla/dashboard/src/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/PaymentForm/PaymentForm.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport { Col, Form, Row } from 'antd';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { BaseButtonsGroup } from '@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';\nimport { CardNumberItem } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CardNumberItem/CardNumberItem';\nimport { CardholderItem } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CardholderItem/CardholderItem';\nimport { ExpDateItem } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/ExpDateItem/ExpDateItem';\nimport { CVVItem } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CVVItem/CVVItem';\nimport { CardThemeItem } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CardThemeItem/CardThemeItem';\nimport { cardThemes } from '@app/constants/cardThemes';\nimport * as S from './PaymentForm.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var clearCardData = {\n  name: '',\n  cvc: '',\n  expiry: '',\n  number: '',\n  focused: '',\n  background: cardThemes[0].background,\n  isEdit: false\n};\nexport var PaymentForm = function PaymentForm(_ref) {\n  _s();\n\n  var closeModal = _ref.closeModal,\n      onFormFinish = _ref.onFormFinish;\n\n  var _useState = useState(clearCardData),\n      _useState2 = _slicedToArray(_useState, 2),\n      cardData = _useState2[0],\n      setCardData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isFieldsChanged = _useState6[0],\n      setFieldsChanged = _useState6[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var handleInputFocus = useCallback(function (event) {\n    setCardData(_objectSpread(_objectSpread({}, cardData), {}, {\n      focused: event.target.name\n    }));\n  }, [setCardData, cardData]);\n  var onFinish = useCallback(function (values) {\n    setLoading(true);\n    setTimeout(function () {\n      setLoading(false);\n      setFieldsChanged(false);\n\n      var card = _objectSpread(_objectSpread({}, values), {}, {\n        background: cardData.background\n      });\n\n      onFormFinish(card);\n      setCardData(clearCardData);\n      closeModal();\n      form.setFieldsValue(clearCardData);\n    }, 1000);\n  }, [cardData.background, closeModal, form, onFormFinish]);\n  return /*#__PURE__*/_jsxDEV(BaseButtonsForm, {\n    form: form,\n    requiredMark: \"optional\",\n    name: \"paymentCard\",\n    onFinish: onFinish,\n    footer: /*#__PURE__*/_jsxDEV(BaseButtonsGroup, {\n      loading: isLoading,\n      onCancel: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }, _this),\n    initialValues: clearCardData,\n    onValuesChange: function onValuesChange(field) {\n      var values = Object.entries(field)[0];\n      setCardData(_objectSpread(_objectSpread({}, cardData), {}, _defineProperty({}, values[0], values[1])));\n    },\n    isFieldsChanged: isFieldsChanged,\n    onFieldsChange: function onFieldsChange() {\n      return setFieldsChanged(true);\n    },\n    children: [/*#__PURE__*/_jsxDEV(S.PayCard, {\n      cardData: cardData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(S.FormItemsWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(CardNumberItem, {\n        handleInputFocus: handleInputFocus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(CardholderItem, {\n        handleInputFocus: handleInputFocus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Row, {\n        gutter: [20, 0],\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(ExpDateItem, {\n            handleInputFocus: handleInputFocus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(CVVItem, {\n            handleInputFocus: handleInputFocus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(CardThemeItem, {\n        cardData: cardData,\n        setCardData: setCardData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PaymentForm, \"7eDB1K/L7qzci1QUED/QHj1AulQ=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["/home/tj/fl-carla/dashboard/src/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/PaymentForm/PaymentForm.tsx"],"names":["React","useCallback","useState","Col","Form","Row","BaseButtonsForm","BaseButtonsGroup","CardNumberItem","CardholderItem","ExpDateItem","CVVItem","CardThemeItem","cardThemes","S","clearCardData","name","cvc","expiry","number","focused","background","isEdit","PaymentForm","closeModal","onFormFinish","cardData","setCardData","isLoading","setLoading","isFieldsChanged","setFieldsChanged","useForm","form","handleInputFocus","event","target","onFinish","values","setTimeout","card","setFieldsValue","field","Object","entries"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { Col, Form, Row } from 'antd';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { BaseButtonsGroup } from '@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';\nimport { CardNumberItem } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CardNumberItem/CardNumberItem';\nimport { CardholderItem } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CardholderItem/CardholderItem';\nimport { ExpDateItem } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/ExpDateItem/ExpDateItem';\nimport { CVVItem } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CVVItem/CVVItem';\nimport { CardThemeItem } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CardThemeItem/CardThemeItem';\nimport { CreditCard } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/interfaces';\nimport { cardThemes } from '@app/constants/cardThemes';\nimport * as S from './PaymentForm.styles';\n\nexport const clearCardData: CreditCard = {\n  name: '',\n  cvc: '',\n  expiry: '',\n  number: '',\n  focused: '',\n  background: cardThemes[0].background,\n  isEdit: false,\n};\n\ninterface PaymentFormProps {\n  closeModal: () => void;\n  onFormFinish: (card: CreditCard) => void;\n}\n\nexport const PaymentForm: React.FC<PaymentFormProps> = ({ closeModal, onFormFinish }) => {\n  const [cardData, setCardData] = useState<CreditCard>(clearCardData);\n  const [isLoading, setLoading] = useState(false);\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n\n  const [form] = Form.useForm();\n\n  const handleInputFocus = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setCardData({\n        ...cardData,\n        focused: event.target.name,\n      });\n    },\n    [setCardData, cardData],\n  );\n\n  const onFinish = useCallback(\n    (values) => {\n      setLoading(true);\n      setTimeout(() => {\n        setLoading(false);\n        setFieldsChanged(false);\n        const card = { ...values, background: cardData.background };\n        onFormFinish(card);\n        setCardData(clearCardData);\n        closeModal();\n        form.setFieldsValue(clearCardData);\n      }, 1000);\n    },\n    [cardData.background, closeModal, form, onFormFinish],\n  );\n\n  return (\n    <BaseButtonsForm\n      form={form}\n      requiredMark=\"optional\"\n      name=\"paymentCard\"\n      onFinish={onFinish}\n      footer={<BaseButtonsGroup loading={isLoading} onCancel={closeModal} />}\n      initialValues={clearCardData}\n      onValuesChange={(field) => {\n        const values = Object.entries(field)[0];\n\n        setCardData({ ...cardData, [values[0]]: values[1] });\n      }}\n      isFieldsChanged={isFieldsChanged}\n      onFieldsChange={() => setFieldsChanged(true)}\n    >\n      <S.PayCard cardData={cardData} />\n      <S.FormItemsWrapper>\n        <CardNumberItem handleInputFocus={handleInputFocus} />\n        <CardholderItem handleInputFocus={handleInputFocus} />\n        <Row gutter={[20, 0]}>\n          <Col span={12}>\n            <ExpDateItem handleInputFocus={handleInputFocus} />\n          </Col>\n          <Col span={12}>\n            <CVVItem handleInputFocus={handleInputFocus} />\n          </Col>\n        </Row>\n        <CardThemeItem cardData={cardData} setCardData={setCardData} />\n      </S.FormItemsWrapper>\n    </BaseButtonsForm>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}