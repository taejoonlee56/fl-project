{"ast":null,"code":"var _jsxFileName = \"/home/tj/fl-carla/src/components/common/Feed/Feed.tsx\",\n    _this = this;\n\nimport React from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { ArticleCard } from '../ArticleCard/ArticleCard';\nimport { Spin } from 'antd';\nimport * as S from './Feed.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Feed = function Feed(_ref) {\n  var cards = _ref.cards,\n      next = _ref.next,\n      hasMore = _ref.hasMore;\n  return /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n    dataLength: cards.length,\n    next: next,\n    hasMore: hasMore,\n    loader: /*#__PURE__*/_jsxDEV(S.SpinnerWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Spin, {\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, _this),\n    scrollableTarget: \"main-content\",\n    children: /*#__PURE__*/_jsxDEV(S.NewsWrapper, {\n      children: cards.map(function (post, index) {\n        return /*#__PURE__*/_jsxDEV(ArticleCard, {\n          title: post.title,\n          description: post.text,\n          date: post.date,\n          imgUrl: post.img,\n          author: post.author,\n          avatar: post.avatarUrl,\n          tags: post.tags\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, _this);\n};\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/home/tj/fl-carla/src/components/common/Feed/Feed.tsx"],"names":["React","InfiniteScroll","ArticleCard","Spin","S","Feed","cards","next","hasMore","length","map","post","index","title","text","date","img","author","avatarUrl","tags"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAO,KAAKC,CAAZ,MAAmB,eAAnB;;AAkBA,OAAO,IAAMC,IAAyB,GAAG,SAA5BA,IAA4B,OAA8B;AAAA,MAA3BC,KAA2B,QAA3BA,KAA2B;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACrE,sBACE,QAAC,cAAD;AACE,IAAA,UAAU,EAAEF,KAAK,CAACG,MADpB;AAEE,IAAA,IAAI,EAAEF,IAFR;AAGE,IAAA,OAAO,EAAEC,OAHX;AAIE,IAAA,MAAM,eACJ,QAAC,CAAD,CAAG,cAAH;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aALJ;AASE,IAAA,gBAAgB,EAAC,cATnB;AAAA,2BAWE,QAAC,CAAD,CAAG,WAAH;AAAA,gBACGF,KAAK,CAACI,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP;AAAA,4BACT,QAAC,WAAD;AAEE,UAAA,KAAK,EAAED,IAAI,CAACE,KAFd;AAGE,UAAA,WAAW,EAAEF,IAAI,CAACG,IAHpB;AAIE,UAAA,IAAI,EAAEH,IAAI,CAACI,IAJb;AAKE,UAAA,MAAM,EAAEJ,IAAI,CAACK,GALf;AAME,UAAA,MAAM,EAAEL,IAAI,CAACM,MANf;AAOE,UAAA,MAAM,EAAEN,IAAI,CAACO,SAPf;AAQE,UAAA,IAAI,EAAEP,IAAI,CAACQ;AARb,WACOP,KADP;AAAA;AAAA;AAAA;AAAA,iBADS;AAAA,OAAV;AADH;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA,WADF;AA4BD,CA7BM;KAAMP,I","sourcesContent":["import React from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { ArticleCard } from '../ArticleCard/ArticleCard';\nimport { ITag } from '../Tag/Tag';\nimport { Spin } from 'antd';\nimport * as S from './Feed.styles';\n\ninterface FeedCard {\n  avatarUrl: string;\n  author: string;\n  title: string;\n  date: number;\n  text: string;\n  img: string;\n  tags: ITag[];\n}\n\nexport interface FeedProps {\n  cards: FeedCard[];\n  next: () => void;\n  hasMore: boolean;\n}\n\nexport const Feed: React.FC<FeedProps> = ({ cards, next, hasMore }) => {\n  return (\n    <InfiniteScroll\n      dataLength={cards.length}\n      next={next}\n      hasMore={hasMore}\n      loader={\n        <S.SpinnerWrapper>\n          <Spin size=\"large\" />\n        </S.SpinnerWrapper>\n      }\n      scrollableTarget=\"main-content\"\n    >\n      <S.NewsWrapper>\n        {cards.map((post, index) => (\n          <ArticleCard\n            key={index}\n            title={post.title}\n            description={post.text}\n            date={post.date}\n            imgUrl={post.img}\n            author={post.author}\n            avatar={post.avatarUrl}\n            tags={post.tags}\n          />\n        ))}\n      </S.NewsWrapper>\n    </InfiniteScroll>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}