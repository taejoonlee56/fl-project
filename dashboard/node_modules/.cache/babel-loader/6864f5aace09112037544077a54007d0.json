{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from 'react-redux';\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport var useAppDispatch = function useAppDispatch() {\n  _s();\n\n  return useDispatch();\n};\n\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});\n\nexport var useAppSelector = useSelector;","map":{"version":3,"sources":["D:/fl-carla/src/hooks/reduxHooks.ts"],"names":["useDispatch","useSelector","useAppDispatch","useAppSelector"],"mappings":";;AAAA,SAA+BA,WAA/B,EAA4CC,WAA5C,QAA+D,aAA/D;AAGA;AACA;AACA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA;;AAAA,SAAMF,WAAW,EAAjB;AAAA,CAAvB;;GAAME,c;UAAuBF,W;;;AACpC,OAAO,IAAMG,cAA+C,GAAGF,WAAxD","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from '../store/store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n"]},"metadata":{},"sourceType":"module"}