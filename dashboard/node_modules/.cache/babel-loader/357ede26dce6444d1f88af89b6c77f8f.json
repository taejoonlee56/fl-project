{"ast":null,"code":"var _jsxFileName = \"D:\\\\fl-carla\\\\src\\\\components\\\\profile\\\\profileCard\\\\profileFormNav\\\\nav\\\\SecuritySettings\\\\passwordForm\\\\ConfirmPasswordItem\\\\ConfirmPasswordItem.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { InputPassword } from '@app/components/common/inputs/InputPassword/InputPassword';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var ConfirmItemPassword = function ConfirmItemPassword() {\n  _s();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  return /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n    name: \"confirmPassword\",\n    label: t('profile.nav.securitySettings.confirmPassword'),\n    dependencies: ['newPassword'],\n    rules: [{\n      required: true,\n      message: t('profile.nav.securitySettings.requiredPassword')\n    }, function (_ref) {\n      var getFieldValue = _ref.getFieldValue;\n      return {\n        validator: function validator(_, value) {\n          if (!value || getFieldValue('newPassword') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject(new Error(t('profile.nav.securitySettings.dontMatchPassword')));\n        }\n      };\n    }],\n    children: /*#__PURE__*/_jsxDEV(InputPassword, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ConfirmItemPassword, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ConfirmItemPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmItemPassword\");","map":{"version":3,"sources":["D:/fl-carla/src/components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/ConfirmPasswordItem/ConfirmPasswordItem.tsx"],"names":["React","useTranslation","BaseButtonsForm","InputPassword","ConfirmItemPassword","t","required","message","getFieldValue","validator","_","value","Promise","resolve","reject","Error"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,eAAT,QAAgC,8DAAhC;AACA,SAASC,aAAT,QAA8B,2DAA9B;;AAEA,OAAO,IAAMC,mBAA6B,GAAG,SAAhCA,mBAAgC,GAAM;AAAA;;AACjD,wBAAcH,cAAc,EAA5B;AAAA,MAAQI,CAAR,mBAAQA,CAAR;;AAEA,sBACE,QAAC,eAAD,CAAiB,IAAjB;AACE,IAAA,IAAI,EAAC,iBADP;AAEE,IAAA,KAAK,EAAEA,CAAC,CAAC,8CAAD,CAFV;AAGE,IAAA,YAAY,EAAE,CAAC,aAAD,CAHhB;AAIE,IAAA,KAAK,EAAE,CACL;AACEC,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAEF,CAAC,CAAC,+CAAD;AAFZ,KADK,EAKL;AAAA,UAAGG,aAAH,QAAGA,aAAH;AAAA,aAAwB;AACtBC,QAAAA,SADsB,qBACZC,CADY,EACTC,KADS,EACF;AAClB,cAAI,CAACA,KAAD,IAAUH,aAAa,CAAC,aAAD,CAAb,KAAiCG,KAA/C,EAAsD;AACpD,mBAAOC,OAAO,CAACC,OAAR,EAAP;AACD;;AACD,iBAAOD,OAAO,CAACE,MAAR,CAAe,IAAIC,KAAJ,CAAUV,CAAC,CAAC,gDAAD,CAAX,CAAf,CAAP;AACD;AANqB,OAAxB;AAAA,KALK,CAJT;AAAA,2BAmBE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAnBF;AAAA;AAAA;AAAA;AAAA,WADF;AAuBD,CA1BM;;GAAMD,mB;UACGH,c;;;KADHG,mB","sourcesContent":["import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\r\nimport { InputPassword } from '@app/components/common/inputs/InputPassword/InputPassword';\r\n\r\nexport const ConfirmItemPassword: React.FC = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <BaseButtonsForm.Item\r\n      name=\"confirmPassword\"\r\n      label={t('profile.nav.securitySettings.confirmPassword')}\r\n      dependencies={['newPassword']}\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: t('profile.nav.securitySettings.requiredPassword'),\r\n        },\r\n        ({ getFieldValue }) => ({\r\n          validator(_, value) {\r\n            if (!value || getFieldValue('newPassword') === value) {\r\n              return Promise.resolve();\r\n            }\r\n            return Promise.reject(new Error(t('profile.nav.securitySettings.dontMatchPassword')));\r\n          },\r\n        }),\r\n      ]}\r\n    >\r\n      <InputPassword />\r\n    </BaseButtonsForm.Item>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}