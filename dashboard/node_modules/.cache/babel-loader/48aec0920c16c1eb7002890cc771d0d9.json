{"ast":null,"code":"import _slicedToArray from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"D:\\\\fl-carla\\\\src\\\\components\\\\header\\\\dropdowns\\\\searchDropdown\\\\searchOverlay\\\\SearchFilter\\\\SearchFilter.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row } from 'antd';\nimport { categoriesList } from 'constants/categoriesList';\nimport * as S from './SearchFilter.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var SearchFilter = function SearchFilter(_ref) {\n  _s();\n\n  var data = _ref.data,\n      isVisible = _ref.isVisible,\n      children = _ref.children;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedFilter = _useState2[0],\n      setSelectedFilter = _useState2[1];\n\n  var _useState3 = useState(data),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredResults = _useState4[0],\n      setFilteredResults = _useState4[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var filterElements = useMemo(function () {\n    return categoriesList.map(function (filter, index) {\n      return /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        sm: 8,\n        md: 12,\n        xl: 8,\n        children: /*#__PURE__*/_jsxDEV(S.CheckBox, {\n          value: filter.name,\n          children: t(filter.title)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, _this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, _this);\n    });\n  }, [t]);\n  useEffect(function () {\n    if (data) {\n      if (selectedFilter.length > 0) {\n        setFilteredResults(data.filter(function (component) {\n          return selectedFilter.some(function (filter) {\n            return filter === component.category;\n          });\n        }));\n      } else {\n        setFilteredResults(data);\n      }\n    } else {\n      setFilteredResults(null);\n    }\n  }, [data, selectedFilter]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(S.FilterWrapper, {\n      isVisible: isVisible,\n      children: /*#__PURE__*/_jsxDEV(S.CheckboxGroup, {\n        onChange: function onChange(checkedValues) {\n          return setSelectedFilter(checkedValues);\n        },\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: filterElements\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, _this), filteredResults && children(filteredResults)]\n  }, void 0, true);\n};\n\n_s(SearchFilter, \"68kYs1iFqi51jfsB8juxPnXacIw=\", false, function () {\n  return [useTranslation];\n});\n\n_c = SearchFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchFilter\");","map":{"version":3,"sources":["D:/fl-carla/src/components/header/dropdowns/searchDropdown/searchOverlay/SearchFilter/SearchFilter.tsx"],"names":["React","useEffect","useMemo","useState","useTranslation","Col","Row","categoriesList","S","SearchFilter","data","isVisible","children","selectedFilter","setSelectedFilter","filteredResults","setFilteredResults","t","filterElements","map","filter","index","name","title","length","component","some","category","checkedValues"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AACA,SAASC,cAAT,QAA6C,0BAA7C;AAEA,OAAO,KAAKC,CAAZ,MAAmB,uBAAnB;;;AAQA,OAAO,IAAMC,YAAyC,GAAG,SAA5CA,YAA4C,OAAmC;AAAA;;AAAA,MAAhCC,IAAgC,QAAhCA,IAAgC;AAAA,MAA1BC,SAA0B,QAA1BA,SAA0B;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAC1F,kBAA4CT,QAAQ,CAAiB,EAAjB,CAApD;AAAA;AAAA,MAAOU,cAAP;AAAA,MAAuBC,iBAAvB;;AACA,mBAA8CX,QAAQ,CAA8BO,IAA9B,CAAtD;AAAA;AAAA,MAAOK,eAAP;AAAA,MAAwBC,kBAAxB;;AAEA,wBAAcZ,cAAc,EAA5B;AAAA,MAAQa,CAAR,mBAAQA,CAAR;;AAEA,MAAMC,cAAc,GAAGhB,OAAO,CAC5B;AAAA,WACEK,cAAc,CAACY,GAAf,CAAmB,UAACC,MAAD,EAASC,KAAT;AAAA,0BACjB,QAAC,GAAD;AAAiB,QAAA,EAAE,EAAE,EAArB;AAAyB,QAAA,EAAE,EAAE,CAA7B;AAAgC,QAAA,EAAE,EAAE,EAApC;AAAwC,QAAA,EAAE,EAAE,CAA5C;AAAA,+BACE,QAAC,CAAD,CAAG,QAAH;AAAwB,UAAA,KAAK,EAAED,MAAM,CAACE,IAAtC;AAAA,oBACGL,CAAC,CAACG,MAAM,CAACG,KAAR;AADJ,WAAiBF,KAAjB;AAAA;AAAA;AAAA;AAAA;AADF,SAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,eADiB;AAAA,KAAnB,CADF;AAAA,GAD4B,EAS5B,CAACJ,CAAD,CAT4B,CAA9B;AAYAhB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIS,IAAJ,EAAU;AACR,UAAIG,cAAc,CAACW,MAAf,GAAwB,CAA5B,EAA+B;AAC7BR,QAAAA,kBAAkB,CAACN,IAAI,CAACU,MAAL,CAAY,UAACK,SAAD;AAAA,iBAAeZ,cAAc,CAACa,IAAf,CAAoB,UAACN,MAAD;AAAA,mBAAYA,MAAM,KAAKK,SAAS,CAACE,QAAjC;AAAA,WAApB,CAAf;AAAA,SAAZ,CAAD,CAAlB;AACD,OAFD,MAEO;AACLX,QAAAA,kBAAkB,CAACN,IAAD,CAAlB;AACD;AACF,KAND,MAMO;AACLM,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;AACF,GAVQ,EAUN,CAACN,IAAD,EAAOG,cAAP,CAVM,CAAT;AAYA,sBACE;AAAA,4BACE,QAAC,CAAD,CAAG,aAAH;AAAiB,MAAA,SAAS,EAAEF,SAA5B;AAAA,6BACE,QAAC,CAAD,CAAG,aAAH;AAAiB,QAAA,QAAQ,EAAE,kBAACiB,aAAD;AAAA,iBAAmBd,iBAAiB,CAACc,aAAD,CAApC;AAAA,SAA3B;AAAA,+BACE,QAAC,GAAD;AAAA,oBAAMV;AAAN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,EAOGH,eAAe,IAAIH,QAAQ,CAACG,eAAD,CAP9B;AAAA,kBADF;AAWD,CAzCM;;GAAMN,Y;UAIGL,c;;;KAJHK,Y","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Col, Row } from 'antd';\r\nimport { categoriesList, CategoryType } from 'constants/categoriesList';\r\nimport { CategoryComponents } from 'components/header/HeaderSearch/HeaderSearch';\r\nimport * as S from './SearchFilter.styles';\r\n\r\ninterface SearchFilterProps {\r\n  data: CategoryComponents[] | null;\r\n  isVisible: boolean;\r\n  children: (filteredResults: CategoryComponents[]) => React.ReactNode;\r\n}\r\n\r\nexport const SearchFilter: React.FC<SearchFilterProps> = ({ data, isVisible, children }) => {\r\n  const [selectedFilter, setSelectedFilter] = useState<CategoryType[]>([]);\r\n  const [filteredResults, setFilteredResults] = useState<CategoryComponents[] | null>(data);\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const filterElements = useMemo(\r\n    () =>\r\n      categoriesList.map((filter, index) => (\r\n        <Col key={index} xs={12} sm={8} md={12} xl={8}>\r\n          <S.CheckBox key={index} value={filter.name}>\r\n            {t(filter.title)}\r\n          </S.CheckBox>\r\n        </Col>\r\n      )),\r\n    [t],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      if (selectedFilter.length > 0) {\r\n        setFilteredResults(data.filter((component) => selectedFilter.some((filter) => filter === component.category)));\r\n      } else {\r\n        setFilteredResults(data);\r\n      }\r\n    } else {\r\n      setFilteredResults(null);\r\n    }\r\n  }, [data, selectedFilter]);\r\n\r\n  return (\r\n    <>\r\n      <S.FilterWrapper isVisible={isVisible}>\r\n        <S.CheckboxGroup onChange={(checkedValues) => setSelectedFilter(checkedValues as CategoryType[])}>\r\n          <Row>{filterElements}</Row>\r\n        </S.CheckboxGroup>\r\n      </S.FilterWrapper>\r\n\r\n      {filteredResults && children(filteredResults)}\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}