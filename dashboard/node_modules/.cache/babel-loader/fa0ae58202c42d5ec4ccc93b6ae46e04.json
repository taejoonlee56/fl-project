{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/tj/fl-carla/dashboard/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7;\n\nimport styled from 'styled-components';\nimport { Typography } from 'antd';\nimport { hexToRGB } from 'utils/utils';\nexport var Wrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  text-align: center;\\n  display: flex;\\n  flex-direction: column;\\n\"])));\nexport var ImgWrapper = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  width: 6.9375rem;\\n  margin: 0 auto 1.25rem auto;\\n  display: flex;\\n  justify-content: center;\\n  border-radius: 50%;\\n\\n  background: \", \";\\n\\n  @media only screen and \", \" {\\n    width: 11.125rem;\\n    margin: 0 auto 2rem auto;\\n  }\\n\\n  & > span {\\n    margin: 5px;\\n    width: calc(100% - 10px);\\n    height: calc(100% - 10px);\\n\\n    @media only screen and \", \" {\\n      margin: 7px;\\n    }\\n  }\\n\"])), function (props) {\n  return props.theme.colors.main.angularGradient;\n}, function (props) {\n  return props.theme.media.xl;\n}, function (props) {\n  return props.theme.media.xl;\n});\nexport var Title = styled(Typography.Text)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  font-size: 1.125rem;\\n  font-weight: 700;\\n  margin-bottom: 0.5rem;\\n\\n  @media only screen and \", \" {\\n    font-size: 1.5rem;\\n    margin-bottom: 1rem;\\n  }\\n\"])), function (props) {\n  return props.theme.media.xl;\n});\nexport var Subtitle = styled(Typography.Text)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  margin-bottom: 2rem;\\n\\n  @media only screen and \", \" {\\n    font-weight: 600;\\n    font-size: 1rem;\\n    margin-bottom: 2.5rem;\\n  }\\n\"])), function (props) {\n  return props.theme.media.xl;\n});\nexport var FullnessWrapper = styled.div(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n  border-radius: 50px;\\n  height: 1.875rem;\\n  margin-bottom: 0.625rem;\\n\\n  background-color: \", \";\\n\\n  @media only screen and \", \" {\\n    height: 2.5rem;\\n    margin-bottom: 1rem;\\n  }\\n\"])), function (props) {\n  return hexToRGB(props.theme.colors.main.warning, 0.5);\n}, function (props) {\n  return props.theme.media.xl;\n});\nexport var FullnessLine = styled.div(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: flex-end;\\n  align-items: center;\\n  height: 100%;\\n  padding-right: 0.625rem;\\n  border-radius: 50px;\\n\\n  width: \", \"%;\\n\\n  background: linear-gradient(\\n    90deg,\\n    \", \" 0%,\\n    \", \" 100%\\n  );\\n\\n  color: \", \";\\n\\n  @media only screen and \", \" {\\n    font-size: 1rem;\\n    font-weight: 600;\\n    padding-right: 0.875rem;\\n  }\\n\"])), function (props) {\n  return props.width;\n}, function (props) {\n  return props.theme.colors.main.warning;\n}, function (props) {\n  return props.theme.colors.main.error;\n}, function (props) {\n  return props.theme.colors.text.secondary;\n}, function (props) {\n  return props.theme.media.xl;\n});\nexport var Text = styled(Typography.Text)(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n  font-size: 0.75rem;\\n  text-align: left;\\n\\n  color: \", \";\\n\\n  @media only screen and \", \" {\\n    text-align: center;\\n  }\\n\\n  @media only screen and \", \" {\\n    font-size: 0.875rem;\\n    text-align: left;\\n  }\\n\"])), function (props) {\n  return props.theme.colors.text.main;\n}, function (props) {\n  return props.theme.media.md;\n}, function (props) {\n  return props.theme.media.xl;\n});","map":{"version":3,"sources":["/home/tj/fl-carla/dashboard/src/components/profile/profileCard/ProfileInfo/ProfileInfo.styles.ts"],"names":["styled","Typography","hexToRGB","Wrapper","div","ImgWrapper","props","theme","colors","main","angularGradient","media","xl","Title","Text","Subtitle","FullnessWrapper","warning","FullnessLine","width","error","text","secondary","md"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,QAAT,QAAyB,aAAzB;AAMA,OAAO,IAAMC,OAAO,GAAGH,MAAM,CAACI,GAAV,2IAAb;AAMP,OAAO,IAAMC,UAAU,GAAGL,MAAM,CAACI,GAAV,+dAOP,UAACE,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,IAAnB,CAAwBC,eAAnC;AAAA,CAPO,EASI,UAACJ,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAN,CAAYI,KAAZ,CAAkBC,EAA7B;AAAA,CATJ,EAmBM,UAACN,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAN,CAAYI,KAAZ,CAAkBC,EAA7B;AAAA,CAnBN,CAAhB;AAyBP,OAAO,IAAMC,KAAK,GAAGb,MAAM,CAACC,UAAU,CAACa,IAAZ,CAAT,2OAKS,UAACR,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAN,CAAYI,KAAZ,CAAkBC,EAA7B;AAAA,CALT,CAAX;AAWP,OAAO,IAAMG,QAAQ,GAAGf,MAAM,CAACC,UAAU,CAACa,IAAZ,CAAT,mNAGM,UAACR,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAN,CAAYI,KAAZ,CAAkBC,EAA7B;AAAA,CAHN,CAAd;AAUP,OAAO,IAAMI,eAAe,GAAGhB,MAAM,CAACI,GAAV,uQAKN,UAACE,KAAD;AAAA,SAAWJ,QAAQ,CAACI,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,IAAnB,CAAwBQ,OAAzB,EAAkC,GAAlC,CAAnB;AAAA,CALM,EAOD,UAACX,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAN,CAAYI,KAAZ,CAAkBC,EAA7B;AAAA,CAPC,CAArB;AAaP,OAAO,IAAMM,YAAY,GAAGlB,MAAM,CAACI,GAAV,gcAQd,UAACE,KAAD;AAAA,SAAWA,KAAK,CAACa,KAAjB;AAAA,CARc,EAYnB,UAACb,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,IAAnB,CAAwBQ,OAAnC;AAAA,CAZmB,EAanB,UAACX,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,IAAnB,CAAwBW,KAAnC;AAAA,CAbmB,EAgBd,UAACd,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBa,IAAnB,CAAwBC,SAAnC;AAAA,CAhBc,EAkBE,UAAChB,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAN,CAAYI,KAAZ,CAAkBC,EAA7B;AAAA,CAlBF,CAAlB;AAyBP,OAAO,IAAME,IAAI,GAAGd,MAAM,CAACC,UAAU,CAACa,IAAZ,CAAT,kSAIN,UAACR,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBa,IAAnB,CAAwBZ,IAAnC;AAAA,CAJM,EAMU,UAACH,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAN,CAAYI,KAAZ,CAAkBY,EAA7B;AAAA,CANV,EAUU,UAACjB,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAN,CAAYI,KAAZ,CAAkBC,EAA7B;AAAA,CAVV,CAAV","sourcesContent":["import styled from 'styled-components';\nimport { Typography } from 'antd';\nimport { hexToRGB } from 'utils/utils';\n\ninterface FullnessLineProps {\n  width: number;\n}\n\nexport const Wrapper = styled.div`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ImgWrapper = styled.div`\n  width: 6.9375rem;\n  margin: 0 auto 1.25rem auto;\n  display: flex;\n  justify-content: center;\n  border-radius: 50%;\n\n  background: ${(props) => props.theme.colors.main.angularGradient};\n\n  @media only screen and ${(props) => props.theme.media.xl} {\n    width: 11.125rem;\n    margin: 0 auto 2rem auto;\n  }\n\n  & > span {\n    margin: 5px;\n    width: calc(100% - 10px);\n    height: calc(100% - 10px);\n\n    @media only screen and ${(props) => props.theme.media.xl} {\n      margin: 7px;\n    }\n  }\n`;\n\nexport const Title = styled(Typography.Text)`\n  font-size: 1.125rem;\n  font-weight: 700;\n  margin-bottom: 0.5rem;\n\n  @media only screen and ${(props) => props.theme.media.xl} {\n    font-size: 1.5rem;\n    margin-bottom: 1rem;\n  }\n`;\n\nexport const Subtitle = styled(Typography.Text)`\n  margin-bottom: 2rem;\n\n  @media only screen and ${(props) => props.theme.media.xl} {\n    font-weight: 600;\n    font-size: 1rem;\n    margin-bottom: 2.5rem;\n  }\n`;\n\nexport const FullnessWrapper = styled.div`\n  border-radius: 50px;\n  height: 1.875rem;\n  margin-bottom: 0.625rem;\n\n  background-color: ${(props) => hexToRGB(props.theme.colors.main.warning, 0.5)};\n\n  @media only screen and ${(props) => props.theme.media.xl} {\n    height: 2.5rem;\n    margin-bottom: 1rem;\n  }\n`;\n\nexport const FullnessLine = styled.div<FullnessLineProps>`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  height: 100%;\n  padding-right: 0.625rem;\n  border-radius: 50px;\n\n  width: ${(props) => props.width}%;\n\n  background: linear-gradient(\n    90deg,\n    ${(props) => props.theme.colors.main.warning} 0%,\n    ${(props) => props.theme.colors.main.error} 100%\n  );\n\n  color: ${(props) => props.theme.colors.text.secondary};\n\n  @media only screen and ${(props) => props.theme.media.xl} {\n    font-size: 1rem;\n    font-weight: 600;\n    padding-right: 0.875rem;\n  }\n`;\n\nexport const Text = styled(Typography.Text)`\n  font-size: 0.75rem;\n  text-align: left;\n\n  color: ${(props) => props.theme.colors.text.main};\n\n  @media only screen and ${(props) => props.theme.media.md} {\n    text-align: center;\n  }\n\n  @media only screen and ${(props) => props.theme.media.xl} {\n    font-size: 0.875rem;\n    text-align: left;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}