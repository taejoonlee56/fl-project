{"ast":null,"code":"import _defineProperty from \"/home/tj/fl-carla/dashboard/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/tj/fl-carla/dashboard/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/tj/fl-carla/dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/tj/fl-carla/dashboard/src/components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorAuth.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { TwoFactorOptions } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorOptions/TwoFactorOptions';\nimport { TwoFactorSwitch } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorSwitch/TwoFactorSwitch';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { SecurityCodeForm } from '@app/components/auth/SecurityCodeForm/SecurityCodeForm';\nimport { notificationController } from '@app/controllers/notificationController';\nimport { setUser } from '@app/store/slices/userSlice';\nimport { useAppDispatch, useAppSelector } from '@app/hooks/reduxHooks';\nimport * as S from './TwoFactorAuth.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var TwoFactorAuth = function TwoFactorAuth() {\n  _s();\n\n  var user = useAppSelector(function (state) {\n    return state.user.user;\n  });\n  var isNeedToShowVerifyBtn = useMemo(function () {\n    return (user === null || user === void 0 ? void 0 : user.email.name) && !(user !== null && user !== void 0 && user.email.verified) || (user === null || user === void 0 ? void 0 : user.phone.number) && !(user !== null && user !== void 0 && user.phone.verified);\n  }, [user]);\n\n  var _useState = useState(Boolean(isNeedToShowVerifyBtn)),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFieldsChanged = _useState2[0],\n      setFieldsChanged = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(Boolean((user === null || user === void 0 ? void 0 : user.email.verified) || (user === null || user === void 0 ? void 0 : user.phone.verified))),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isEnabled = _useState6[0],\n      setEnabled = _useState6[1];\n\n  var _useState7 = useState('email'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedOption = _useState8[0],\n      setSelectedOption = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isClickedVerify = _useState10[0],\n      setClickedVerify = _useState10[1];\n\n  var dispatch = useAppDispatch();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var onClickVerify = function onClickVerify() {\n    setClickedVerify(true);\n  };\n\n  var onVerify = useCallback(function () {\n    if (user && selectedOption) {\n      setLoading(false);\n      setFieldsChanged(false);\n      setClickedVerify(false);\n      notificationController.success({\n        message: t('common.success')\n      });\n\n      var newUser = _objectSpread(_objectSpread({}, user), {}, _defineProperty({}, selectedOption, _objectSpread(_objectSpread({}, user[selectedOption]), {}, {\n        verified: true\n      })));\n\n      dispatch(setUser(newUser));\n    }\n  }, [dispatch, selectedOption, t, user]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BaseButtonsForm, {\n      name: \"twoFactorAuth\",\n      requiredMark: \"optional\",\n      isFieldsChanged: isFieldsChanged,\n      onFieldsChange: function onFieldsChange() {\n        return setFieldsChanged(true);\n      },\n      initialValues: {\n        email: user === null || user === void 0 ? void 0 : user.email.name,\n        phone: user === null || user === void 0 ? void 0 : user.phone.number\n      },\n      footer: isEnabled && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"link\",\n        loading: isLoading,\n        htmlType: \"submit\",\n        children: t('profile.nav.securitySettings.verify')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, _this) || /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, _this),\n      onFinish: onClickVerify,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsxDEV(TwoFactorSwitch, {\n            isEnabled: isEnabled,\n            setEnabled: setEnabled\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, _this), isEnabled && /*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsxDEV(TwoFactorOptions, {\n            selectedOption: selectedOption,\n            setSelectedOption: setSelectedOption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(S.AuthModal, {\n      destroyOnClose: true,\n      visible: isClickedVerify,\n      footer: false,\n      closable: false,\n      onCancel: function onCancel() {\n        return setClickedVerify(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(SecurityCodeForm, {\n        onBack: function onBack() {\n          return setClickedVerify(false);\n        },\n        onFinish: onVerify\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(TwoFactorAuth, \"IezeX7mgArfGNZNlGPjl74satEc=\", false, function () {\n  return [useAppSelector, useAppDispatch, useTranslation];\n});\n\n_c = TwoFactorAuth;\n\nvar _c;\n\n$RefreshReg$(_c, \"TwoFactorAuth\");","map":{"version":3,"sources":["/home/tj/fl-carla/dashboard/src/components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorAuth.tsx"],"names":["React","useCallback","useMemo","useState","Col","Row","useTranslation","BaseButtonsForm","TwoFactorOptions","TwoFactorSwitch","Button","SecurityCodeForm","notificationController","setUser","useAppDispatch","useAppSelector","S","TwoFactorAuth","user","state","isNeedToShowVerifyBtn","email","name","verified","phone","number","Boolean","isFieldsChanged","setFieldsChanged","isLoading","setLoading","isEnabled","setEnabled","selectedOption","setSelectedOption","isClickedVerify","setClickedVerify","dispatch","t","onClickVerify","onVerify","success","message","newUser"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { TwoFactorOptions } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorOptions/TwoFactorOptions';\nimport { TwoFactorSwitch } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorSwitch/TwoFactorSwitch';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { SecurityCodeForm } from '@app/components/auth/SecurityCodeForm/SecurityCodeForm';\nimport { notificationController } from '@app/controllers/notificationController';\nimport { setUser } from '@app/store/slices/userSlice';\nimport { useAppDispatch, useAppSelector } from '@app/hooks/reduxHooks';\nimport { TwoFactorAuthOption } from '@app/interfaces/interfaces';\nimport * as S from './TwoFactorAuth.styles';\n\nexport interface CurrentOption {\n  value: 'phone' | 'email';\n  isVerified: boolean;\n}\n\nexport type TwoFactorAuthOptionState = TwoFactorAuthOption | null;\n\nexport const TwoFactorAuth: React.FC = () => {\n  const user = useAppSelector((state) => state.user.user);\n\n  const isNeedToShowVerifyBtn = useMemo(\n    () => (user?.email.name && !user?.email.verified) || (user?.phone.number && !user?.phone.verified),\n    [user],\n  );\n\n  const [isFieldsChanged, setFieldsChanged] = useState(Boolean(isNeedToShowVerifyBtn));\n  const [isLoading, setLoading] = useState(false);\n\n  const [isEnabled, setEnabled] = useState(Boolean(user?.email.verified || user?.phone.verified));\n  const [selectedOption, setSelectedOption] = useState<TwoFactorAuthOptionState>('email');\n  const [isClickedVerify, setClickedVerify] = useState(false);\n\n  const dispatch = useAppDispatch();\n\n  const { t } = useTranslation();\n\n  const onClickVerify = () => {\n    setClickedVerify(true);\n  };\n\n  const onVerify = useCallback(() => {\n    if (user && selectedOption) {\n      setLoading(false);\n      setFieldsChanged(false);\n      setClickedVerify(false);\n      notificationController.success({ message: t('common.success') });\n\n      const newUser = { ...user, [selectedOption]: { ...user[selectedOption], verified: true } };\n\n      dispatch(setUser(newUser));\n    }\n  }, [dispatch, selectedOption, t, user]);\n\n  return (\n    <>\n      <BaseButtonsForm\n        name=\"twoFactorAuth\"\n        requiredMark=\"optional\"\n        isFieldsChanged={isFieldsChanged}\n        onFieldsChange={() => setFieldsChanged(true)}\n        initialValues={{\n          email: user?.email.name,\n          phone: user?.phone.number,\n        }}\n        footer={\n          (isEnabled && (\n            <Button type=\"link\" loading={isLoading} htmlType=\"submit\">\n              {t('profile.nav.securitySettings.verify')}\n            </Button>\n          )) || <span />\n        }\n        onFinish={onClickVerify}\n      >\n        <Row>\n          <Col span={24}>\n            <TwoFactorSwitch isEnabled={isEnabled} setEnabled={setEnabled} />\n          </Col>\n\n          {isEnabled && (\n            <Col span={24}>\n              <TwoFactorOptions selectedOption={selectedOption} setSelectedOption={setSelectedOption} />\n            </Col>\n          )}\n        </Row>\n      </BaseButtonsForm>\n      <S.AuthModal\n        destroyOnClose\n        visible={isClickedVerify}\n        footer={false}\n        closable={false}\n        onCancel={() => setClickedVerify(false)}\n      >\n        <SecurityCodeForm onBack={() => setClickedVerify(false)} onFinish={onVerify} />\n      </S.AuthModal>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}