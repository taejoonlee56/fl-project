{"ast":null,"code":"var _jsxFileName = \"D:\\\\fl-carla\\\\src\\\\components\\\\header\\\\dropdowns\\\\settingsDropdown\\\\settingsOverlay\\\\SettingsOverlay\\\\SettingsOverlay.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { DropdownCollapse } from '@app/components/header/Header/Header.styles';\nimport { useTranslation } from 'react-i18next';\nimport { LanguagePicker } from '../LanguagePicker/LanguagePicker';\nimport { NightModeSettings } from '../nightModeSettings/NightModeSettings';\nimport { ThemePicker } from '../ThemePicker/ThemePicker';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport * as S from './SettingsOverlay.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var SettingsOverlay = function SettingsOverlay() {\n  _s();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useAppSelector = useAppSelector(function (state) {\n    return state.pwa;\n  }),\n      isPWASupported = _useAppSelector.isPWASupported,\n      event = _useAppSelector.event;\n\n  return /*#__PURE__*/_jsxDEV(S.SettingsOverlayMenu, {\n    mode: \"inline\",\n    selectable: false,\n    children: [/*#__PURE__*/_jsxDEV(DropdownCollapse, {\n      bordered: false,\n      expandIconPosition: \"right\",\n      ghost: true,\n      defaultActiveKey: \"themePicker\",\n      children: [/*#__PURE__*/_jsxDEV(DropdownCollapse.Panel, {\n        header: t('header.changeLanguage'),\n        children: /*#__PURE__*/_jsxDEV(LanguagePicker, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, _this)\n      }, \"languagePicker\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(DropdownCollapse.Panel, {\n        header: t('header.changeTheme'),\n        children: /*#__PURE__*/_jsxDEV(ThemePicker, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, _this)\n      }, \"themePicker\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(DropdownCollapse.Panel, {\n        header: t('header.nightMode.title'),\n        children: /*#__PURE__*/_jsxDEV(NightModeSettings, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, _this)\n      }, \"nightMode\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this), isPWASupported && /*#__PURE__*/_jsxDEV(S.PwaInstallWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        block: true,\n        type: \"primary\",\n        onClick: function onClick() {\n          return event && event.prompt();\n        },\n        children: t('common.pwa')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(SettingsOverlay, \"KJVv6ShkKmvdM2ZdwaaHQDQ7ooM=\", false, function () {\n  return [useTranslation, useAppSelector];\n});\n\n_c = SettingsOverlay;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingsOverlay\");","map":{"version":3,"sources":["D:/fl-carla/src/components/header/dropdowns/settingsDropdown/settingsOverlay/SettingsOverlay/SettingsOverlay.tsx"],"names":["React","DropdownCollapse","useTranslation","LanguagePicker","NightModeSettings","ThemePicker","Button","useAppSelector","S","SettingsOverlay","t","state","pwa","isPWASupported","event","prompt"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,6CAAjC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,iBAAT,QAAkC,wCAAlC;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,MAAT,QAAuB,8CAAvB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAO,KAAKC,CAAZ,MAAmB,0BAAnB;;AAEA,OAAO,IAAMC,eAAyB,GAAG,SAA5BA,eAA4B,GAAM;AAAA;;AAC7C,wBAAcP,cAAc,EAA5B;AAAA,MAAQQ,CAAR,mBAAQA,CAAR;;AAEA,wBAAkCH,cAAc,CAAC,UAACI,KAAD;AAAA,WAAWA,KAAK,CAACC,GAAjB;AAAA,GAAD,CAAhD;AAAA,MAAQC,cAAR,mBAAQA,cAAR;AAAA,MAAwBC,KAAxB,mBAAwBA,KAAxB;;AAEA,sBACE,QAAC,CAAD,CAAG,mBAAH;AAAuB,IAAA,IAAI,EAAC,QAA5B;AAAqC,IAAA,UAAU,EAAE,KAAjD;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,QAAQ,EAAE,KAA5B;AAAmC,MAAA,kBAAkB,EAAC,OAAtD;AAA8D,MAAA,KAAK,MAAnE;AAAoE,MAAA,gBAAgB,EAAC,aAArF;AAAA,8BACE,QAAC,gBAAD,CAAkB,KAAlB;AAAwB,QAAA,MAAM,EAAEJ,CAAC,CAAC,uBAAD,CAAjC;AAAA,+BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF,SAAgE,gBAAhE;AAAA;AAAA;AAAA;AAAA,eADF,eAIE,QAAC,gBAAD,CAAkB,KAAlB;AAAwB,QAAA,MAAM,EAAEA,CAAC,CAAC,oBAAD,CAAjC;AAAA,+BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF,SAA6D,aAA7D;AAAA;AAAA;AAAA;AAAA,eAJF,eAOE,QAAC,gBAAD,CAAkB,KAAlB;AAAwB,QAAA,MAAM,EAAEA,CAAC,CAAC,wBAAD,CAAjC;AAAA,+BACE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AADF,SAAiE,WAAjE;AAAA;AAAA;AAAA;AAAA,eAPF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAYGG,cAAc,iBACb,QAAC,CAAD,CAAG,iBAAH;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,MAAb;AAAc,QAAA,IAAI,EAAC,SAAnB;AAA6B,QAAA,OAAO,EAAE;AAAA,iBAAMC,KAAK,IAAKA,KAAD,CAAoCC,MAApC,EAAf;AAAA,SAAtC;AAAA,kBACGL,CAAC,CAAC,YAAD;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAsBD,CA3BM;;GAAMD,e;UACGP,c,EAEoBK,c;;;KAHvBE,e","sourcesContent":["import React from 'react';\r\nimport { DropdownCollapse } from '@app/components/header/Header/Header.styles';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { LanguagePicker } from '../LanguagePicker/LanguagePicker';\r\nimport { NightModeSettings } from '../nightModeSettings/NightModeSettings';\r\nimport { ThemePicker } from '../ThemePicker/ThemePicker';\r\nimport { Button } from '@app/components/common/buttons/Button/Button';\r\nimport { useAppSelector } from '@app/hooks/reduxHooks';\r\nimport * as S from './SettingsOverlay.styles';\r\n\r\nexport const SettingsOverlay: React.FC = () => {\r\n  const { t } = useTranslation();\r\n\r\n  const { isPWASupported, event } = useAppSelector((state) => state.pwa);\r\n\r\n  return (\r\n    <S.SettingsOverlayMenu mode=\"inline\" selectable={false}>\r\n      <DropdownCollapse bordered={false} expandIconPosition=\"right\" ghost defaultActiveKey=\"themePicker\">\r\n        <DropdownCollapse.Panel header={t('header.changeLanguage')} key=\"languagePicker\">\r\n          <LanguagePicker />\r\n        </DropdownCollapse.Panel>\r\n        <DropdownCollapse.Panel header={t('header.changeTheme')} key=\"themePicker\">\r\n          <ThemePicker />\r\n        </DropdownCollapse.Panel>\r\n        <DropdownCollapse.Panel header={t('header.nightMode.title')} key=\"nightMode\">\r\n          <NightModeSettings />\r\n        </DropdownCollapse.Panel>\r\n      </DropdownCollapse>\r\n      {isPWASupported && (\r\n        <S.PwaInstallWrapper>\r\n          <Button block type=\"primary\" onClick={() => event && (event as BeforeInstallPromptEvent).prompt()}>\r\n            {t('common.pwa')}\r\n          </Button>\r\n        </S.PwaInstallWrapper>\r\n      )}\r\n    </S.SettingsOverlayMenu>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}