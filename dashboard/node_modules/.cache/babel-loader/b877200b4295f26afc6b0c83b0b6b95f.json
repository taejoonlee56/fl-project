{"ast":null,"code":"import _slicedToArray from \"/home/tj/fl-carla/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useThemeSwitcher } from 'react-css-theme-switcher';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var ThemeSwitcher = function ThemeSwitcher(_ref) {\n  _s();\n\n  var theme = _ref.theme,\n      children = _ref.children;\n\n  var _useThemeSwitcher = useThemeSwitcher(),\n      switcher = _useThemeSwitcher.switcher,\n      themes = _useThemeSwitcher.themes,\n      status = _useThemeSwitcher.status;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isThemesLoaded = _useState2[0],\n      setThemesLoaded = _useState2[1];\n\n  useEffect(function () {\n    if (!isThemesLoaded && status === 'loaded') {\n      setThemesLoaded(true);\n      var initSpinner = document.getElementById('initSpinner');\n\n      if (initSpinner) {\n        initSpinner.style.display = 'none';\n      }\n    }\n  }, [isThemesLoaded, setThemesLoaded, status]);\n  useEffect(function () {\n    switcher({\n      theme: theme === 'dark' ? themes.dark : themes.light\n    });\n  }, [switcher, theme, themes.dark, themes.light]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n\n_s(ThemeSwitcher, \"LYYv5P9vTtvIFpihd0F4dwgdukA=\", false, function () {\n  return [useThemeSwitcher];\n});\n\n_c = ThemeSwitcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeSwitcher\");","map":{"version":3,"sources":["/home/tj/fl-carla/src/components/common/ThemeSwitcher.tsx"],"names":["React","useEffect","useState","useThemeSwitcher","ThemeSwitcher","theme","children","switcher","themes","status","isThemesLoaded","setThemesLoaded","initSpinner","document","getElementById","style","display","dark","light"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,gBAAT,QAAiC,0BAAjC;;;AAMA,OAAO,IAAMC,aAA2C,GAAG,SAA9CA,aAA8C,OAAyB;AAAA;;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAClF,0BAAqCH,gBAAgB,EAArD;AAAA,MAAQI,QAAR,qBAAQA,QAAR;AAAA,MAAkBC,MAAlB,qBAAkBA,MAAlB;AAAA,MAA0BC,MAA1B,qBAA0BA,MAA1B;;AACA,kBAA0CP,QAAQ,CAAC,KAAD,CAAlD;AAAA;AAAA,MAAOQ,cAAP;AAAA,MAAuBC,eAAvB;;AAEAV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACS,cAAD,IAAmBD,MAAM,KAAK,QAAlC,EAA4C;AAC1CE,MAAAA,eAAe,CAAC,IAAD,CAAf;AACA,UAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAApB;;AACA,UAAIF,WAAJ,EAAiB;AACfA,QAAAA,WAAW,CAACG,KAAZ,CAAkBC,OAAlB,GAA4B,MAA5B;AACD;AACF;AACF,GARQ,EAQN,CAACN,cAAD,EAAiBC,eAAjB,EAAkCF,MAAlC,CARM,CAAT;AAUAR,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,QAAQ,CAAC;AAAEF,MAAAA,KAAK,EAAEA,KAAK,KAAK,MAAV,GAAmBG,MAAM,CAACS,IAA1B,GAAiCT,MAAM,CAACU;AAAjD,KAAD,CAAR;AACD,GAFQ,EAEN,CAACX,QAAD,EAAWF,KAAX,EAAkBG,MAAM,CAACS,IAAzB,EAA+BT,MAAM,CAACU,KAAtC,CAFM,CAAT;AAIA,sBAAO;AAAA,cAAGZ;AAAH,mBAAP;AACD,CAnBM;;GAAMF,a;UAC0BD,gB;;;KAD1BC,a","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useThemeSwitcher } from 'react-css-theme-switcher';\n\ninterface ThemeSwitcherProps {\n  theme: string;\n}\n\nexport const ThemeSwitcher: React.FC<ThemeSwitcherProps> = ({ theme, children }) => {\n  const { switcher, themes, status } = useThemeSwitcher();\n  const [isThemesLoaded, setThemesLoaded] = useState(false);\n\n  useEffect(() => {\n    if (!isThemesLoaded && status === 'loaded') {\n      setThemesLoaded(true);\n      const initSpinner = document.getElementById('initSpinner');\n      if (initSpinner) {\n        initSpinner.style.display = 'none';\n      }\n    }\n  }, [isThemesLoaded, setThemesLoaded, status]);\n\n  useEffect(() => {\n    switcher({ theme: theme === 'dark' ? themes.dark : themes.light });\n  }, [switcher, theme, themes.dark, themes.light]);\n\n  return <>{children}</>;\n};\n"]},"metadata":{},"sourceType":"module"}