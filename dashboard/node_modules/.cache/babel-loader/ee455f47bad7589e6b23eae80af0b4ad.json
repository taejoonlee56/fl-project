{"ast":null,"code":"import _objectSpread from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\nimport _slicedToArray from \"D:\\\\fl-carla\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"D:\\\\fl-carla\\\\src\\\\components\\\\header\\\\dropdowns\\\\searchDropdown\\\\SearchDropdown.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { FilterIcon } from 'components/common/icons/FilterIcon';\nimport { SearchOverlay } from './searchOverlay/SearchOverlay/SearchOverlay';\nimport { Dropdown } from 'antd';\nimport { DropdownHeader } from '@app/components/header/Header/Header.styles';\nimport { Btn, InputSearch } from '../../HeaderSearch/HeaderSearch.styles';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var SearchDropdown = function SearchDropdown(_ref) {\n  _s();\n\n  var query = _ref.query,\n      setQuery = _ref.setQuery,\n      data = _ref.data,\n      isOverlayVisible = _ref.isOverlayVisible,\n      setOverlayVisible = _ref.setOverlayVisible;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFilterVisible = _useState2[0],\n      setFilterActive = _useState2[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  useEffect(function () {\n    setOverlayVisible(!!query || isFilterVisible);\n  }, [query, isFilterVisible, setOverlayVisible]); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  var ref = useRef(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dropdown, _objectSpread(_objectSpread({}, (!!data || isFilterVisible) && {\n      trigger: ['click'],\n      onVisibleChange: setOverlayVisible\n    }), {}, {\n      overlayClassName: \"search-dropdown\",\n      overlay: /*#__PURE__*/_jsxDEV(SearchOverlay, {\n        data: data,\n        isFilterVisible: isFilterVisible\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 18\n      }, _this),\n      visible: isOverlayVisible,\n      getPopupContainer: function getPopupContainer() {\n        return ref.current;\n      },\n      children: /*#__PURE__*/_jsxDEV(DropdownHeader, {\n        children: [/*#__PURE__*/_jsxDEV(InputSearch, {\n          width: \"100%\",\n          value: query,\n          placeholder: t('header.search'),\n          filter: /*#__PURE__*/_jsxDEV(Btn, {\n            size: \"small\",\n            type: isFilterVisible ? 'ghost' : 'text',\n            \"aria-label\": \"Filter\",\n            icon: /*#__PURE__*/_jsxDEV(FilterIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 23\n            }, _this),\n            onClick: function onClick() {\n              return setFilterActive(!isFilterVisible);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, _this),\n          onChange: function onChange(event) {\n            return setQuery(event.target.value);\n          },\n          enterButton: null,\n          addonAfter: null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: ref\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, _this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(SearchDropdown, \"tD1qNjc7+uPCBo4ax+Yd5ZoEARQ=\", false, function () {\n  return [useTranslation];\n});\n\n_c = SearchDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchDropdown\");","map":{"version":3,"sources":["D:/fl-carla/src/components/header/dropdowns/searchDropdown/SearchDropdown.tsx"],"names":["React","useEffect","useRef","useState","FilterIcon","SearchOverlay","Dropdown","DropdownHeader","Btn","InputSearch","useTranslation","SearchDropdown","query","setQuery","data","isOverlayVisible","setOverlayVisible","isFilterVisible","setFilterActive","t","ref","trigger","onVisibleChange","current","event","target","value"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,UAAT,QAA2B,oCAA3B;AACA,SAASC,aAAT,QAA8B,6CAA9B;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,SAASC,cAAT,QAA+B,6CAA/B;AAEA,SAASC,GAAT,EAAcC,WAAd,QAAiC,wCAAjC;AACA,SAASC,cAAT,QAA+B,eAA/B;;;AAUA,OAAO,IAAMC,cAA4C,GAAG,SAA/CA,cAA+C,OAMtD;AAAA;;AAAA,MALJC,KAKI,QALJA,KAKI;AAAA,MAJJC,QAII,QAJJA,QAII;AAAA,MAHJC,IAGI,QAHJA,IAGI;AAAA,MAFJC,gBAEI,QAFJA,gBAEI;AAAA,MADJC,iBACI,QADJA,iBACI;;AACJ,kBAA2Cb,QAAQ,CAAC,KAAD,CAAnD;AAAA;AAAA,MAAOc,eAAP;AAAA,MAAwBC,eAAxB;;AAEA,wBAAcR,cAAc,EAA5B;AAAA,MAAQS,CAAR,mBAAQA,CAAR;;AAEAlB,EAAAA,SAAS,CAAC,YAAM;AACde,IAAAA,iBAAiB,CAAC,CAAC,CAACJ,KAAF,IAAWK,eAAZ,CAAjB;AACD,GAFQ,EAEN,CAACL,KAAD,EAAQK,eAAR,EAAyBD,iBAAzB,CAFM,CAAT,CALI,CASJ;;AACA,MAAMI,GAAG,GAAGlB,MAAM,CAAM,IAAN,CAAlB;AAEA,sBACE;AAAA,2BACE,QAAC,QAAD,kCACO,CAAC,CAAC,CAACY,IAAF,IAAUG,eAAX,KAA+B;AAAEI,MAAAA,OAAO,EAAE,CAAC,OAAD,CAAX;AAAsBC,MAAAA,eAAe,EAAEN;AAAvC,KADtC;AAEE,MAAA,gBAAgB,EAAC,iBAFnB;AAGE,MAAA,OAAO,eAAE,QAAC,aAAD;AAAe,QAAA,IAAI,EAAEF,IAArB;AAA2B,QAAA,eAAe,EAAEG;AAA5C;AAAA;AAAA;AAAA;AAAA,eAHX;AAIE,MAAA,OAAO,EAAEF,gBAJX;AAKE,MAAA,iBAAiB,EAAE;AAAA,eAAMK,GAAG,CAACG,OAAV;AAAA,OALrB;AAAA,6BAOE,QAAC,cAAD;AAAA,gCACE,QAAC,WAAD;AACE,UAAA,KAAK,EAAC,MADR;AAEE,UAAA,KAAK,EAAEX,KAFT;AAGE,UAAA,WAAW,EAAEO,CAAC,CAAC,eAAD,CAHhB;AAIE,UAAA,MAAM,eACJ,QAAC,GAAD;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,IAAI,EAAEF,eAAe,GAAG,OAAH,GAAa,MAFpC;AAGE,0BAAW,QAHb;AAIE,YAAA,IAAI,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,qBAJR;AAKE,YAAA,OAAO,EAAE;AAAA,qBAAMC,eAAe,CAAC,CAACD,eAAF,CAArB;AAAA;AALX;AAAA;AAAA;AAAA;AAAA,mBALJ;AAaE,UAAA,QAAQ,EAAE,kBAACO,KAAD;AAAA,mBAAWX,QAAQ,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAnB;AAAA,WAbZ;AAcE,UAAA,WAAW,EAAE,IAdf;AAeE,UAAA,UAAU,EAAE;AAfd;AAAA;AAAA;AAAA;AAAA,iBADF,eAkBE;AAAK,UAAA,GAAG,EAAEN;AAAV;AAAA;AAAA;AAAA;AAAA,iBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAgCD,CAlDM;;GAAMT,c;UASGD,c;;;KATHC,c","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { FilterIcon } from 'components/common/icons/FilterIcon';\r\nimport { SearchOverlay } from './searchOverlay/SearchOverlay/SearchOverlay';\r\nimport { Dropdown } from 'antd';\r\nimport { DropdownHeader } from '@app/components/header/Header/Header.styles';\r\nimport { CategoryComponents } from 'components/header/HeaderSearch/HeaderSearch';\r\nimport { Btn, InputSearch } from '../../HeaderSearch/HeaderSearch.styles';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface SearchOverlayProps {\r\n  query: string;\r\n  setQuery: (query: string) => void;\r\n  data: CategoryComponents[] | null;\r\n  isOverlayVisible: boolean;\r\n  setOverlayVisible: (state: boolean) => void;\r\n}\r\n\r\nexport const SearchDropdown: React.FC<SearchOverlayProps> = ({\r\n  query,\r\n  setQuery,\r\n  data,\r\n  isOverlayVisible,\r\n  setOverlayVisible,\r\n}) => {\r\n  const [isFilterVisible, setFilterActive] = useState(false);\r\n\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    setOverlayVisible(!!query || isFilterVisible);\r\n  }, [query, isFilterVisible, setOverlayVisible]);\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  const ref = useRef<any>(null);\r\n\r\n  return (\r\n    <>\r\n      <Dropdown\r\n        {...((!!data || isFilterVisible) && { trigger: ['click'], onVisibleChange: setOverlayVisible })}\r\n        overlayClassName=\"search-dropdown\"\r\n        overlay={<SearchOverlay data={data} isFilterVisible={isFilterVisible} />}\r\n        visible={isOverlayVisible}\r\n        getPopupContainer={() => ref.current}\r\n      >\r\n        <DropdownHeader>\r\n          <InputSearch\r\n            width=\"100%\"\r\n            value={query}\r\n            placeholder={t('header.search')}\r\n            filter={\r\n              <Btn\r\n                size=\"small\"\r\n                type={isFilterVisible ? 'ghost' : 'text'}\r\n                aria-label=\"Filter\"\r\n                icon={<FilterIcon />}\r\n                onClick={() => setFilterActive(!isFilterVisible)}\r\n              />\r\n            }\r\n            onChange={(event) => setQuery(event.target.value)}\r\n            enterButton={null}\r\n            addonAfter={null}\r\n          />\r\n          <div ref={ref} />\r\n        </DropdownHeader>\r\n      </Dropdown>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}