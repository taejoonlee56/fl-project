{"ast":null,"code":"var _jsxFileName = \"D:\\\\fl-carla\\\\src\\\\components\\\\charts\\\\ScatterChart\\\\ScatterChart.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Card } from 'components/common/Card/Card';\nimport { BaseChart } from 'components/common/charts/BaseChart';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar data = [[170.0, 59.0], [159.1, 47.6], [166.0, 69.8], [176.2, 66.8], [160.2, 75.2], [172.5, 55.2], [170.9, 54.2], [172.9, 62.5], [153.4, 42.0], [160.0, 50.0], [147.2, 49.8], [168.2, 49.2], [175.0, 73.2], [157.0, 47.8], [167.6, 68.8], [159.5, 50.6], [175.0, 82.5], [166.8, 57.2], [176.5, 87.8], [170.2, 72.8], [174.0, 54.5], [173.0, 59.8], [179.9, 67.3], [170.5, 67.8], [160.0, 47.0]];\nvar markLineOpt = {\n  animation: false,\n  lineStyle: {\n    width: 0\n  },\n  data: [[{\n    coord: [0, 3],\n    symbol: 'none'\n  }, {\n    coord: [20, 13],\n    symbol: 'none'\n  }]]\n};\nvar defaultOption = {\n  grid: {\n    top: 10,\n    right: 30,\n    bottom: 0,\n    left: 15,\n    containLabel: true\n  },\n  tooltip: {\n    showDelay: 0,\n    // eslint-disable-next-line\n    formatter: function formatter(params) {\n      return params.value.length > 1 ? \"\".concat(params.value[0], \"cm \").concat(params.value[1], \"kg \") : \"\".concat(params.name, \": \").concat(params.value, \" 'kg \");\n    },\n    axisPointer: {\n      show: true,\n      type: 'cross',\n      lineStyle: {\n        type: 'dashed',\n        width: 1\n      }\n    }\n  },\n  xAxis: {\n    gridIndex: 0,\n    min: 140,\n    type: 'value',\n    scale: true,\n    axisLabel: {\n      formatter: '{value} kg'\n    },\n    splitLine: {\n      show: false\n    }\n  },\n  yAxis: {\n    gridIndex: 0,\n    min: 40,\n    type: 'value',\n    scale: true,\n    axisLabel: {\n      formatter: '{value} cm'\n    },\n    splitLine: {\n      show: false\n    }\n  },\n  series: [{\n    type: 'scatter',\n    xAxisIndex: 0,\n    yAxisIndex: 0,\n    data: data,\n    markLine: markLineOpt\n  }]\n};\nexport var ScatterChart = function ScatterChart() {\n  _s();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    padding: \"0 0 1.875rem\",\n    title: t('charts.scatter'),\n    children: /*#__PURE__*/_jsxDEV(BaseChart, {\n      option: defaultOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ScatterChart, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ScatterChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScatterChart\");","map":{"version":3,"sources":["D:/fl-carla/src/components/charts/ScatterChart/ScatterChart.tsx"],"names":["React","Card","BaseChart","useTranslation","data","markLineOpt","animation","lineStyle","width","coord","symbol","defaultOption","grid","top","right","bottom","left","containLabel","tooltip","showDelay","formatter","params","value","length","name","axisPointer","show","type","xAxis","gridIndex","min","scale","axisLabel","splitLine","yAxis","series","xAxisIndex","yAxisIndex","markLine","ScatterChart","t"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Card } from 'components/common/Card/Card';\r\nimport { BaseChart } from 'components/common/charts/BaseChart';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst data = [\r\n  [170.0, 59.0],\r\n  [159.1, 47.6],\r\n  [166.0, 69.8],\r\n  [176.2, 66.8],\r\n  [160.2, 75.2],\r\n  [172.5, 55.2],\r\n  [170.9, 54.2],\r\n  [172.9, 62.5],\r\n  [153.4, 42.0],\r\n  [160.0, 50.0],\r\n  [147.2, 49.8],\r\n  [168.2, 49.2],\r\n  [175.0, 73.2],\r\n  [157.0, 47.8],\r\n  [167.6, 68.8],\r\n  [159.5, 50.6],\r\n  [175.0, 82.5],\r\n  [166.8, 57.2],\r\n  [176.5, 87.8],\r\n  [170.2, 72.8],\r\n  [174.0, 54.5],\r\n  [173.0, 59.8],\r\n  [179.9, 67.3],\r\n  [170.5, 67.8],\r\n  [160.0, 47.0],\r\n];\r\n\r\nconst markLineOpt = {\r\n  animation: false,\r\n  lineStyle: {\r\n    width: 0,\r\n  },\r\n  data: [\r\n    [\r\n      {\r\n        coord: [0, 3],\r\n        symbol: 'none',\r\n      },\r\n      {\r\n        coord: [20, 13],\r\n        symbol: 'none',\r\n      },\r\n    ],\r\n  ],\r\n};\r\n\r\nconst defaultOption = {\r\n  grid: {\r\n    top: 10,\r\n    right: 30,\r\n    bottom: 0,\r\n    left: 15,\r\n    containLabel: true,\r\n  },\r\n  tooltip: {\r\n    showDelay: 0,\r\n    // eslint-disable-next-line\r\n    formatter: (params: any) =>\r\n      params.value.length > 1 ? `${params.value[0]}cm ${params.value[1]}kg ` : `${params.name}: ${params.value} 'kg `,\r\n    axisPointer: {\r\n      show: true,\r\n      type: 'cross',\r\n      lineStyle: {\r\n        type: 'dashed',\r\n        width: 1,\r\n      },\r\n    },\r\n  },\r\n  xAxis: {\r\n    gridIndex: 0,\r\n    min: 140,\r\n    type: 'value',\r\n    scale: true,\r\n    axisLabel: {\r\n      formatter: '{value} kg',\r\n    },\r\n    splitLine: {\r\n      show: false,\r\n    },\r\n  },\r\n  yAxis: {\r\n    gridIndex: 0,\r\n    min: 40,\r\n    type: 'value',\r\n    scale: true,\r\n    axisLabel: {\r\n      formatter: '{value} cm',\r\n    },\r\n    splitLine: {\r\n      show: false,\r\n    },\r\n  },\r\n  series: [\r\n    {\r\n      type: 'scatter',\r\n      xAxisIndex: 0,\r\n      yAxisIndex: 0,\r\n      data: data,\r\n      markLine: markLineOpt,\r\n    },\r\n  ],\r\n};\r\n\r\nexport const ScatterChart: React.FC = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Card padding=\"0 0 1.875rem\" title={t('charts.scatter')}>\r\n      <BaseChart option={defaultOption} />\r\n    </Card>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}